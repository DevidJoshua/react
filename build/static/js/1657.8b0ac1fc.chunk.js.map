{"version":3,"file":"static/js/1657.8b0ac1fc.chunk.js","mappings":"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","sources":["Pages/Category/Manifest.js","Pages/Product/Manifest.js","Pages/Product/PageUpdate.js","Pages/TokoOnline/Manifest.js","core/Pages/Tag/Manifest.js","features/PictureUpload/components/Display.js","features/PictureUpload/components/FieldUpload.js","features/TextEditor/components/FieldTextArea.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Category'\nconst entity = 'category'\nconst serviceEntity = 'Category'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Kategori Baru'\nexport const createPageTitle = 'Buat Kategori'\nexport const listallPageTitle = 'Kategori'\nexport const detailPageTitle = 'Detail Kategori'\nexport const upsertPageTitle = 'Form ' + entityName\n// export const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\n// export const updateService = 'update' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,title,toko_id{_id, name},parent_id{_id, title},created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Kategori', accessor: 'title' },\n  { Header: 'Induk', accessor: 'parent_id.title' },\n  {\n    Header: 'Toko',\n    accessor: 'toko_id',\n    Cell: d => {\n      // let data = Moment(d.cell.value)\n      // if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      // else data = ''\n      const toko = (_.map(d.cell.value || [], (v, k) => v.name) || []).join(', ')\n      return (<span>{`${toko}`}</span>)\n    }\n  }\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  // { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Product'\nconst entity = 'product'\nconst serviceEntity = 'TokoProduct'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\n\nexport const createNewButtonLabel = 'Buat Baru'\nexport const createPageTitle = 'Buat Baru'\nexport const listallPageTitle = entityName + 's'\nexport const detailPageTitle = entityName + ' Detail'\nexport const upsertPageTitle = 'Form ' + entityName\nexport const upsertService = 'upsert' + serviceEntity\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,content1,estimated_delivery_unit_time_instock,estimated_delivery_unit_time_preorder,estimated_delivery_time_instock,estimated_delivery_time_preorder,instock_label,preorder_policy,product_availability,stock_amount,weight,isneed_shipping,name,code,description,price,tag_id{_id, name},toko_id{_id, name},category_id{_id, title},image_id{_id, filename, filenameorigin, file_type},image_ids{_id, filename, filenameorigin, file_type},created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Nama', accessor: 'name' },\n  { Header: 'Kode', accessor: 'code' },\n  { Header: 'Harga', accessor: 'price' },\n  { Header: 'Kategori', accessor: p => (<span>{(_.map(p.category_id, v => v.title) || []).join(', ')}</span>) },\n  { Header: 'Toko', accessor: p => (<span>{(_.map(p.toko_id, v => v.name) || []).join(', ')}</span>) },\n  // { Header: 'Gambar', accessor: p => (<span>{(p.image_id || {}).filename}.{(p.image_id || {}).file_type}</span>) },\n  //   {\n  //     Header: 'created_at',\n  //     accessor: 'created_at',\n  //     Cell: d => {\n  //       let data = Moment(d.cell.value)\n  //       if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //       else data = ''\n  //       return (<span>{`${data}`}</span>)\n  //     }\n  //   },\n  // {\n  //   Header: 'Tanggal Diperbaharui',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' }\n//   { Header: 'updated by', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\n\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  upsertPageTitle,\n  createService,\n  detailService,\n  upsertService,\n  listallService,\n  deleteService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React from 'react'\nimport { Detail, Multiselect } from '../../core/features/TablePagination'\nimport { CardWrapperCon } from '../../core/features/TablePagination/containers'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { FieldUploadPictures } from '../../features/PictureUpload/components'\nimport { FieldTextArea } from '../../features/TextEditor/components'\n// import Immutable from 'seamless-immutable'\nimport { injectIntl } from 'react-intl'\n// import _ from 'lodash'\n// import { path } from 'ramda'\nimport AppConfig from '../../core/Config/AppConfig'\n// import { getAccessToken } from '../../core/Utils/Utils'\nimport TagManifest from '../../core/Pages/Tag/Manifest'\nimport CategoryManifest from '../Category/Manifest'\nimport TokoOnlineManifest from '../TokoOnline/Manifest'\nimport { listallPageUrl, listallPageTitle, redirectAfterDelete, upsertPageTitle, upsertService, fields, detailService } from './Manifest'\n\nfunction addField (name, title, type, dataDetail, payload, tablepaginationOnChangeForm, serviceName) {\n  return (\n    <div className='form-group'>\n      <label htmlFor={name}>{title}</label>\n      <input type={type} className='form-control' id={name} placeholder={`Masukkan ${title}`} value={typeof payload[name] !== 'undefined' ? payload[name] : dataDetail[name] || ''} onChange={e => tablepaginationOnChangeForm({ serviceName: serviceName, fieldName: name, fieldValue: e.target.value })} />\n    </div>\n  )\n}\nconst FormUpdate = (props) => {\n  // const [fileArray, setFileArray] = React.useState([])\n  // const [currentFileArray, setCurrentFileArray] = React.useState([])\n  const {\n    tablepaginationOnChangeForm,\n    dataDetail,\n    payload,\n    upsertServiceName,\n    id,\n    tablepaginationResetForm,\n    // userPrivileges,\n    fileArray,\n    formTitle,\n    detailServiceName\n    // match\n  } = props\n  React.useEffect(() => {\n    // typeof payload.estimated_delivery_time_preorder !== 'undefined' ? payload.estimated_delivery_time_preorder : dataDetail.estimated_delivery_time_preorder\n    const defaultFormValue = {\n      estimated_delivery_time_preorder: dataDetail.estimated_delivery_time_preorder || 1,\n      estimated_delivery_time_instock: dataDetail.estimated_delivery_time_instock || 1\n    }\n    if (id) defaultFormValue._id = id\n    tablepaginationResetForm({\n      isInitialReset: true,\n      serviceName: upsertServiceName,\n      defaultFormValue,\n      formSchema: {\n        price: {\n          type: 'number',\n          validate: (v, payload) => {\n            const price = typeof payload.price !== 'undefined' ? payload.price : dataDetail.price\n            if (!price) return { errorMessage: 'Anda belum mengisi Harga Produk' }\n          }\n        },\n        product_availability: { type: 'string', mandatory: true, errorMessage: 'Anda belum mengisi Ketersediaan Produk' },\n        estimated_delivery_time_instock: { type: 'number', mandatory: true, errorMessage: 'Anda belum mengisi waktu pengiriman Produk' },\n        estimated_delivery_time_preorder: {\n          type: 'number',\n          validate: (v, payload) => {\n            const preorderPolicy = typeof payload.preorder_policy !== 'undefined' ? payload.preorder_policy : dataDetail.preorder_policy\n            if (preorderPolicy === 'preorder' && v !== undefined && v <= 0) return { errorMessage: 'Anda belum mengisi waktu Pre-order' }\n          }\n        },\n        preorder_policy: {\n          type: 'string',\n          validate: (v, payload) => {\n            const productAvailability = typeof payload.product_availability !== 'undefined' ? payload.product_availability : dataDetail.product_availability\n            if (productAvailability === 'use_stock' && v !== undefined && !v) return { errorMessage: 'Anda belum mengisi status produk jika stok habis' }\n          }\n        }\n      }\n    })\n  }, [dataDetail.price, tablepaginationResetForm, upsertServiceName, id, dataDetail.estimated_delivery_time_instock, dataDetail.estimated_delivery_time_preorder, dataDetail.preorder_policy, dataDetail.product_availability])\n  const estimatedDeliveryUnitTimeInstock = (typeof payload.estimated_delivery_unit_time_instock !== 'undefined' ? payload.estimated_delivery_unit_time_instock : dataDetail.estimated_delivery_unit_time_instock)\n  const estimatedDeliveryUnitTimePreorder = (typeof payload.estimated_delivery_unit_time_preorder !== 'undefined' ? payload.estimated_delivery_unit_time_preorder : dataDetail.estimated_delivery_unit_time_preorder)\n  const productAvailability = typeof payload.product_availability !== 'undefined' ? payload.product_availability : dataDetail.product_availability\n  const preorderPolicy = typeof payload.preorder_policy !== 'undefined' ? payload.preorder_policy : dataDetail.preorder_policy\n  const isneedShipping = typeof payload.isneed_shipping !== 'undefined' ? payload.isneed_shipping : dataDetail.isneed_shipping\n\n  return (\n    <div className='row'>\n      <div className='col-sm-6'>\n        <CardWrapperCon formTitle={formTitle} serviceName={detailServiceName}>\n          {addField('name', 'Nama Produk', 'text', dataDetail, payload, tablepaginationOnChangeForm, upsertServiceName)}\n          {addField('code', 'Kode Produk', 'text', dataDetail, payload, tablepaginationOnChangeForm, upsertServiceName)}\n          <div className='form-group'>\n            <label htmlFor='price'>Harga Produk</label>\n            <input type='number' className='form-control' id='price' placeholder='Masukkan Harga Produk' value={typeof payload.price !== 'undefined' ? payload.price : dataDetail.price || ''} onChange={e => { if (e.target.value < 0) return; tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'price', fieldValue: e.target.value }) }} />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='parent_id'>Butuh Ongkir?</label>\n            <select value={isneedShipping} name='isneed_shipping' id='isneed_shipping' className='custom-select' onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'isneed_shipping', fieldValue: e.target.value })}>\n              <option value=''>Pilih</option>\n              <option value='Y'>Butuh</option>\n              <option value='N'>Tidak Butuh</option>\n            </select>\n          </div>\n          {isneedShipping === 'Y' &&\n            <div className='form-group'>\n              <label htmlFor='weight'>Berat Produk (gram)</label>\n              <input type='float' className='form-control' required id='weight' placeholder='masukkan berat produk' value={typeof payload.weight !== 'undefined' ? payload.weight : dataDetail.weight} onChange={e => { if (e.target.value !== '' && e.target.value < 1) return; tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'weight', fieldValue: e.target.value }) }} />\n            </div>}\n          {process.env.REACT_APP_SHOW_FORMFIELD_SHORTDESCRIPTION &&\n            <div className='form-group'>\n              <label htmlFor='description'>Short Description</label>\n              <input type='text' className='form-control' id='description' placeholder='Masukkan description' value={typeof payload.description !== 'undefined' ? payload.description : dataDetail.description} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'description', fieldValue: e.target.value })} />\n            </div>}\n          {/* {!(typeof loading === 'undefined' || loading === 'undefined' || loading) && */}\n          <div className='form-group'>\n            <label htmlFor='content1'>Deskripsi Produk</label>\n            <FieldTextArea textEditor forProcess={typeof id !== 'undefined' ? 'update' : 'create'} dataId={id} defaultValue={typeof payload.content1 !== 'undefined' ? payload.content1 : dataDetail.content1} onChange={(v) => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'content1', fieldValue: v })} idElement='content1' />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='toko_id'>Pilih Toko</label>\n            <br />\n            <Multiselect\n              isMulti\n              className='form-control'\n              label='Pilih Toko'\n              labelButton='Pilih'\n              labelColumn='Pilih'\n              placeholder='Pilih'\n              optionColumnValue='_id'\n              optionColumnLabel='name'\n              payloadValue={payload.toko_id}\n              defaultValueOriginal={dataDetail.toko_id}\n              getColumns={({ onChange }) => []}\n              listallServiceName={TokoOnlineManifest.listallService}\n              fields={TokoOnlineManifest.fields}\n              onChange={({ val }) => { tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'toko_id', fieldValue: val }) }}\n            />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='category_id'>Pilih Kategori</label>\n            <br />\n            <Multiselect\n              isMulti\n              className='form-control'\n              label='Pilih Kategori'\n              labelButton='Pilih'\n              labelColumn='Pilih'\n              placeholder='Pilih'\n              optionColumnValue='_id'\n              optionColumnLabel='title'\n              payloadValue={payload.category_id}\n              defaultValueOriginal={dataDetail.category_id}\n              getColumns={({ onChange }) => []}\n              listallServiceName={CategoryManifest.listallService}\n              fields={CategoryManifest.fields}\n              onChange={({ val }) => { tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'category_id', fieldValue: val }) }}\n            />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='category_id'>Tag</label>\n            <br />\n            <Multiselect\n              isMulti\n              className='form-control'\n              label='Tag'\n              labelButton='Pilih'\n              labelColumn='Pilih'\n              placeholder='Pilih'\n              optionColumnValue='_id'\n              optionColumnLabel='name'\n              payloadValue={payload.tag_id}\n              defaultValueOriginal={dataDetail.tag_id}\n              getColumns={({ onChange }) => []}\n              listallServiceName={TagManifest.listallService}\n              fields={TagManifest.fields}\n              onChange={({ val }) => {\n                console.log('onchangemultiselect==>', val)\n                tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'tag_id', fieldValue: val })\n              }}\n              isCreatableSelect\n            />\n          </div>\n          <FieldUploadPictures\n            fileArray={fileArray.image_ids}\n            currentFileIds={dataDetail.image_ids}\n            label='Gambar'\n            multiple\n            onChange={({ currentFileIds, newFiles }) => {\n              tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'image_ids', fieldValue: currentFileIds.map(v => v._id) })\n              tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'image_ids', type: 'file', fieldValue: newFiles })\n              // setFileArray(newFiles);\n              // setCurrentFileArray(currentFileIds)\n            }}\n          />\n          <div className='form-group'>\n            <label htmlFor='product_availability'>Ketersediaan Produk</label>\n            <select\n              name='product_availability'\n              id='product_availability' className='custom-select' onChange={e => {\n                tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'product_availability', fieldValue: e.target.value })\n              }}\n              value={productAvailability}\n            >\n              <option value=''>Pilih</option>\n              <option value='use_stock'>Gunakan stok</option>\n              <option value='always_ready'>Selalu ada stok</option>\n            </select>\n          </div>\n          {/* {addField('instock_label', 'Label ketika stok masih ada', 'text', dataDetail, payload, tablepaginationOnChangeForm, upsertServiceName)} */}\n          <div className='form-group'>\n            <label htmlFor='instock_label'>Label ketika stok masih ada</label>\n            <input type='text' className='form-control' id='instock_label' placeholder='Masukkan Label ketika stok masih ada' value={typeof payload.instock_label !== 'undefined' ? payload.instock_label : dataDetail.instock_label || 'Stok Tersedia'} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'instock_label', fieldValue: e.target.value })} />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='estimated_delivery_time_instock'>Setelah customer melakukan pembayaran, produk akan dikirim dalam:</label>\n            <div className='form-row'>\n              <input type='number' className='form-control' id='estimated_delivery_time_instock' placeholder='Masukan jumlah waktu' value={typeof payload.estimated_delivery_time_instock !== 'undefined' ? payload.estimated_delivery_time_instock : dataDetail.estimated_delivery_time_instock} onChange={e => { if (e.target.value < 0) return; tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'estimated_delivery_time_instock', fieldValue: e.target.value }) }} />\n              <div className='col-sm-10'>\n                <div className='d-inline form-check'>\n                  <input className='form-check-input' type='radio' name='estimated_delivery_unit_time_instock' id='estimated_delivery_unit_time_instock_jam' defaultValue='hour' checked={estimatedDeliveryUnitTimeInstock === 'hour'} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'estimated_delivery_unit_time_instock', fieldValue: e.target.value })} />\n                  <label className='form-check-label' htmlFor='estimated_delivery_unit_time_instock_jam'>Jam </label>\n                </div>\n                <div className='d-inline form-check' style={{ marginLeft: 10 }}>\n                  <input className='form-check-input' type='radio' name='estimated_delivery_unit_time_instock' id='estimated_delivery_unit_time_instock_hari' defaultValue='day' checked={estimatedDeliveryUnitTimeInstock === 'day'} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'estimated_delivery_unit_time_instock', fieldValue: e.target.value })} />\n                  <label className='form-check-label' htmlFor='estimated_delivery_unit_time_instock_hari'>Hari </label>\n                </div>\n                <div className='d-inline form-check' style={{ marginLeft: 10 }}>\n                  <input className='form-check-input' type='radio' name='estimated_delivery_unit_time_instock' id='estimated_delivery_unit_time_instock_minggu' defaultValue='week' checked={estimatedDeliveryUnitTimeInstock === 'week'} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'estimated_delivery_unit_time_instock', fieldValue: e.target.value })} />\n                  <label className='form-check-label' htmlFor='estimated_delivery_unit_time_instock_minggu'>Minggu </label>\n                </div>\n                <div className='d-inline form-check' style={{ marginLeft: 10 }}>\n                  <input className='form-check-input' type='radio' name='estimated_delivery_unit_time_instock' id='estimated_delivery_unit_time_instock_bulan' defaultValue='month' checked={estimatedDeliveryUnitTimeInstock === 'month'} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'estimated_delivery_unit_time_instock', fieldValue: e.target.value })} />\n                  <label className='form-check-label' htmlFor='estimated_delivery_unit_time_instock_bulan'>Bulan </label>\n                </div>\n              </div>\n            </div>\n          </div>\n          {\n            productAvailability === 'use_stock' &&\n              <>\n                <div className='form-group'>\n                  <label htmlFor='stock_amount'>Jumlah Stok</label>\n                  <input type='number' className='form-control' id='stock_amount' placeholder='Masukan jumlah stok' value={typeof payload.stock_amount !== 'undefined' ? payload.stock_amount : dataDetail.stock_amount} onChange={e => { if (e.target.value < 0) return; tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'stock_amount', fieldValue: e.target.value }) }} />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='preorder_policy'>Status produk jika stok habis</label>\n                  <select\n                    name='preorder_policy' id='preorder_policy' className='custom-select' onChange={e => {\n                      tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'preorder_policy', fieldValue: e.target.value })\n                    }}\n                    value={preorderPolicy}\n                  >\n                    <option value=''>Pilih</option>\n                    <option value='preorder'>Pre-Order</option>\n                    <option value='unavailable'>Habis</option>\n                  </select>\n                </div>\n              </>\n          }\n          {preorderPolicy === 'preorder' &&\n            <div className='form-group'>\n              <label htmlFor='estimated_delivery_time_preorder'>Produk Pre-order biasanya dikirimkan dalam:</label>\n              <input type='number' className='form-control' id='estimated_delivery_time_preorder' placeholder='Masukan jumlah waktu' value={typeof payload.estimated_delivery_time_preorder !== 'undefined' ? payload.estimated_delivery_time_preorder : dataDetail.estimated_delivery_time_preorder} onChange={e => { if (e.target.value < 0) return; tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'estimated_delivery_time_preorder', fieldValue: e.target.value }) }} />\n              <div className='form-row'>\n                <div className='col-sm-10'>\n                  <div className='d-inline form-check'>\n                    <input className='form-check-input' type='radio' name='estimated_delivery_unit_time_preorder' id='estimated_delivery_unit_time_preorder_jam' defaultValue='hour' checked={estimatedDeliveryUnitTimePreorder === 'hour'} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'estimated_delivery_unit_time_preorder', fieldValue: e.target.value })} />\n                    <label className='form-check-label' htmlFor='estimated_delivery_unit_time_preorder_jam'>Jam </label>\n                  </div>\n                  <div className='d-inline form-check' style={{ marginLeft: 10 }}>\n                    <input className='form-check-input' type='radio' name='estimated_delivery_unit_time_preorder' id='estimated_delivery_unit_time_preorder_hari' defaultValue='day' checked={estimatedDeliveryUnitTimePreorder === 'day'} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'estimated_delivery_unit_time_preorder', fieldValue: e.target.value })} />\n                    <label className='form-check-label' htmlFor='estimated_delivery_unit_time_preorder_hari'>Hari </label>\n                  </div>\n                  <div className='d-inline form-check' style={{ marginLeft: 10 }}>\n                    <input className='form-check-input' type='radio' name='estimated_delivery_unit_time_preorder' id='estimated_delivery_unit_time_preorder_minggu' defaultValue='week' checked={estimatedDeliveryUnitTimePreorder === 'week'} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'estimated_delivery_unit_time_preorder', fieldValue: e.target.value })} />\n                    <label className='form-check-label' htmlFor='estimated_delivery_unit_time_preorder_minggu'>Minggu </label>\n                  </div>\n                  <div className='d-inline form-check' style={{ marginLeft: 10 }}>\n                    <input className='form-check-input' type='radio' name='estimated_delivery_unit_time_preorder' id='estimated_delivery_unit_time_preorder_bulan' defaultValue='month' checked={estimatedDeliveryUnitTimePreorder === 'month'} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'estimated_delivery_unit_time_preorder', fieldValue: e.target.value })} />\n                    <label className='form-check-label' htmlFor='estimated_delivery_unit_time_preorder_bulan'>Bulan </label>\n                  </div>\n                </div>\n              </div>\n            </div>}\n        </CardWrapperCon>\n      </div>\n    </div>\n  )\n}\n\nfunction Comp (props) {\n  const { match } = props\n  return (\n    <ContentWrapper\n      pageTitle={upsertPageTitle}\n      breadcrumb={[\n        { title: 'Beranda', link: AppConfig.appHomePage },\n        { title: listallPageTitle, link: listallPageUrl() },\n        { title: upsertPageTitle, link: null, isActive: true }\n      ]}\n      contentHeaderTitle={upsertPageTitle}\n      isNeedLoggedin\n    >\n      <div className='row'>\n        <div className='col-md-12'>\n          <Detail\n            detailServiceName={detailService}\n            upsertServiceName={upsertService}\n            fields={fields}\n            id={match.params._id}\n            formTitle={upsertPageTitle}\n            redirectAfterDelete={redirectAfterDelete}\n            withoutWrapper\n            // beforeSubmit={(cb) => {\n            //   if (payload.isneed_shipping === 'Y' && payload.weight < 1) return alert('berat barang minimal 1 gram.')\n            //   // (payload[paginationConfig.serviceName] || {}).isneed_shipping === 'Y'\n            //   // sebelum submit, lakukan upload files dulu\n            //   window.submitUploadFileArray({ at: getAccessToken(), tablepaginationOnChangeForm: tablepaginationOnChangeFormFunc, serviceName: paginationConfig.serviceName, fileArray, hostBackend: AppConfig.hostBackend, currentImgIds: currentFileArray.map(v => '' + v._id), cb })\n            // }}\n          >\n            <FormUpdate detailServiceName={detailService} formTitle={upsertPageTitle} />\n          </Detail>\n          {/* } */}\n        </div>\n      </div>\n    </ContentWrapper>\n  )\n}\nexport default injectIntl(Comp)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = AppConfig.appName\nconst entity = 'tokoonline'\nconst serviceEntity = 'TokoTokoOnline'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Baru'\nexport const createPageTitle = 'Buat Baru'\nexport const listallPageTitle = 'Daftar Toko'\nexport const detailPageTitle = 'Toko Detail'\nexport const upsertPageTitle = 'Form ' + entityName\nexport const upsertService = 'upsert' + serviceEntity\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,name,pgateway_id{_id,title,keyid,mid,secretkey,configs},template,image_ids{_id, filename, filenameorigin, file_type},logo{_id, filename, filenameorigin, file_type},address,email,template,plink_merchant_secret_key,province,city,subcity,slug,plink_merchant_id,plink_merchant_key_id,status,website,facebook,instagram,youtube,description,created_at,updated_at,owner{_id,full_name,email},created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          {/* <Link className='dropdown-item' to={upsertPageUrl(p.cell.value)}>Detail</Link> */}\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Nama', accessor: 'name' },\n  { Header: 'website', accessor: 'website' },\n  { Header: 'facebook', accessor: 'facebook' },\n  { Header: 'instagram', accessor: 'instagram' },\n  { Header: 'youtube', accessor: 'youtube' },\n  { Header: 'status', accessor: 'status' },\n  // {\n  //   Header: 'Tanggal Diperbaharui',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  { Header: 'Pemilik', accessor: 'owner.full_name' }\n//   { Header: 'updated by', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\n\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  upsertPageTitle,\n  createService,\n  detailService,\n  upsertService,\n  listallService,\n  deleteService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Moment from 'moment'\nimport AppConfig from '../../Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Tag'\nconst entity = 'tag'\nconst serviceEntity = 'Tag'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const updatePageUrl = (id) => (`/${entity}/update/${id}`)\nexport const createPageUrl = () => (`/${entity}/create`)\nexport const createNewButtonLabel = 'Create New ' + entityName\nexport const createPageTitle = 'Create New ' + entityName\nexport const listallPageTitle = entityName + 's'\nexport const detailPageTitle = entityName + ' Detail'\nexport const updatePageTitle = 'Update ' + entityName\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const updateService = 'update' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,name,created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: 'Act',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'name', accessor: 'name' },\n  {\n    Header: 'created_at',\n    accessor: 'created_at',\n    Cell: d => {\n      let data = Moment(d.cell.value)\n      if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      else data = ''\n      return (<span>{`${data}`}</span>)\n    }\n  },\n  {\n    Header: 'updated_at',\n    accessor: 'updated_at',\n    Cell: d => {\n      let data = Moment(d.cell.value)\n      if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      else data = ''\n      return (<span>{`${data}`}</span>)\n    }\n  },\n  { Header: 'created by', accessor: 'created_by.full_name' },\n  { Header: 'updated by', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  updatePageUrl,\n  createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  updatePageTitle,\n  createService,\n  detailService,\n  updateService,\n  listallService,\n  deleteService,\n  fields,\n  getColumns\n}","import React from 'react'\nimport AppConfig from '../../../core/Config/AppConfig'\n\nfunction DisplayPictures (props) {\n  console.log('render DisplayPictures===', props)\n  const { deletePicture, deleteCurrentPicture } = props\n  const currentFileArray = props.currentFileArray || []\n  const fileArray = props.fileArray || []\n  return (\n    <div className='form-group multi-preview'>\n      <div className='container'>\n        <div className='row row-cols-3'>\n          {\n            currentFileArray.map((v, k) => (\n              <div key={k} className='col' style={{ maxWidth: '50%' }}>\n                <div className='card'>\n                  <img width='100%' src={`${AppConfig.hostBackend}/api/renderfile/${v.filename || ''}.${v.file_type || ''}`} alt='...' />\n                  <div className='card-body'>\n                    {deleteCurrentPicture && <button onClick={() => deleteCurrentPicture(k)} type='button' className='btn btn-danger btn-block btn-sm'><i className='fa fa-trash' /></button>}\n                  </div>\n                </div>\n              </div>\n            ))\n          }\n          {fileArray.map((file, k) => (\n            <div key={k} className='col' style={{ maxWidth: '50%' }}>\n              <div className='card'>\n                <img width='100%' src={URL.createObjectURL(file)} alt='...' />\n                <div className='card-body'>\n                  {deletePicture && <button onClick={() => deletePicture(k)} type='button' className='btn btn-danger btn-block btn-sm'><i className='fa fa-trash' /></button>}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DisplayPictures\n","import React, { PureComponent } from 'react'\nimport { injectIntl, FormattedMessage as T } from 'react-intl'\nimport DisplayPictures from './Display'\n\nclass PictureUploadComp extends PureComponent {\n  constructor (props) {\n    super(props)\n    this.state = {\n      // setFileArray: [],\n      currentFileArray: []\n    }\n    // this.setFileArray = this.setFileArray.bind(this)\n    this.setCurrentFileArray = this.setCurrentFileArray.bind(this)\n  }\n\n  // setFileArray (v) {\n  //   // this.setState({ fileArray: v })\n  // }\n\n  setCurrentFileArray (v) {\n    this.setState({ currentFileArray: v })\n  }\n\n  componentDidMount () {\n    // onChange({ currentFileIds: currentFileArray, newFiles: fileArray })\n    this.setCurrentFileArray(this.props.currentFileIds || [])\n  }\n\n  render () {\n    const props = this.props\n    console.log('render PictureUploadComp===', props)\n    const { multiple, onChange, label, buttonLabel } = props\n    const { currentFileArray } = this.state\n    let fileArray = this.props.fileArray || []\n    // const [fileArray, setFileArray] = React.useState([])\n    // const [countFileArray, setCountFileArray] = React.useState(0)\n\n    // const [currentFileArray, setCurrentFileArray] = React.useState([])\n    // const [currentCountFileArray, setCurrentCountFileArray] = React.useState(0)\n\n    const deletePicture = (ix) => {\n      console.log('delete index ', ix)\n      const newArr = []\n      for (let i = 0; i < fileArray.length; i++) {\n        if (ix !== i) newArr.push(fileArray[i])\n      }\n      // this.setFileArray(newArr)\n      // setCountFileArray(newArr.length)\n      onChange({ currentFileIds: currentFileArray, newFiles: newArr })\n    }\n    const deleteCurrentPicture = (ix) => {\n      console.log('delete index ', ix)\n      const newArr = []\n      for (let i = 0; i < currentFileArray.length; i++) {\n        if (ix !== i) newArr.push(currentFileArray[i])\n      }\n      this.setCurrentFileArray(newArr)\n      // setCurrentCountFileArray(newArr.length)\n      // tablepaginationOnChangeFormFunc({ serviceName: paginationConfig.serviceName, fieldName: 'image_ids', fieldValue: newArr.map(v => '' + v._id) })\n      onChange({ currentFileIds: newArr, newFiles: fileArray })\n    }\n\n    // useEffect(() => {\n    //   // onChange({ currentFileIds: currentFileArray, newFiles: fileArray })\n    //   // window.bootstrapFileStyle()\n    // })\n\n    // useEffect(() => {\n    //   // this.setCurrentFileArray(currentFileIds || [])\n    //   // setCurrentCountFileArray((currentFileIds || []).length)\n    // }, [currentFileIds])\n\n    return (\n      <div className='form-group'>\n        <label htmlFor='fileUploadInput'>{label}</label>\n        <div className='input-group' style={{ zIndex: 0 }}>\n          {/* <div className='custom-file'> */}\n          {/* <button type='button' className='btn bg-gradient-warning' onclick=\"document.getElementById('fileUploadInput').click();\"><T id='label-addpicture' /></button> */}\n          <label className='btn btn-default'>\n            <T id={buttonLabel || 'label-addpicture'} />\n            <input\n              type='file' className='custom-file-input' id='fileUploadInput'\n              onChange={(e) => {\n                const fileObj = []\n                // const data = new FormData()\n                fileObj.push(e.target.files)\n                for (let i = 0; i < fileObj[0].length; i++) {\n                  console.log('image ke ' + i)\n                  // fileArray.push(fileObj[0][i])\n                  fileArray = [...fileArray, fileObj[0][i]]\n                }\n                // if(setCountFileArray) setCountFileArray(fileArray.length)\n                // if(setFileArray) setFileArray(fileArray)\n                // if(onChange) onChange({ fileArray })\n                // this.setFileArray(fileArray)\n                onChange({ currentFileIds: currentFileArray, newFiles: fileArray })\n                // window.onClickUploadFileV2({\n                //   onChange: ({ fileArray }) => {\n                //     this.setFileArray(fileArray)\n                //     // setCountFileArray((fileArray || []).length)\n                //     onChange({ currentFileIds: currentFileArray, newFiles: fileArray })\n                //   },\n                //   fileArray,\n                //   e\n                // })\n              }}\n              multiple={multiple}\n              hidden\n            />\n          </label>\n          {/* <label id='fileUploadLabel' className='custom-file-label' htmlFor='fileUploadInput'><T id='label-addpicture' /></label> */}\n          {/* </div> */}\n        </div>\n        <hr />\n        <DisplayPictures\n          currentFileArray={currentFileArray}\n          fileArray={fileArray}\n          deleteCurrentPicture={deleteCurrentPicture}\n          deletePicture={deletePicture}\n        />\n      </div>\n    )\n  }\n}\n\n// export default PictureUploadComp\nexport default injectIntl(PictureUploadComp)\n","import React, { useEffect } from 'react'\n// import _ from 'lodash'\nimport AppConfig from '../../../core/Config/AppConfig'\nimport { getAccessToken } from '../../../core/Utils/Utils'\n\nfunction FieldTextArea (props) {\n  const { placeholder, textEditor, defaultValue, initValue, onChange, idElement, dataId } = props\n  // const [isFirstLoad, setIsFirstLoad] = React.useState(undefined)\n  useEffect(() => {\n    console.log('valuevaluevalue initValue=>', initValue)\n    console.log('valuevaluevalue id=>', dataId)\n    if (textEditor) {\n      let isReset = false\n      // if (initValue === defaultValue && ) {\n      //   isReset = true\n      // }\n      // setCurrentValue(defaultValue)\n      if (typeof dataId !== 'undefined' && typeof defaultValue !== 'undefined') {\n        console.log('valuevaluevalue reloadddd=>', defaultValue)\n        window.activateEditorV2({\n          idElement,\n          hostBackend: AppConfig.hostBackend,\n          at: getAccessToken(),\n          cb: (content) => {\n            onChange(content)\n          },\n          isReset,\n          defaultValue\n        })\n      }\n      if (typeof dataId === 'undefined') {\n        window.activateEditorV2({\n          idElement,\n          hostBackend: AppConfig.hostBackend,\n          at: getAccessToken(),\n          cb: (content) => {\n            onChange(content)\n          },\n          isReset,\n          defaultValue\n        })\n      }\n    }\n    // setIsFirstLoad(false)\n  // })\n  }, [defaultValue, dataId, idElement, onChange, textEditor, initValue])\n\n  // if (forProcess === 'update' && _.isEmpty(dataId)) return null\n  // if (forProcess === 'update' && (dataId === 'undefined' || _.isEmpty(dataId))) return null\n  // if (forProcess === 'update' && dataId === '') return null\n\n  if (typeof dataId !== 'undefined' && !dataId) return null\n\n  // console.log('FieldTextAreaFieldTextAreaFieldTextAreaFieldTextArea dataId=>', dataId)\n  // console.log('FieldTextAreaFieldTextAreaFieldTextAreaFieldTextArea defaultValue=>', defaultValue)\n  // console.log('FieldTextAreaFieldTextAreaFieldTextAreaFieldTextArea forProcess=>', forProcess)\n  // console.log('FieldTextAreaFieldTextAreaFieldTextAreaFieldTextArea renderrrr=>')\n  return (\n    <div className='row'>\n      <div className='col-12'>\n        <div style={{ position: 'relative' }}>\n          {textEditor && <div style={{ backgroundColor: 'black', position: 'absolute', width: '100%', height: '100%', top: 0 }}><center><span style={{ color: 'green', fontSize: 30, marginTop: 200 }}>Gambar sedang diupload...</span></center></div>}\n          <div id='texareaWrapper' style={{ width: '100%', height: '100%', backgroundColor: 'black', opacity: 1 }}>\n            <textarea className='textarea' id={idElement} placeholder={placeholder || 'Isi keterangan'} value={defaultValue} style={{ width: '100%' }} onChange={(e) => onChange(e.target.value)} />\n          </div>\n        </div>\n      </div>\n    </div>\n    // <textarea className='textarea' id={idElement} placeholder='Place some text here' style={{ width: '100%', height: 200, fontSize: 14, lineHeight: 18, border: '1px solid #dddddd', padding: 10 }} value={defaultValue} onChange={(e) => onChange(e.target.value)} />\n  )\n}\nexport default FieldTextArea\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","listallPageUrl","createNewButtonLabel","listallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","d","toko","_","v","k","name","join","detailPageUrl","createPageTitle","entityName","category_id","title","toko_id","createService","addField","dataDetail","payload","tablepaginationOnChangeForm","serviceName","htmlFor","placeholder","onChange","e","fieldName","fieldValue","target","FormUpdate","props","upsertServiceName","tablepaginationResetForm","fileArray","formTitle","detailServiceName","React","defaultFormValue","estimated_delivery_time_preorder","estimated_delivery_time_instock","_id","isInitialReset","formSchema","price","validate","errorMessage","product_availability","mandatory","preorder_policy","undefined","estimatedDeliveryUnitTimeInstock","estimated_delivery_unit_time_instock","estimatedDeliveryUnitTimePreorder","estimated_delivery_unit_time_preorder","productAvailability","preorderPolicy","isneedShipping","isneed_shipping","required","weight","process","REACT_APP_SHOW_FORMFIELD_SHORTDESCRIPTION","description","textEditor","forProcess","dataId","defaultValue","content1","idElement","isMulti","label","labelButton","labelColumn","optionColumnValue","optionColumnLabel","payloadValue","defaultValueOriginal","listallServiceName","TokoOnlineManifest","val","CategoryManifest","tag_id","TagManifest","console","log","isCreatableSelect","image_ids","currentFileIds","multiple","newFiles","map","instock_label","checked","style","marginLeft","stock_amount","injectIntl","match","pageTitle","breadcrumb","link","isActive","contentHeaderTitle","isNeedLoggedin","params","withoutWrapper","updatePageUrl","createPageUrl","updatePageTitle","updateService","data","Moment","isValid","format","deletePicture","deleteCurrentPicture","currentFileArray","maxWidth","width","src","filename","file_type","alt","onClick","file","URL","createObjectURL","PictureUploadComp","state","setCurrentFileArray","bind","this","setState","buttonLabel","zIndex","fileObj","push","files","i","length","hidden","Display","ix","newArr","PureComponent","initValue","useEffect","window","activateEditorV2","hostBackend","at","getAccessToken","cb","content","isReset","position","backgroundColor","height","top","color","fontSize","marginTop","opacity"],"sourceRoot":""}