{"version":3,"file":"static/js/9911.1d408ae3.chunk.js","mappings":"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","sources":["Pages/BoAccount/Manifest.js","Pages/BoAccount/PageDetail.js","features/BankAccount/containers/TableHeaderCon.js","features/BankAccount/containers/ButtonActionCon.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport { NeedApprovalCheckBox } from '../../features/NeedApproval'\nimport AppConfig from '../../core/Config/AppConfig'\nimport {sanitizeValue} from '../../core/Utils/Utils'\n\nimport Moment from 'moment'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Account'\nexport const entity = 'account'\nconst serviceEntity = 'BankAccount'\n\nexport const redirectAfterCreate = '/account-number-detail'\nexport const redirectAfterDelete = '/all-bank-account'\nexport const detailPageUrl = (id) => (`/account-number-detail/${id}`)\nexport const upsertPageUrl = (id) => (`/form-account-number${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => ('/all-bank-account')\nexport const createNewButtonLabel = 'Buat Kategori Baru'\nexport const createPageTitle = 'Detail Bank Account'\nexport const listallPageTitle = 'All Bank Accounts'\nexport const needApprovalListallPageTitle = 'Need Approval Bank Accounts'\nexport const detailPageTitle = 'Detail Bank Account'\nexport const upsertPageTitle = 'Form ' + entityName\n// export const createService = 'create' + serviceEntity\nexport const detailService = 'getDetailBankAccountById'\n// export const updateService = 'update' + serviceEntity\nexport const upsertService = 'upsertAccountNumber'\n\nexport const opApproveAccountNumberService = 'approveBankAccount'\nexport const opRejectAccountNumberService = 'rejectBankAccount'\n\nexport const approvedAccountNumberlistallService = 'getAllBankAccount'\nexport const getAllBankAccount = 'getAllBankAccount'\n\nexport const needApprovalAccountNumberlistallService = 'getAllNeedApprovalBankAccount'\nexport const deleteService = 'delete' + serviceEntity +'ById'\nexport const fields = { _id: true, bank_code_id: { _id: true,bank_code:true }, bank_code: true, bank_name: true, status: true, description: true, account_number: true, created_at: true, updated_at: true, created_by: { _id: true, full_name: true, email: true }, validated_by: { _id: true, full_name: true, email: true , updated_at:true }, approved_by: { _id: true, email: true, full_name: true }, account_name: true }\n// export const fields = '_id,status,description,account_number,created_at,updated_at,created_by{_id,full_name},validated_by{_id,full_name},approved_by{_id,email,full_name},account_name'\nexport const getApprovedBankAccountColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Account Name', accessor: p=>sanitizeValue(p.account_name) },\n  { Header: 'Account Number', accessor: p=>sanitizeValue(p.account_number) },\n  { Header: 'Bank Code', accessor: p=>sanitizeValue(p.bank_code) },\n  { Header: 'Bank Name', accessor: p=>sanitizeValue(p.bank_name) },\n  { Header: 'description', accessor: p=>sanitizeValue(p.description) },\n  { Header: 'Status', accessor: p=>sanitizeValue(p.status) },\n  { Header: 'created by', accessor: p => <span>{sanitizeValue((p.created_by || {}).full_name)}</span> },\n  { Header: 'approved by', accessor: 'approved_by.full_name' }\n]\n\nexport const getNeedApprovalBankAccountColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Receipt Name', accessor: p=>sanitizeValue(p.account_name) },\n  { Header: 'Receipt Number', accessor: p=>sanitizeValue(p.account_number) },\n  { Header: 'Bank Code', accessor: p=>sanitizeValue(p.bank_code) },\n  { Header: 'Bank Name', accessor: p=>sanitizeValue(p.bank_name) },\n  { Header: 'Description', accessor: p=>sanitizeValue(p.description) },\n  { Header: 'Status', accessor: p=>sanitizeValue(p.status) },\n  { Header: 'Validated by', accessor: p => <span>{sanitizeValue((p.validated_by || {}).full_name)}</span> },\n  { Header: 'Validated date', accessor: p =>{\n    const date = Moment(p.created_at)\n    const dt = p.created_at === null || p.created_at === undefined ? '-' : date.format(AppConfig.datetimeFormat)\n    return sanitizeValue(dt)\n  }},\n  { Header: 'Created by', accessor: p => <span>{(sanitizeValue(p.created_by || {}).full_name)}</span> },\n  { Header: 'Created at', accessor: p =>{\n    const date = Moment(p.created_at)\n    const dt = p.created_at === null || p.created_at === undefined ? '-' : date.format(AppConfig.datetimeFormat)\n    return sanitizeValue(dt)\n  }},\n  { Header: 'Updated at', accessor: p =>{\n    const date = Moment(p.updated_at)\n    const dt = p.updated_at === null || p.updated_at === undefined ? '-' : date.format(AppConfig.datetimeFormat)\n    return sanitizeValue(dt)\n  } },\n  {\n    Header: 'set',\n    accessor: p => {\n      if(!_.has(p,'validated_by._id')) return(<></>)\n      return (\n        <>\n          <div className='form-check'>\n            <NeedApprovalCheckBox idComparison={ p.validated_by._id} transactionId={p._id} />\n          </div>\n        </>\n      )\n    }\n  }\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n\n]\n\n\n\n\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  // listallService,\n  deleteService,\n  upsertService,\n  fields,\n  listallPageUrl\n}\n","import React from 'react'\nimport { injectIntl } from 'react-intl'\nimport _, { isNull } from 'lodash'\nimport { Detail, CardWrapperCon, Table, Filter } from '../../core/features/TablePagination'\n// import { path } from 'ramda'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { detailService, fields, deleteService, detailPageTitle, listallPageTitle, listallPageUrl, upsertPageUrl, redirectAfterDelete } from './Manifest'\nimport MerchanKeyManifest from '../MerchantKey/Manifest'\nimport Moment from 'moment'\nimport AppConfig from '../../core/Config/AppConfig'\nimport { MerchantkeyModalCon } from '../../features/merchantKey'\nimport { ButtonActionCon } from '../../features/BankAccount'\n// import AppConfig from '../../core/Config/AppConfig'\nimport { useHistory  } from 'react-router-dom'\nimport { useDispatch,useSelector }  from 'react-redux'\nimport TablepaginationActions from '../../core/features/TablePagination/redux'\nimport {path} from 'ramda'\n\n\nconst DetailContent = (props) => {\n  const {\n    dataDetail,\n    formTitle,\n    match,\n    id\n  } = props\n\n  let createdAt = Moment(dataDetail.created_at || 0)\n  if (createdAt && dataDetail.created_at !== null) createdAt = createdAt.format('YYYY-MM-DD HH:mm:ss')\n  else createdAt = '-'\n  \n  let updatedAt = Moment(dataDetail.updated_at || 0)\n  if (updatedAt && dataDetail.updated_at !== null) updatedAt = updatedAt.format('YYYY-MM-DD HH:mm:ss')\n  else updatedAt = '-'\n\n  const paginationConfig = {\n    serviceName: MerchanKeyManifest.listallService,\n    fields: MerchanKeyManifest.fields\n  }\n\n  const history = useHistory()\n  React.useEffect(() => {\n    if(_.isUndefined(id) || _.isNull(id) )history.push('/all-bank-account')\n  }, [])\n\n  console.log(\"bank name\",dataDetail)\n  return (\n    <>\n      <div className='row'>\n        <div className='col-sm-10'>\n          <CardWrapperCon formTitle={formTitle}>\n            <dl>\n              <dt>Account number</dt>\n              <dd>{dataDetail.account_number}</dd>\n              <dt>Account Name</dt>\n              <dd>{dataDetail.account_name}</dd>\n              <dt>Status</dt>\n              <dd>{dataDetail.status}</dd>\n              <hr />\n              <dt>Keterangan</dt>\n              <dd>{dataDetail.description}</dd>\n              <hr/>\n              <dt>Bank Code</dt>\n              <dd>{ path(['bank_code_id','bank_code'],dataDetail) || '-'}</dd>\n              <dt>Nama Bank</dt>\n              <dd>{dataDetail.bank_name || '-'}</dd>\n              <hr />\n              <dt>Dibuat oleh</dt>\n              <dd>{path(['created_by','full_name'],dataDetail) || '-'}</dd>\n              <dt>Tanggal Pembuatan</dt>\n              <dd>{createdAt}</dd>\n              <dt>Tanggal Diperbaharui</dt>\n              <dd>{updatedAt}</dd>\n            </dl>\n          </CardWrapperCon>\n        </div>\n      </div>\n    </>\n  )\n}\n\nfunction Comp (props) {\n  const { match, history } = props\n  console.log(\"detaill>>>>>>>\",match)  \n\n  //SET PAYLOAD FOR DELETE SERVICE\n  const id = match.params._id\n  const merchant_id = String(useSelector(state=>state.myprofile.merchant.id))\n  const user_id = useSelector(state=>state.myprofile.user_id)\n  \n  const dispatch = useDispatch()\n  \n  React.useEffect(() => {\n      dispatch(TablepaginationActions.setDeletePayload({id,merchant_id,user_id}))  \n  }, [])\n  \n  return (\n    <ContentWrapper\n      pageTitle={detailPageTitle}\n      breadcrumb={[\n        { title: 'Beranda', link: AppConfig.appHomePage },\n        { title: listallPageTitle, link: listallPageUrl() },\n        { title: detailPageTitle, link: null, isActive: true }\n      ]}\n      contentHeaderTitle={detailPageTitle}\n      isNeedLoggedin\n    >\n      <div className='row'>\n        <div className='col-md-12'>\n          <Detail\n            detailServiceName={detailService}\n            deleteServiceName={deleteService}\n            fields={fields}\n            id={match.params._id}\n            formTitle={detailPageTitle}\n            redirectAfterDelete={redirectAfterDelete}\n            updatePageUrl={upsertPageUrl(match.params._id)}\n            createPageUrl={upsertPageUrl()}\n            withoutWrapper\n            apiVersion={2}\n            buttonAction={({ dataDetail }) => {\n              return (\n                <ButtonActionCon\n                  history={history}\n                  id={match.params._id}\n                  dataDetail={dataDetail}\n                  deleteService={deleteService}\n                  upsertPageUrl={upsertPageUrl}\n                />)\n            }}\n          >\n            <DetailContent formTitle={detailPageTitle} history={history} match={match} />\n          </Detail>\n        </div>\n      </div>\n\n    </ContentWrapper>\n  )\n}\nexport default injectIntl(Comp)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { injectIntl } from 'react-intl'\nimport { useHistory } from 'react-router-dom'\n// import NeedApprovalActions from '../redux'\n\nconst TableHeaderCon = ({\n  needapprovalCheckboxSubmitApprove,\n  needapprovalCheckboxSubmitReject,\n  needapprovalCheckbox,\n  loadingApprove,\n  merchantId,\n  history\n}) => {\n  return (\n    <>\n      <button type='button' className='btn btn-warning' onClick={() => history.push('/form-account-number')}><i className='fas fa-plus' /> Create New </button>\n    </>\n  )\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    // merchantId: state.myprofile.merchant.id,\n    // loadingApprove: state.needapproval.loadingApprove,\n    // needapprovalCheckbox: state.needapproval.checkbox\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    // needapprovalCheckboxSubmitReject: data => dispatch(NeedApprovalActions.needapprovalCheckboxSubmitReject(data)),\n    // needapprovalCheckboxSubmitApprove: data => dispatch(NeedApprovalActions.needapprovalCheckboxSubmitApprove(data))\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n// )(injectIntl(TableHeaderCon))\n)(injectIntl((props) => {\n  var history = useHistory()\n  return <TableHeaderCon history={history} {...props} />\n}))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { injectIntl } from 'react-intl'\n// import NeedApprovalActions from '../redux'\n\nconst TableHeaderCon = ({\n  history,\n  id,\n  dataDetail,\n  merchantId,\n  deleteService,\n  upsertPageUrl,\n  userId\n}) => {\n  return (\n    <>\n      {dataDetail && (dataDetail.status === 'NEED_APPROVAL' || dataDetail.status === 'REJECTED') && (dataDetail.created_by || {})._id === userId && deleteService && <button style={{ width: 100 }} type='button' className='btn bg-gradient-danger' data-toggle='modal' data-target='#modal-danger'>Hapus</button>}\n      {dataDetail && (dataDetail.status === 'NEED_APPROVAL' || dataDetail.status === 'REJECTED') && (dataDetail.created_by || {})._id === userId && upsertPageUrl(id) && <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(upsertPageUrl(id))} type='button' className='btn bg-gradient-primary'>Ubah</button>}\n      {(dataDetail && upsertPageUrl()) && <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(upsertPageUrl())} type='button' className='btn bg-gradient-info'>Buat</button>}\n    </>\n  )\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    merchantId: state.myprofile.merchant.id,\n    userId: state.myprofile.user_id\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    // needapprovalCheckboxSubmitReject: data => dispatch(NeedApprovalActions.needapprovalCheckboxSubmitReject(data)),\n    // needapprovalCheckboxSubmitApprove: data => dispatch(NeedApprovalActions.needapprovalCheckboxSubmitApprove(data))\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(TableHeaderCon))\n"],"names":["basePath","AppConfig","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","listallPageUrl","listallPageTitle","needApprovalListallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","opApproveAccountNumberService","opRejectAccountNumberService","getAllBankAccount","needApprovalAccountNumberlistallService","deleteService","fields","_id","bank_code_id","bank_code","bank_name","status","description","account_number","created_at","updated_at","created_by","full_name","email","validated_by","approved_by","account_name","getApprovedBankAccountColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","sanitizeValue","getNeedApprovalBankAccountColumns","date","Moment","dt","undefined","format","_","idComparison","transactionId","DetailContent","props","dataDetail","formTitle","match","createdAt","updatedAt","MerchanKeyManifest","useHistory","React","push","console","log","path","injectIntl","params","merchant_id","String","useSelector","state","myprofile","merchant","user_id","dispatch","useDispatch","TablepaginationActions","pageTitle","breadcrumb","title","link","isActive","contentHeaderTitle","isNeedLoggedin","detailServiceName","deleteServiceName","updatePageUrl","createPageUrl","withoutWrapper","apiVersion","buttonAction","TableHeaderCon","needapprovalCheckboxSubmitApprove","needapprovalCheckboxSubmitReject","needapprovalCheckbox","loadingApprove","merchantId","onClick","connect","ownProps","userId","style","width","marginLeft"],"sourceRoot":""}