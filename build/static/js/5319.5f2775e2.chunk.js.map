{"version":3,"file":"static/js/5319.5f2775e2.chunk.js","mappings":"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","sources":["core/features/TablePagination/components/Detail.js","core/features/TablePagination/components/UpdateViewForm.js","core/features/TablePagination/components/ModalDeleteData.js","core/features/TablePagination/containers/DetailCon.js"],"sourcesContent":["import React, { PureComponent } from 'react'\n// import { connect } from 'react-redux'\nimport { injectIntl } from 'react-intl'\nimport { useHistory } from 'react-router-dom'\nimport DetailCon from '../containers/DetailCon'\nimport { CardWrapperCon } from '../containers'\nclass DetailComp extends PureComponent {\n  render () {\n    console.log('DetailCompDetailCompDetailComp')\n    const {\n      formTitle,\n      children,\n      childFunc,\n      fields,\n      upsertServiceName,\n      detailServiceName,\n      updatePageUrl,\n      createPageUrl,\n      redirectAfterDelete,\n      customFooterButtons,\n      deleteServiceName,\n      id,\n      withoutWrapper,\n      preProcessPatchData,\n      apiVersion,\n      buttonAction,\n      collapsable\n    } = this.props\n    console.log('upsertServiceNameupsertServiceNameupsertServiceNameupsertServiceName', upsertServiceName)\n    return (\n      <CardWrapperCon\n        collapsable={collapsable}\n        formTitle={formTitle}\n        withoutWrapper={withoutWrapper}\n        serviceName={detailServiceName}\n      >\n        <DetailCon\n          preProcessPatchData={preProcessPatchData}\n          updatePageUrl={updatePageUrl}\n          createPageUrl={createPageUrl}\n          upsertServiceName={upsertServiceName}\n          detailServiceName={detailServiceName}\n          deleteServiceName={deleteServiceName}\n          fields={fields}\n          childFunc={childFunc}\n          id={id}\n          redirectAfterDelete={redirectAfterDelete}\n          apiVersion={apiVersion}\n          buttonAction={buttonAction}\n        >\n          {children && children}\n        </DetailCon>\n      </CardWrapperCon>\n    )\n  }\n}\n\nexport default injectIntl((props) => {\n  var history = useHistory()\n  return <DetailComp history={history} {...props} />\n})\n","import React, { PureComponent } from 'react'\n\nexport default class UpdateViewForm extends PureComponent {\n  render () {\n    const {\n      child,\n      tablepaginationOnChangeForm,\n      dataDetail,\n      payload,\n      loading,\n      userPrivileges\n    } = this.props\n    return (\n      <>\n        {child({ tablepaginationOnChangeForm, dataDetail, payload, loading, userPrivileges })}\n      </>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport { injectIntl, FormattedMessage as T } from 'react-intl'\nimport { connect } from 'react-redux'\nimport TablepaginationActions from '../redux'\nimport Loader from '../../../Components/Loader/Loader'\nclass ModalDeleteData extends PureComponent {\n  render () {\n    const {\n      tablepaginationDeleteData,\n      deleteServiceName,\n      redirectAfterDelete,\n      history,\n      deletePayload,\n      loading\n    } = this.props\n    console.log('modalmodalmodalmodalmodal', this.props)\n    return (\n      <div className='modal fade' id='modal-danger'>\n        <div className='modal-dialog'>\n          <div className='modal-content bg-danger'>\n            <div className='modal-header'>\n              <h4 className='modal-title'><T id='label-danger' /></h4>\n              <button type='button' className='close' data-dismiss='modal' aria-label='Close'>\n                <span aria-hidden='true'>×</span>\n              </button>\n            </div>\n            <div className='modal-body'>\n              <p><T id='label-delete-confirmation' /></p>\n            </div>\n            <div className='modal-footer justify-content-between'>\n              {loading && <Loader loading type='rpmerah' />}\n              {!loading &&\n                <>\n                  <button id='buttonCloseModal' type='button' className='btn btn-outline-light' data-dismiss='modal'><T id='label.cancel' /></button>\n                  <button type='button' className='btn btn-outline-light' onClick={() => tablepaginationDeleteData({ deletePayload, serviceName: deleteServiceName, redirectAfterDelete, history })}><T id='label.delete' /></button>\n                </>}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default connect(\n  (state, ownProps) => ({ deletePayload: state.tablepagination.deletePayload,loading: (state.tablepagination.loading || {})[ownProps.deleteServiceName] }),\n  dispatch => ({ tablepaginationDeleteData: data => dispatch(TablepaginationActions.tablepaginationDeleteData(data)) })\n)(injectIntl(ModalDeleteData))\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { injectIntl } from 'react-intl'\nimport _ from 'lodash'\nimport TablepaginationActions from '../redux'\n// import Loader from '../../../Components/Loader/Loader'\nimport UpdateViewForm from '../components/UpdateViewForm'\nimport ModalDeleteData from '../components/ModalDeleteData'\n\nfunction DetailContent ({\n  history,\n  children,\n  userPrivileges,\n  errors,\n  upsertServiceName,\n  detailServiceName,\n  deleteServiceName,\n  dataDetail,\n  child: childFunc,\n  fetchData,\n  id,\n  tablepaginationOnChangeForm,\n  tablepaginationDeleteData,\n  tablepaginationResetForm,\n  payload,\n  loading,\n  updatePageUrl,\n  createPageUrl,\n  redirectAfterDelete,\n  needToSave,\n  activeForm,\n  fileArray,\n  buttonAction,\n  myUserId,\n  myMerchantId\n}) {\n  \n  React.useEffect(() => {\n    // console.log('React.useEffect-======', dataDetail)\n    if (id) fetchData({ id })\n  }, [fetchData, id])\n\n  const childrenWithProps = React.Children.map(children, child => {\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, {\n        tablepaginationOnChangeForm,\n        tablepaginationResetForm,\n        dataDetail,\n        payload,\n        loading,\n        userPrivileges,\n        childFunc,\n        upsertServiceName,\n        detailServiceName,\n        id,\n        needToSave,\n        activeForm,\n        fileArray,\n        myUserId,\n        myMerchantId\n      })\n    }\n    return child\n  })\n\n  return (\n    <>\n      {!_.isEmpty(errors) &&\n        <div class='alert alert-danger' role='alert'>\n          <ul>\n            {errors.map((v, i) => <li key={i}>{v.message}</li>)}\n          </ul>\n        </div>}\n\n      {childrenWithProps}\n      {buttonAction && buttonAction({ dataDetail,id,deleteServiceName })}\n      {!buttonAction &&\n        <>\n          {id && deleteServiceName && <button style={{ width: 100 }} type='button' className='btn bg-gradient-danger' data-toggle='modal' data-target='#modal-danger'>Hapus</button>}     \n          {updatePageUrl && <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(updatePageUrl)} type='button' className='btn bg-gradient-primary'>Ubah</button>}\n          {(id && createPageUrl) && <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(createPageUrl)} type='button' className='btn bg-gradient-info'>Buat</button>}\n\n        </>}\n      <ModalDeleteData\n        tablepaginationDeleteData={tablepaginationDeleteData}\n        deleteServiceName={deleteServiceName}\n        redirectAfterDelete={redirectAfterDelete}\n        history={history}\n        id={id}\n      />\n      <br />\n      <br />\n    </>\n  )\n  // }\n}\n\nconst Updateform = (props) => {\n  const history = useHistory()\n  const {\n    // footerCard,\n    // paginationConfig,\n    childFunc,\n    tablepaginationOnChangeForm,\n    // formTitle,\n    // tablepaginationSubmitForm,\n    id,\n    dataDetail,\n    tablepaginationFetchDataDetail,\n    tablepaginationResetForm,\n    tablepaginationDeleteData,\n    // tablepaginationSetloading,\n    payload,\n    // redirectAfterCreate,\n    // isNeedValidation,\n    // onSubmit,\n    // beforeSubmit,\n    errors,\n    loading,\n    userPrivileges,\n    children,\n    serviceName,\n    isReloading,\n    detailServiceName,\n    upsertServiceName,\n    fields,\n    updatePageUrl,\n    createPageUrl,\n    // for delete process\n    redirectAfterDelete,\n    deleteServiceName,\n    needToSave,\n    activeForm,\n    fileArray,\n    apiVersion,\n    buttonAction,\n    myUserId,\n    myMerchantId,\n    preProcessPatchData,\n    tablepaginationSetReloadDetail\n  } = props\n  // console.log('myUserIdmyUserIdmyUserIdmyUserId', myUserId)\n  // const errors = path(['errors', paginationConfig.serviceName], props) || []\n  // console.log('hhhhhhhhfffff', props)\n  const doFetchData = React.useCallback(({ id }) => {\n    var dataRedux = { serviceName: detailServiceName, id, fields, apiVersion: apiVersion }\n    if(preProcessPatchData) dataRedux.preProcessPatchData = preProcessPatchData\n    tablepaginationFetchDataDetail(dataRedux)\n  }, [tablepaginationFetchDataDetail, detailServiceName, fields,isReloading])\n  useEffect(() => {\n    // tablepaginationResetForm({ serviceName: upsertServiceName, activeForm: upsertServiceName, activeDetail: detailServiceName })\n    // returned function will be called on component unmount\n    return () => {\n      // tablepaginationResetForm({ serviceName: upsertServiceName })\n    }\n  }, [tablepaginationResetForm, upsertServiceName,isReloading])\n\n  useEffect(()=>{\n    tablepaginationSetReloadDetail({isReload:false,serviceName:detailServiceName})\n  },[])\n\n  return (\n    <DetailContent\n      activeForm={activeForm}\n      needToSave={needToSave}\n      history={history}\n      upsertServiceName={upsertServiceName}\n      detailServiceName={detailServiceName}\n      deleteServiceName={deleteServiceName}\n      userPrivileges={userPrivileges}\n      errors={errors}\n      serviceName={serviceName}\n      payload={payload || {}}\n      tablepaginationResetForm={tablepaginationResetForm}\n      tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n      tablepaginationDeleteData={tablepaginationDeleteData}\n      loading={loading}\n      dataDetail={dataDetail || {}}\n      childFunc={childFunc}\n      fetchData={doFetchData}\n      id={id}\n      updatePageUrl={updatePageUrl}\n      createPageUrl={createPageUrl}\n      redirectAfterDelete={redirectAfterDelete}\n      fileArray={fileArray}\n      apiVersion={apiVersion}\n      buttonAction={buttonAction}\n      myUserId={myUserId}\n      myMerchantId={myMerchantId}\n    >\n      {children && children}\n      {!children && childFunc && <UpdateViewForm />}\n    </DetailContent>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // const errors = (state.tablepagination.errors || {})[(ownProps.paginationConfig || {}).serviceName] || []\n  // const loading = (state.tablepagination.loading || {})[(ownProps.paginationConfig || {}).serviceName] || false\n\n  const errors = (state.tablepagination.errors || {})[ownProps.detailServiceName]\n  const loading = (state.tablepagination.loading || {})[ownProps.detailServiceName]\n  const dataDetail = (state.tablepagination.dataDetail || {})[ownProps.detailServiceName]\n  const payload = (state.tablepagination.payload || {})[ownProps.upsertServiceName]\n  const fileArray = (state.tablepagination.fileArray || {})[ownProps.upsertServiceName] || {}\n\n  return {\n    fileArray,\n    isReloading: state.tablepagination.reloadDetail[ownProps.detailServiceName],\n    currentFileArray: state.tablepagination.currentFileArray,\n    loading,\n    errors,\n    payload,\n    needToSave: state.tablepagination.needToSave,\n    activeForm: state.tablepagination.activeForm,\n    dataDetail: dataDetail || {},\n    userPrivileges: state.myprofile.user_privileges,\n    myUserId: state.myprofile.user_id,\n    myMerchantId: (state.myprofile.merchant || {}).id\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    tablepaginationSetReloadDetail: data => dispatch(TablepaginationActions.setReloadDetail(data)),\n    tablepaginationSetloading: data => dispatch(TablepaginationActions.tablepaginationSetloading(data)),\n    tablepaginationOnChangeForm: data => dispatch(TablepaginationActions.tablepaginationOnChangeForm(data)),\n    tablepaginationSubmitForm: data => dispatch(TablepaginationActions.tablepaginationSubmitForm(data)),\n    tablepaginationFetchDataDetail: data => dispatch(TablepaginationActions.tablepaginationFetchDataDetail(data)),\n    tablepaginationResetForm: data => dispatch(TablepaginationActions.tablepaginationResetForm(data)),\n    tablepaginationDeleteData: data => dispatch(TablepaginationActions.tablepaginationDeleteData(data))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(Updateform))\n"],"names":["DetailComp","console","log","this","props","formTitle","children","childFunc","fields","upsertServiceName","detailServiceName","updatePageUrl","createPageUrl","redirectAfterDelete","deleteServiceName","customFooterButtons","id","withoutWrapper","preProcessPatchData","apiVersion","buttonAction","collapsable","serviceName","PureComponent","injectIntl","history","useHistory","UpdateViewForm","child","tablepaginationOnChangeForm","dataDetail","payload","loading","userPrivileges","ModalDeleteData","tablepaginationDeleteData","deletePayload","className","type","Loader","onClick","connect","state","ownProps","tablepagination","dispatch","data","TablepaginationActions","DetailContent","errors","fetchData","tablepaginationResetForm","needToSave","activeForm","fileArray","myUserId","myMerchantId","React","childrenWithProps","_","class","role","map","v","i","message","style","width","marginLeft","push","isReloading","reloadDetail","currentFileArray","myprofile","user_privileges","user_id","merchant","tablepaginationSetReloadDetail","tablepaginationSetloading","tablepaginationSubmitForm","tablepaginationFetchDataDetail","doFetchData","dataRedux","useEffect","isReload"],"sourceRoot":""}