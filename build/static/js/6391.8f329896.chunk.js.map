{"version":3,"file":"static/js/6391.8f329896.chunk.js","mappings":"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","sources":["Pages/EmailBatch/Manifest.js","Pages/EmailBatch/PageDetail.js","Pages/EmailBlast/Manifest.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\n// const entityName = 'EmailBatch'\nconst entity = 'emailbatch'\nconst serviceEntity = 'EmailBatch'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Grup Email Customer'\nexport const createPageTitle = 'Buat Grup Email Customer'\nexport const listallPageTitle = 'Email Grup'\nexport const detailPageTitle = 'Detail Email Grup'\nexport const upsertPageTitle = 'Form Grup Email'\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,customer_email_ids{_id, email},file_ids{_id, filename, filenameorigin, file_type},title,description,created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: '',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Judul', accessor: 'title' },\n  { Header: 'Keterangan', accessor: 'description' }\n  // {\n  //   Header: 'Toko',\n  //   accessor: 'toko_id',\n  //   Cell: d => {\n  //     // let data = Moment(d.cell.value)\n  //     // if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     // else data = ''\n  //     const toko = (_.map(d.cell.value || [], (v, k) => v.name) || []).join(', ')\n  //     return (<span>{`${toko}`}</span>)\n  //   }\n  // }\n  // {\n  //   Header: 'Terakhir Dikirim',\n  //   accessor: 'last_sent',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  // { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl,\n  upsertPageTitle\n}\n","import React from 'react'\nimport { injectIntl, FormattedMessage as T } from 'react-intl'\nimport { Detail } from '../../core/features/TablePagination'\n// import { path } from 'ramda'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { detailService, fields, deleteService, detailPageTitle, upsertPageUrl, redirectAfterDelete } from './Manifest'\nimport ManifestEmailBlast from '../EmailBlast/Manifest'\n// import ManifestCustomerEmail from '../CustomerEmail/Manifest'\nimport Moment from 'moment'\nimport AppConfig from '../../core/Config/AppConfig'\n\nconst DetailContent = (props) => {\n  const {\n    dataDetail\n    // history\n  } = props\n\n  let createdAt = Moment(dataDetail.created_at || 0)\n  if (createdAt && createdAt.isValid()) createdAt = createdAt.format('YYYY-MM-DD HH:mm:ss')\n  else createdAt = ''\n  let updatedAt = Moment(dataDetail.updated_at || 0)\n  if (updatedAt && updatedAt.isValid()) updatedAt = updatedAt.format('YYYY-MM-DD HH:mm:ss')\n  else updatedAt = ''\n\n  return (\n    <dl>\n      <dt>Judul</dt>\n      <dd>{dataDetail.title}</dd>\n      <dt><T id='label-description' /></dt>\n      <dd>{dataDetail.description}</dd>\n      <dt>Diperbaharui Oleh</dt>\n      <dd>{(dataDetail.updated_by || {}).full_name}</dd>\n      <dt>Dibuat Oleh</dt>\n      <dd>{(dataDetail.created_by || {}).full_name}</dd>\n      <dt>Tanggal Pembuatan</dt>\n      <dd>{createdAt}</dd>\n      <dt>Tanggal Diperbaharui</dt>\n      <dd>{updatedAt}</dd>\n    </dl>\n  )\n}\n\nfunction Comp (props) {\n  const { match, history } = props\n  return (\n    <ContentWrapper\n      pageTitle={detailPageTitle}\n      breadcrumb={[\n        { title: 'Beranda', link: AppConfig.appHomePage },\n        { title: ManifestEmailBlast.listallPageTitle, link: ManifestEmailBlast.listallPageUrl() },\n        { title: detailPageTitle, link: null, isActive: true }\n      ]}\n      contentHeaderTitle={detailPageTitle}\n      isNeedLoggedin\n    >\n      <div className='row'>\n        <div className='col-md-12'>\n          <Detail\n            detailServiceName={detailService}\n            deleteServiceName={deleteService}\n            fields={fields}\n            id={match.params._id}\n            formTitle={detailPageTitle}\n            redirectAfterDelete={redirectAfterDelete}\n            updatePageUrl={upsertPageUrl(match.params._id)}\n            createPageUrl={upsertPageUrl()}\n            // child={(dataDetail) => {\n            //   // setDataDetail(dataDetail)\n            //   let createdAt = Moment(path([paginationConfig.serviceName, 'created_at'], dataDetail))\n            //   if (createdAt && createdAt.isValid()) createdAt = createdAt.format('YYYY-MM-DD HH:mm:ss')\n            //   else createdAt = ''\n            //   let updatedAt = Moment(path([paginationConfig.serviceName, 'updated_at'], dataDetail))\n            //   if (updatedAt && updatedAt.isValid()) updatedAt = updatedAt.format('YYYY-MM-DD HH:mm:ss')\n            //   else updatedAt = ''\n            //   return (\n            //     <dl>\n            //       <dt>Judul</dt>\n            //       <dd>{path([paginationConfig.serviceName, 'title'], dataDetail) || ''}</dd>\n            //       <dt><T id='label-description' /></dt>\n            //       <dd>{path([paginationConfig.serviceName, 'description'], dataDetail) || ''}</dd>\n            //       <dt>Diperbaharui Oleh</dt>\n            //       <dd>{path([paginationConfig.serviceName, 'updated_by', 'full_name'], dataDetail) || ''}</dd>\n            //       <dt>Dibuat Oleh</dt>\n            //       <dd>{path([paginationConfig.serviceName, 'created_by', 'full_name'], dataDetail) || ''}</dd>\n            //       <dt>Tanggal Pembuatan</dt>\n            //       <dd>{createdAt}</dd>\n            //       <dt>Tanggal Diperbaharui</dt>\n            //       <dd>{updatedAt}</dd>\n            //     </dl>\n            //   )\n            // }}\n            // footerCard={dataDetail => {\n            //   // const subjectId = path([paginationConfig.serviceName, 'subject_id', '_id'], dataDetail)\n            //   return (\n            //     <>\n            //       {/* <button style={{ width: 100 }} type='button' className='btn bg-gradient-danger' data-toggle='modal' data-target='#modal-danger'>Hapus</button> */}\n            //       <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(updatePageUrl(match.params._id))} type='button' className='btn bg-gradient-primary'>Ubah</button>\n            //       <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push('/emailbatch/create')} type='button' className='btn bg-gradient-info'>Buat</button>\n            //       {/* <button type='button' className='btn btn-info' onClick={() => history.push(createHref)}><i className='fas fa-plus' /> {`${createNewButtonLabel || 'Create New'}`}</button> */}\n            //       {/* <button style={{ width: 100, marginLeft: 5 }} onClick={e => history.goBack()} type='button' className='btn bg-gradient-warning'>Back</button> */}\n            //     </>\n            //   )\n            // }}\n            // modalFooter={(dataDetail, tablepaginationDeleteData) => {\n            //   // const subjectId = path([paginationConfig.serviceName, 'subject_id', '_id'], dataDetail)\n            //   return (\n            //     <>\n            //       <button id='buttonCloseModal' type='button' className='btn btn-outline-light' data-dismiss='modal'>Batal</button>\n            //       <button type='button' className='btn btn-outline-light' onClick={() => tablepaginationDeleteData({ id: match.params._id, serviceName: paginationConfig.serviceDeleteName, redirectAfterDelete: redirectAfterDelete, history })}>Hapus</button>\n            //     </>\n            //   )\n            // }}\n          >\n            <DetailContent history={history} match={match} />\n          </Detail>\n          {/* <Table\n            paginationConfig={{\n              serviceName: ManifestCustomerEmail.listallByBatchIdService,\n              fields: ManifestCustomerEmail.fields\n            }}\n            columns={ManifestCustomerEmail.getColumns(history)}\n            createHref={ManifestCustomerEmail.createPageUrl({ batchId: match.params._id })}\n            createNewButtonLabel={ManifestCustomerEmail.createNewButtonLabel}\n            cardTitle='Daftar Email Customer'\n            whereCondition={{ batch_id: match.params._id }}\n          /> */}\n        </div>\n      </div>\n\n    </ContentWrapper>\n  )\n}\nexport default injectIntl(Comp)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Moment from 'moment'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'EmailBlast'\nconst entity = 'emailblast'\nconst serviceEntity = 'EmailBlast'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Email Blast Baru'\nexport const createPageTitle = 'Buat Email Blast'\nexport const listallPageTitle = 'Email Blast'\nexport const detailPageTitle = 'Detail Email Blast'\nexport const upsertPageTitle = 'Form ' + entityName\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,email_batch_id{_id,title, customer_email_ids{email}},toko_id{_id,name,email},name,subject,last_sent,content1,created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: 'Act',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Name', accessor: 'name' },\n  { Header: 'Subject', accessor: 'subject' },\n  // {\n  //   Header: 'Toko',\n  //   accessor: 'toko_id',\n  //   Cell: d => {\n  //     // let data = Moment(d.cell.value)\n  //     // if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     // else data = ''\n  //     const toko = (_.map(d.cell.value || [], (v, k) => v.name) || []).join(', ')\n  //     return (<span>{`${toko}`}</span>)\n  //   }\n  // }\n  {\n    Header: 'Terakhir Dikirim',\n    accessor: 'last_sent',\n    Cell: d => {\n      console.log('asdfadsfdsf' + d.cell.value)\n      if (!d.cell.value) return '-'\n      let data = Moment(d.cell.value)\n      if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      else data = ''\n      return (<span>{`${data}`}</span>)\n    }\n  },\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  // { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","createNewButtonLabel","listallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","detailPageUrl","createPageTitle","listallPageUrl","DetailContent","props","dataDetail","createdAt","Moment","created_at","isValid","format","updatedAt","updated_at","title","description","updated_by","full_name","created_by","injectIntl","match","pageTitle","breadcrumb","link","ManifestEmailBlast","isActive","contentHeaderTitle","isNeedLoggedin","detailServiceName","deleteServiceName","params","_id","formTitle","updatePageUrl","createPageUrl","d","console","log","data"],"sourceRoot":""}