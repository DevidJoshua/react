{"version":3,"file":"static/js/184.113e990c.chunk.js","mappings":"2eAGMA,EAAWC,EAAAA,EAAAA,SAEXC,EAAaD,EAAAA,EAAAA,QACbE,EAAS,aAGFC,EAAsB,qBACtBC,EAAsB,IAAMF,EAE5BG,EAAgB,SAACC,GAAD,iBAAaJ,EAAb,kBAA6BI,EAAK,IAAMA,EAAK,KAC7DC,EAAiB,4BAAWL,IAC5BM,EAAuB,YAEvBC,EAAmB,cACnBC,EAAkB,cAClBC,EAAkB,QAAUV,EAC5BW,EAAgB,uBAEhBC,EAAgB,0BAChBC,EAAiB,wBACjBC,EAAgB,uBAChBC,EAAS,ibACTC,EAAa,SAACC,GAAD,MAAa,CACrC,CACEC,OAAQ,IACRC,SAAU,MACVC,KAAM,SAAAC,GAAC,OACL,iBAAKC,UAAU,YAAf,WACE,mBAAQC,KAAK,SAASD,UAAU,gDAAgD,cAAY,WAA5F,UACE,iBAAMA,UAAU,UAAhB,gCAEF,gBAAKA,UAAU,gBAAgBE,KAAK,OAApC,UAEE,SAAC,KAAD,CAAMF,UAAU,gBAAgBG,GAAE,UAAK3B,GAAL,OAAgBI,EAAhB,YAAuCmB,EAAEK,KAAKC,OAAhF,2BAIR,CAAET,OAAQ,OAAQC,SAAU,QAC5B,CAAED,OAAQ,UAAWC,SAAU,WAC/B,CAAED,OAAQ,WAAYC,SAAU,YAChC,CAAED,OAAQ,YAAaC,SAAU,aACjC,CAAED,OAAQ,UAAWC,SAAU,WAC/B,CAAED,OAAQ,SAAUC,SAAU,UAW9B,CAAED,OAAQ,UAAWC,SAAU,qBAMjC,MACEjB,oBAAAA,EACAC,oBAAAA,EACAyB,cAtD2B,SAACvB,GAAD,iBAAaJ,EAAb,mBAA8BI,IAuDzDD,cAAAA,EACAG,qBAAAA,EACAsB,gBArD6B,YAsD7BrB,iBAAAA,EACAC,gBAAAA,EACAC,gBAAAA,EACAoB,cApD2B,uBAqD3BlB,cAAAA,EACAD,cAAAA,EACAE,eAAAA,EACAC,cAAAA,EACAC,OAAAA,EACAC,WAAAA,EACAV,eAAAA,I,gGCnCF,UAvCA,SAAeyB,GACb,IAAQd,EAAYc,EAAZd,QACR,OACE,SAAC,IAAD,CACEe,UAAWxB,EAAAA,GACXyB,WAAY,CAAC,CAAEC,MAAO,UAAWC,KAAMpC,EAAAA,EAAAA,aAAyB,CAAEmC,MAAO1B,EAAAA,GAAkB2B,KAAM,KAAMC,UAAU,IACjHC,mBAAoB7B,EAAAA,GACpB8B,gBAAc,EAJhB,UAME,gBAAKhB,UAAU,MAAf,UACE,gBAAKA,UAAU,YAAf,UAcE,SAAC,KAAD,CACEiB,mBAAoB1B,EAAAA,GACpBE,OAAQA,EAAAA,GACRyB,SAASxB,EAAAA,EAAAA,IAAWC,GACpBwB,YAAYrC,EAAAA,EAAAA,MACZG,qBAAsBA,EAAAA,GACtBmC,UAAWlC,EAAAA,GACXmC,iBAAe,EACfC,iBAAkB","sources":["Pages/TokoOnline/Manifest.js","Pages/TokoOnline/PageList.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = AppConfig.appName\nconst entity = 'tokoonline'\nconst serviceEntity = 'TokoTokoOnline'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Baru'\nexport const createPageTitle = 'Buat Baru'\nexport const listallPageTitle = 'Daftar Toko'\nexport const detailPageTitle = 'Toko Detail'\nexport const upsertPageTitle = 'Form ' + entityName\nexport const upsertService = 'upsert' + serviceEntity\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,name,pgateway_id{_id,title,keyid,mid,secretkey,configs},template,image_ids{_id, filename, filenameorigin, file_type},logo{_id, filename, filenameorigin, file_type},address,email,template,plink_merchant_secret_key,province,city,subcity,slug,plink_merchant_id,plink_merchant_key_id,status,website,facebook,instagram,youtube,description,created_at,updated_at,owner{_id,full_name,email},created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          {/* <Link className='dropdown-item' to={upsertPageUrl(p.cell.value)}>Detail</Link> */}\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Nama', accessor: 'name' },\n  { Header: 'website', accessor: 'website' },\n  { Header: 'facebook', accessor: 'facebook' },\n  { Header: 'instagram', accessor: 'instagram' },\n  { Header: 'youtube', accessor: 'youtube' },\n  { Header: 'status', accessor: 'status' },\n  // {\n  //   Header: 'Tanggal Diperbaharui',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  { Header: 'Pemilik', accessor: 'owner.full_name' }\n//   { Header: 'updated by', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\n\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  upsertPageTitle,\n  createService,\n  detailService,\n  upsertService,\n  listallService,\n  deleteService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React from 'react'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { Table } from '../../core/features/TablePagination'\nimport AppConfig from '../../core/Config/AppConfig'\nimport { listallService, fields, listallPageTitle, upsertPageUrl, createNewButtonLabel, getColumns } from './Manifest'\nfunction Comp (props) {\n  const { history } = props\n  return (\n    <ContentWrapper\n      pageTitle={listallPageTitle}\n      breadcrumb={[{ title: 'Beranda', link: AppConfig.appHomePage }, { title: listallPageTitle, link: null, isActive: true }]}\n      contentHeaderTitle={listallPageTitle}\n      isNeedLoggedin\n    >\n      <div className='row'>\n        <div className='col-md-12'>\n          {/* <Filter\n            paginationConfig={paginationConfig}\n            child={(tablepaginationOnChangeFilter, filter) => (\n              <div className='row'>\n                <div className='col-sm-6'>\n                  <div className='form-group'>\n                    <label htmlFor='string_to_search'>Search</label>\n                    <input type='text' className='form-control' value={path(['string_to_search'], filter) || ''} id='string_to_search' placeholder='Enter some text' onChange={e => tablepaginationOnChangeFilter({ serviceName: paginationConfig.serviceName, fieldName: 'string_to_search', fieldValue: e.target.value })} />\n                  </div>\n                </div>\n              </div>\n            )}\n          /> */}\n          <Table\n            listallServiceName={listallService}\n            fields={fields}\n            columns={getColumns(history)}\n            createHref={upsertPageUrl()}\n            createNewButtonLabel={createNewButtonLabel}\n            cardTitle={listallPageTitle}\n            withSearchField\n            widthSearchField={300}\n          />\n        </div>\n      </div>\n    </ContentWrapper>\n  )\n}\nexport default Comp\n"],"names":["basePath","AppConfig","entityName","entity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","listallPageUrl","createNewButtonLabel","listallPageTitle","detailPageTitle","upsertPageTitle","upsertService","detailService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","detailPageUrl","createPageTitle","createService","props","pageTitle","breadcrumb","title","link","isActive","contentHeaderTitle","isNeedLoggedin","listallServiceName","columns","createHref","cardTitle","withSearchField","widthSearchField"],"sourceRoot":""}