{"version":3,"file":"static/js/8208.771625d8.chunk.js","mappings":"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","sources":["core/features/TablePagination/components/FilteringTable.js","core/features/TablePagination/components/PaginationNav.js","core/features/TablePagination/components/TableViewTable.js","core/features/TablePagination/config.js","core/features/TablePagination/containers/FilterTableCon.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n// import { FormattedMessage as T } from 'react-intl'\nimport FilteringTableCon from \"../containers/FilterTableCon\";\nimport { CardWrapperCon } from \"../containers\";\nimport DatePicker from \"react-datepicker\";\n\nconst Table = (props) => {\n  var history = useHistory();\n  const {\n    columns,\n    whereCondition,\n    withoutWrapper,\n    distinct,\n    listallServiceName,\n    fields,\n    children,\n    widthSearchField,\n    withSearchField,\n    apiVersion,\n  } = props;\n\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  return (\n    <>\n      <div className=\"d-flex justify-content-between\">\n        <div class=\"mb-3\">\n          <select class=\"custom-select\" id=\"inputGroupSelect01\">\n            <option selected>Bank</option>\n            <option value=\"1\">CIMB Niaga</option>\n            <option value=\"2\">Mandiri</option>\n            <option value=\"3\">OCBC NISP</option>\n          </select>\n        </div>\n\n        <div class=\" mb-3\">\n          <select class=\"custom-select\" id=\"inputGroupSelect02\">\n            <option selected>Status</option>\n            <option value=\"1\">Settled</option>\n            <option value=\"2\">Pending</option>\n            <option value=\"3\">Reject</option>\n          </select>\n        </div>\n\n        <DatePicker\n          style={{ width: \"100%\" }}\n          className=\"form-control\"\n          selected={startDate}\n          onChange={(date) => setStartDate(date)}\n          selectsStart\n          startDate={startDate}\n          endDate={endDate}\n        />\n\n        <div>-</div>\n\n        <DatePicker\n          style={{ width: \"100%\" }}\n          className=\"form-control\"\n          selected={endDate}\n          onChange={(date) => setEndDate(date)}\n          selectsEnd\n          startDate={startDate}\n          endDate={endDate}\n          minDate={startDate}\n        />\n\n        <div class=\"input-group mb-3\" style={{ width: \"40%\" }}>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Search...\"\n          />\n          <div class=\"input-group-append\">\n            <button class=\"btn btn-outline-secondary\" type=\"button\">\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <CardWrapperCon\n        withoutWrapper={withoutWrapper}\n        serviceName={listallServiceName}\n        widthSearchField={widthSearchField}\n        withSearchField={withSearchField}\n      >\n        <FilteringTableCon\n          columns={columns}\n          listallServiceName={listallServiceName}\n          fields={fields}\n          history={history}\n          whereCondition={whereCondition}\n          distinct={distinct}\n          apiVersion={apiVersion}\n        >\n          {children && children}\n        </FilteringTableCon>\n      </CardWrapperCon>\n    </>\n  );\n};\nexport default Table;\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(injectIntl(TableComp))\n","import React, { PureComponent } from 'react'\n// import { Link } from 'react-router-dom'\nimport TableFooter from '@mui/material/TableFooter'\nimport TablePagination from '@mui/material/TablePagination'\nimport TableRow from '@mui/material/TableRow'\n\nexport default function PaginationNav (props) {\n  const {\n    canPreviousPage,\n    gotoPage,\n    canNextPage,\n    previousPage,\n    nextPage,\n    pageCount,\n    pageIndex,\n    pageOptions,\n    pageSize,\n    setPageSize,\n    withPageSize,\n    count\n  } = props\n  const handleChangePage = (event, newPage) => {\n    // alert(newPage)\n    gotoPage(newPage)\n  }\n  const handleChangeRowsPerPage = (e) => {\n    setPageSize(Number(e.target.value))\n    gotoPage(0)\n  }\n  return (\n    <TablePagination\n      rowsPerPageOptions={[10, 20, 30, 40, 50, { label: 'All', value: -1 }]}\n      colSpan={3}\n      count={count}\n      rowsPerPage={pageSize}\n      page={pageIndex}\n      // SelectProps={{\n      //   inputProps: {\n      //     'aria-label': 'rows per page'\n      //   },\n      //   native: true\n      // }}\n      onPageChange={handleChangePage}\n      onRowsPerPageChange={handleChangeRowsPerPage}\n    />\n  )\n}\n","import React, { PureComponent } from 'react'\n// import Loader from '../../../Components/Loader/Loader'\nimport PaginationNav from './PaginationNav'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\n\nexport default class TableViewTable extends PureComponent {\n  render () {\n    const {\n      loading,\n      errors,\n      data,\n      headerGroups,\n      getTableProps,\n      getTableBodyProps,\n      page,\n      prepareRow,\n      canPreviousPage,\n      canNextPage,\n      pageIndex,\n      pageOptions,\n      gotoPage,\n      pageCount,\n      previousPage,\n      nextPage,\n      pageSize,\n      setPageSize,\n      children,\n      count\n    } = this.props\n\n    const childrenWithProps = React.Children.map(children, child => {\n      // checking isValidElement is the safe way and avoids a typescript error too\n      if (React.isValidElement(child)) {\n        return React.cloneElement(child, {\n          headerGroups,\n          getTableProps,\n          getTableBodyProps,\n          page,\n          prepareRow\n        })\n      }\n      return child\n    })\n\n    return (\n      <>\n        {!children &&\n          <>\n            <TableContainer component={Paper}>\n              {!loading && errors && <div class='alert alert-danger' role='alert'><ul>{errors.map((v, i) => <li key={i}>{v.message}</li>)}</ul></div>}\n              {data &&\n              <Table sx={{ minWidth: 650 }} size='small' aria-label='a dense table'>\n                <TableHead>\n                  {headerGroups.map((headerGroup, i) => (\n                    <TableRow key={i} {...headerGroup.getHeaderGroupProps()}>\n                      {headerGroup.headers.map((column, j) => (\n                        <TableCell key={j} {...column.getHeaderProps()}>\n                          {column.render('Header')}\n                          <span>\n                            {column.isSorted\n                              ? column.isSortedDesc\n                                ? ' 🔽'\n                                : ' 🔼'\n                              : ''}\n                          </span>\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  ))}\n                </TableHead>\n                <TableBody {...getTableBodyProps()}>\n                  {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                      <TableRow key={i} sx={{ '&:last-child td, &:last-child th': { border: 0 } }} {...row.getRowProps()}>\n                        {row.cells.map((cell, j) => {\n                          return <TableCell key={j} component='th' scope='row' {...cell.getCellProps()}>{cell.render('Cell')}</TableCell>\n                        })}\n                      </TableRow>\n                    )\n                  })}\n                </TableBody>\n              </Table>}\n            </TableContainer>\n            <PaginationNav\n              canPreviousPage={canPreviousPage}\n              gotoPage={gotoPage}\n              canNextPage={canNextPage}\n              previousPage={previousPage}\n              nextPage={nextPage}\n              pageCount={pageCount}\n              pageIndex={pageIndex}\n              pageOptions={pageOptions}\n              pageSize={pageSize}\n              setPageSize={setPageSize}\n              count={count}\n              withPageSize\n            />\n          </>}\n        {children && <>{childrenWithProps}</>}\n      </>\n    )\n  }\n}\n","\nexport default {\n  // font scaling override - RN default is on\n  defaultMaxPageSize: 500,\n  defaultPageSize: 10,\n  defaultPageIndex: 0\n}\n","import React, { useEffect } from 'react'\nimport { useTable, usePagination } from 'react-table'\n// import _ from 'lodash'\n// import { injectIntl } from 'react-intl'\nimport { connect } from 'react-redux'\n// import { isImmutable } from 'seamless-immutable'\nimport TablepaginationActions from '../redux'\n// import Loader from '../../../Components/Loader/Loader'\nimport TableViewTable from '../components/TableViewTable'\n\n// import TableNavComp from './TableNavComp'\nimport config from '../config'\n\nfunction ListAllContent (props) {\n  const { reload, whereCondition, filter, children, fetchData, errors, columns, data, loading, pageCount: controlledPageCount, pageSize: xPageSize } = props\n  //   console.log('data=====>', data)\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize }\n  } = useTable({\n    columns,\n    data,\n    initialState: { pageIndex: config.defaultPageIndex, pageSize: xPageSize || config.defaultPageSize },\n    manualPagination: true,\n    pageCount: controlledPageCount\n  },\n  usePagination\n  )\n  const [reloadTable, setReloadTable] = React.useState(false)\n\n  useEffect(() => {\n    if (reload !== undefined && !reload) return\n    setReloadTable(true)\n  }, [reload])\n  useEffect(() => {\n    if (reloadTable) {\n      setReloadTable(false)\n      fetchData({\n        pageSize,\n        pageIndex,\n        filter,\n        whereCondition\n      })\n    }\n  }, [fetchData, pageIndex, pageSize, filter, whereCondition, reloadTable])\n  useEffect(() => {\n    setReloadTable(true)\n  }, [pageIndex, pageSize, filter, whereCondition])\n\n  // inject data ke dalam children\n  const childrenWithProps = React.Children.map(children, child => {\n    // checking isValidElement is the safe way and avoids a typescript error too\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, {\n        columns,\n        loading,\n        errors,\n        data,\n        headerGroups,\n        getTableProps,\n        getTableBodyProps,\n        page,\n        prepareRow,\n        canPreviousPage,\n        canNextPage,\n        pageIndex,\n        pageOptions,\n        gotoPage,\n        pageCount,\n        previousPage,\n        nextPage,\n        pageSize,\n        setPageSize\n      })\n    }\n    return child\n  })\n  return (\n    <>\n      {/* render children yang sudah di inject data */}\n      {childrenWithProps}\n    </>\n  )\n}\nfunction TableCon (props) {\n  const {\n    pageIndex,\n    pageSize,\n    pageCount,\n    loading,\n    data,\n    distinct,\n    whereCondition,\n    history,\n    fields,\n    filter,\n    tablepaginationFetchData,\n    listallServiceName,\n    columns,\n    children,\n    reload,\n    listName,\n    apiVersion\n  } = props\n  console.log('malmmmmmpageSizepageSizepageSize', pageSize)\n  const fetchData = React.useCallback(({ pageSize, pageIndex, filter, whereCondition }) => {\n    let whereCond = ''\n    if (typeof whereCondition === 'string') whereCond = JSON.parse(whereCondition || '{}')\n    else whereCond = whereCondition\n    for (var param in whereCond) {\n      // console.log('paramssss=>' + param + '====>' + whereCond[param])\n      if (!whereCond[param]) {\n        // jika salah satu dari parameter where condition nya kosong, maka jangan dihit fetch Data\n        return null\n      }\n    }\n\n    // jika function hit fetch data belum ready, maka jangan dihit fetch data\n    if (!tablepaginationFetchData) return\n    // hit fetch data\n    tablepaginationFetchData({\n      apiVersion: apiVersion,\n      listName: listName,\n      serviceName: listallServiceName,\n      pageSize: pageSize || config.defaultPageSize,\n      pageIndex: pageIndex || config.defaultPageIndex,\n      filter,\n      // filter: Immutable.asMutable(filter || {}, { deep: true }),\n      fields,\n      history,\n      whereCondition: whereCond,\n      distinct\n    })\n  }, [listName, distinct, fields, history, listallServiceName, tablepaginationFetchData])\n  return (\n    <ListAllContent\n      columns={columns}\n      data={data || []}\n      fetchData={fetchData}\n      loading={loading}\n      reload={reload}\n      filter={filter}\n      pageCount={pageCount}\n      pageSize={pageSize}\n      pageIndex={pageIndex}\n      whereCondition={whereCondition}\n    >\n      {/* jika ada children maka render children, biasanya di passing dari component PageList */}\n      {children && children}\n      {/* kalau tidak ada children maka kita render component default nya yaitu TableViewTable artinya list data yang ditampilkan dalam bentuk table */}\n      {!children && <TableViewTable />}\n    </ListAllContent>\n  )\n}\nconst mapStateToProps = (state, ownProps) => {\n  const errors = (state.tablepagination.errors || {})[ownProps.listName || ownProps.listallServiceName]\n  const loading = (state.tablepagination.loading || {})[ownProps.listName || ownProps.listallServiceName]\n  const reload = (state.tablepagination.reload || {})[ownProps.listName || ownProps.listallServiceName]\n  const data = (state.tablepagination.data || {})[ownProps.listName || ownProps.listallServiceName]\n  const pageCount = (state.tablepagination.pageCount || {})[ownProps.listName || ownProps.listallServiceName]\n  const pageSize = (state.tablepagination.pageSize || {})[ownProps.listName || ownProps.listallServiceName] || ownProps.pageSize\n  const filter = (state.tablepagination.filter || {})[ownProps.listName || ownProps.listallServiceName]\n  const props = {\n    reload,\n    data,\n    filter,\n    loading: loading,\n    pageCount,\n    pageSize: pageSize,\n    pageIndex: state.tablepagination.pageIndex,\n    errors\n  }\n  return props\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    tablepaginationFetchData: data => dispatch(TablepaginationActions.tablepaginationFetchData(data))\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TableCon)\n"],"names":["props","history","useHistory","columns","whereCondition","withoutWrapper","distinct","listallServiceName","fields","children","widthSearchField","withSearchField","apiVersion","useState","Date","startDate","setStartDate","endDate","setEndDate","className","class","id","selected","value","style","width","onChange","date","selectsStart","selectsEnd","minDate","type","placeholder","serviceName","PaginationNav","canPreviousPage","gotoPage","pageIndex","canNextPage","previousPage","nextPage","pageCount","pageSize","pageOptions","setPageSize","count","withPageSize","rowsPerPageOptions","label","colSpan","rowsPerPage","page","onPageChange","event","newPage","onRowsPerPageChange","e","Number","target","TableViewTable","this","loading","errors","data","headerGroups","getTableProps","getTableBodyProps","prepareRow","childrenWithProps","React","child","component","Paper","role","map","v","i","message","sx","minWidth","size","headerGroup","getHeaderGroupProps","headers","column","j","getHeaderProps","render","isSorted","isSortedDesc","row","border","getRowProps","cells","cell","scope","getCellProps","PureComponent","defaultMaxPageSize","defaultPageSize","defaultPageIndex","ListAllContent","reload","filter","fetchData","controlledPageCount","xPageSize","useTable","initialState","config","manualPagination","usePagination","state","reloadTable","setReloadTable","useEffect","undefined","connect","ownProps","tablepagination","listName","dispatch","tablepaginationFetchData","TablepaginationActions","console","log","whereCond","param","JSON","parse"],"sourceRoot":""}