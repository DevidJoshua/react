{"version":3,"file":"static/js/225.9418b344.chunk.js","mappings":"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","sources":["Pages/Category/Manifest.js","Pages/Category/PageUpdate.js","Pages/TokoOnline/Manifest.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Category'\nconst entity = 'category'\nconst serviceEntity = 'Category'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Kategori Baru'\nexport const createPageTitle = 'Buat Kategori'\nexport const listallPageTitle = 'Kategori'\nexport const detailPageTitle = 'Detail Kategori'\nexport const upsertPageTitle = 'Form ' + entityName\n// export const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\n// export const updateService = 'update' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,title,toko_id{_id, name},parent_id{_id, title},created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Kategori', accessor: 'title' },\n  { Header: 'Induk', accessor: 'parent_id.title' },\n  {\n    Header: 'Toko',\n    accessor: 'toko_id',\n    Cell: d => {\n      // let data = Moment(d.cell.value)\n      // if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      // else data = ''\n      const toko = (_.map(d.cell.value || [], (v, k) => v.name) || []).join(', ')\n      return (<span>{`${toko}`}</span>)\n    }\n  }\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  // { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React from 'react'\nimport { Detail, Multiselect, CardWrapperCon } from '../../core/features/TablePagination'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { injectIntl } from 'react-intl'\nimport AppConfig from '../../core/Config/AppConfig'\nimport { listallService, upsertPageTitle, listallPageUrl, listallPageTitle, upsertService, fields, detailService, redirectAfterDelete } from './Manifest'\nimport TokoOnlineManifest from '../TokoOnline/Manifest'\n\nconst FormUpdate = (props) => {\n  const {\n    tablepaginationOnChangeForm,\n    dataDetail,\n    payload,\n    upsertServiceName,\n    id,\n    tablepaginationResetForm,\n    formTitle\n  } = props\n  // useMemo(() => tablepaginationResetForm({ serviceName: upsertServiceName, defaultFormValue: { _id: id } }), [])\n  React.useEffect(() => {\n    const defaultFormValue = {}\n    if (id) defaultFormValue._id = id\n    tablepaginationResetForm({ isInitialReset: true, serviceName: upsertServiceName, defaultFormValue })\n    // if (id) tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: '_id', fieldValue: id, resetValue: id })\n  }, [tablepaginationResetForm, upsertServiceName, id])\n  // if (dataDetail) {\n  //   tablepaginationResetForm({ serviceName: upsertServiceName, defaultFormValue: { _id: id } })\n  // }\n  // if (dataDetail) {\n  // useMemo(() => {\n  //   return tablepaginationResetForm({ serviceName: upsertServiceName, defaultFormValue: { _id: dataDetail._id } })\n  // }, [upsertServiceName, tablepaginationResetForm, dataDetail])\n  // }\n  // const [payloadValueOriginal, setPayloadValueOriginal] = React.useState([])\n  console.log('payloadpayloadpayload===>', payload.title)\n  console.log('payloadpayloadpayload===>', dataDetail.title)\n  return (\n    <div className='row'>\n      <div className='col-sm-6'>\n        <CardWrapperCon formTitle={formTitle}>\n          <div className='form-group'>\n            <label htmlFor='title'>Nama Kategori</label>\n            <input type='text' className='form-control' id='title' placeholder='Masukkan nama kategori' value={typeof payload.title !== 'undefined' ? payload.title : dataDetail.title || ''} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'title', fieldValue: e.target.value })} />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='toko_id'>Pilih Toko</label>\n            <br />\n            <Multiselect\n              isMulti\n              className='form-control'\n              label='Pilih Toko'\n              labelButton='Pilih'\n              labelColumn='Pilih'\n              placeholder='Pilih'\n              optionColumnValue='_id'\n              optionColumnLabel='name'\n              payloadValue={payload.toko_id}\n              defaultValueOriginal={dataDetail.toko_id}\n              getColumns={({ onChange }) => []}\n              listallServiceName={TokoOnlineManifest.listallService}\n              fields={TokoOnlineManifest.fields}\n              onChange={({ val }) => { tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'toko_id', fieldValue: val }) }}\n            />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='parent_id'>Pilih Kategori Induk</label>\n            <br />\n            <Multiselect\n              isMulti={false}\n              className='form-control'\n              label='Pilih Kategori Induk'\n              labelButton='Pilih'\n              labelColumn='Pilih'\n              placeholder='Pilih'\n              optionColumnValue='_id'\n              optionColumnLabel='title'\n              payloadValue={payload.parent_id}\n              defaultValueOriginal={dataDetail.parent_id}\n              getColumns={({ onChange }) => []}\n              listallServiceName={listallService}\n              fields={fields}\n              onChange={({ val }) => {\n                tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'parent_id', fieldValue: val })\n              }}\n            />\n            {/* <Combobox\n              className='form-control'\n              label='pilih kategori induk'\n              labelButton='Pilih'\n              labelColumn='Pilih'\n              optionColumnValue='_id'\n              optionColumnLabel='title'\n              getColumns={({ onChange }) => [\n                { Header: 'Nama Kategori', accessor: 'title' }\n              ]}\n              listallServiceName={listallService}\n              upsertServiceName={upsertServiceName}\n              fields={fields}\n              defaultValue={typeof payload.parent_id !== 'undefined' ? payload.parent_id : (dataDetail.parent_id || {})._id}\n              onChange={({ val }) => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'parent_id', fieldValue: val })}\n            /> */}\n          </div>\n        </CardWrapperCon>\n      </div>\n    </div>\n  )\n}\nfunction Comp (props) {\n  console.log('raysaaaaaaaa')\n  const { match } = props\n  return (\n    <ContentWrapper\n      pageTitle={upsertPageTitle}\n      breadcrumb={[\n        { title: 'Beranda', link: AppConfig.appHomePage },\n        { title: listallPageTitle, link: listallPageUrl() },\n        { title: upsertPageTitle, link: null, isActive: true }\n      ]}\n      contentHeaderTitle={upsertPageTitle}\n      isNeedLoggedin\n    >\n      <div className='row'>\n        <div className='col-md-12'>\n          <Detail\n            detailServiceName={detailService}\n            upsertServiceName={upsertService}\n            fields={fields}\n            id={match.params._id}\n            formTitle={upsertPageTitle}\n            redirectAfterDelete={redirectAfterDelete}\n            withoutWrapper\n          >\n            <FormUpdate formTitle={upsertPageTitle} />\n          </Detail>\n        </div>\n      </div>\n    </ContentWrapper>\n  )\n}\nexport default injectIntl(Comp)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = AppConfig.appName\nconst entity = 'tokoonline'\nconst serviceEntity = 'TokoTokoOnline'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Baru'\nexport const createPageTitle = 'Buat Baru'\nexport const listallPageTitle = 'Daftar Toko'\nexport const detailPageTitle = 'Toko Detail'\nexport const upsertPageTitle = 'Form ' + entityName\nexport const upsertService = 'upsert' + serviceEntity\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,name,pgateway_id{_id,title,keyid,mid,secretkey,configs},template,image_ids{_id, filename, filenameorigin, file_type},logo{_id, filename, filenameorigin, file_type},address,email,template,plink_merchant_secret_key,province,city,subcity,slug,plink_merchant_id,plink_merchant_key_id,status,website,facebook,instagram,youtube,description,created_at,updated_at,owner{_id,full_name,email},created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          {/* <Link className='dropdown-item' to={upsertPageUrl(p.cell.value)}>Detail</Link> */}\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Nama', accessor: 'name' },\n  { Header: 'website', accessor: 'website' },\n  { Header: 'facebook', accessor: 'facebook' },\n  { Header: 'instagram', accessor: 'instagram' },\n  { Header: 'youtube', accessor: 'youtube' },\n  { Header: 'status', accessor: 'status' },\n  // {\n  //   Header: 'Tanggal Diperbaharui',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  { Header: 'Pemilik', accessor: 'owner.full_name' }\n//   { Header: 'updated by', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\n\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  upsertPageTitle,\n  createService,\n  detailService,\n  upsertService,\n  listallService,\n  deleteService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","listallPageUrl","createNewButtonLabel","listallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","d","toko","_","v","k","name","join","detailPageUrl","createPageTitle","FormUpdate","props","tablepaginationOnChangeForm","dataDetail","payload","upsertServiceName","tablepaginationResetForm","formTitle","React","defaultFormValue","_id","isInitialReset","serviceName","console","log","title","htmlFor","placeholder","onChange","e","fieldName","fieldValue","target","isMulti","label","labelButton","labelColumn","optionColumnValue","optionColumnLabel","payloadValue","toko_id","defaultValueOriginal","listallServiceName","TokoOnlineManifest","val","parent_id","injectIntl","match","pageTitle","breadcrumb","link","isActive","contentHeaderTitle","isNeedLoggedin","detailServiceName","params","withoutWrapper","entityName","createService"],"sourceRoot":""}