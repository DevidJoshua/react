{"version":3,"file":"static/js/3302.636457da.chunk.js","mappings":"oOAOMA,EAAgB,SAACC,GACrB,IACEC,EACED,EADFC,WAEEC,EAAYC,GAAAA,CAAOF,EAAWG,YAAc,GACVF,EAAlCA,GAAaA,EAAUG,UAAuBH,EAAUI,OAAO,uBAClD,GACjB,IAAIC,EAAYJ,GAAAA,CAAOF,EAAWO,YAAc,GAGhD,OAFsCD,EAAlCA,GAAaA,EAAUF,UAAuBE,EAAUD,OAAO,uBAClD,IAEf,2BACE,iDACA,wBAAKL,EAAWQ,SAChB,wCACA,wBAAKR,EAAWS,eAChB,+CACA,yBAAMT,EAAWU,YAAc,IAAIC,aACnC,yCACA,yBAAMX,EAAWY,YAAc,IAAID,aACnC,+CACA,wBAAKV,KACL,kDACA,wBAAKK,QAwFX,WAAeO,EAAAA,EAAAA,KApFf,SAAed,GACb,IAAQe,EAAmBf,EAAnBe,MAAOC,EAAYhB,EAAZgB,QAGf,OACE,SAAC,IAAD,CACEC,UAAWC,EAAAA,GACXC,WAAY,CACV,CAAEV,MAAO,UAAWW,KAAMC,EAAAA,EAAAA,aAC1B,CAAEZ,MAAOa,EAAAA,GAAkBF,MAAMG,EAAAA,EAAAA,OACjC,CAAEd,MAAOS,EAAAA,GAAiBE,KAAM,KAAMI,UAAU,IAElDC,mBAAoBP,EAAAA,GACpBQ,gBAAc,EARhB,UAUE,gBAAKC,UAAU,MAAf,UACE,gBAAKA,UAAU,YAAf,UACE,SAAC,IAAD,CACEC,kBAAmBC,EAAAA,GACnBC,kBAAmBC,EAAAA,GACnBC,OAAQA,EAAAA,GACRC,GAAIlB,EAAMmB,OAAOC,IACjBC,UAAWlB,EAAAA,GACXmB,oBAAqBA,EAAAA,GACrBC,eAAeC,EAAAA,EAAAA,IAAcxB,EAAMmB,OAAOC,KAC1CK,eAAeD,EAAAA,EAAAA,MARjB,UA2DE,SAACxC,EAAD,CAAeiB,QAASA,EAASD,MAAOA","sources":["Pages/DonationLink/PageDetail.js"],"sourcesContent":["import React from 'react'\nimport { injectIntl } from 'react-intl'\nimport { Detail } from '../../core/features/TablePagination'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { detailService, fields, deleteService, detailPageTitle, listallPageTitle, listallPageUrl, redirectAfterDelete, upsertPageUrl } from './Manifest'\nimport Moment from 'moment'\nimport AppConfig from '../../core/Config/AppConfig'\nconst DetailContent = (props) => {\n  const {\n    dataDetail\n  } = props\n  let createdAt = Moment(dataDetail.created_at || 0)\n  if (createdAt && createdAt.isValid()) createdAt = createdAt.format('YYYY-MM-DD HH:mm:ss')\n  else createdAt = ''\n  let updatedAt = Moment(dataDetail.updated_at || 0)\n  if (updatedAt && updatedAt.isValid()) updatedAt = updatedAt.format('YYYY-MM-DD HH:mm:ss')\n  else updatedAt = ''\n  return (\n    <dl>\n      <dt>Nama Payment Method</dt>\n      <dd>{dataDetail.title}</dd>\n      <dt>Keterangan</dt>\n      <dd>{dataDetail.description}</dd>\n      <dt>Diperbaharui Oleh</dt>\n      <dd>{(dataDetail.updated_by || {}).full_name}</dd>\n      <dt>Dibuat Oleh</dt>\n      <dd>{(dataDetail.created_by || {}).full_name}</dd>\n      <dt>Tanggal Pembuatan</dt>\n      <dd>{createdAt}</dd>\n      <dt>Tanggal Diperbaharui</dt>\n      <dd>{updatedAt}</dd>\n    </dl>\n  )\n}\nfunction Comp (props) {\n  const { match, history } = props\n  // const [dataDetail, setDataDetail] = React.useState([])\n  // const [lastSent, setLastSent] = React.useState(0)\n  return (\n    <ContentWrapper\n      pageTitle={detailPageTitle}\n      breadcrumb={[\n        { title: 'Beranda', link: AppConfig.appHomePage },\n        { title: listallPageTitle, link: listallPageUrl() },\n        { title: detailPageTitle, link: null, isActive: true }\n      ]}\n      contentHeaderTitle={detailPageTitle}\n      isNeedLoggedin\n    >\n      <div className='row'>\n        <div className='col-md-12'>\n          <Detail\n            detailServiceName={detailService}\n            deleteServiceName={deleteService}\n            fields={fields}\n            id={match.params._id}\n            formTitle={detailPageTitle}\n            redirectAfterDelete={redirectAfterDelete}\n            updatePageUrl={upsertPageUrl(match.params._id)}\n            createPageUrl={upsertPageUrl()}\n            // child={(dataDetail) => {\n            //   let createdAt = Moment(path([paginationConfig.serviceName, 'created_at'], dataDetail))\n            //   if (createdAt && createdAt.isValid()) createdAt = createdAt.format('YYYY-MM-DD HH:mm:ss')\n            //   else createdAt = ''\n            //   let updatedAt = Moment(path([paginationConfig.serviceName, 'updated_at'], dataDetail))\n            //   if (updatedAt && updatedAt.isValid()) updatedAt = updatedAt.format('YYYY-MM-DD HH:mm:ss')\n            //   else updatedAt = ''\n            //   let lastSentDate = Moment(path([paginationConfig.serviceName, 'last_sent'], dataDetail))\n            //   if (lastSentDate && lastSentDate.isValid()) lastSentDate = lastSentDate.format('YYYY-MM-DD HH:mm:ss')\n            //   else lastSentDate = ''\n            //   return (\n            //     <dl>\n            //       <dt>Nama Payment Method</dt>\n            //       <dd>{path([paginationConfig.serviceName, 'title'], dataDetail) || ''}</dd>\n            //       <dt>Keterangan</dt>\n            //       <dd>{path([paginationConfig.serviceName, 'description'], dataDetail) || ''}</dd>\n            //       <dt>Diperbaharui Oleh</dt>\n            //       <dd>{path([paginationConfig.serviceName, 'updated_by', 'full_name'], dataDetail) || ''}</dd>\n            //       <dt>Dibuat Oleh</dt>\n            //       <dd>{path([paginationConfig.serviceName, 'created_by', 'full_name'], dataDetail) || ''}</dd>\n            //       <dt>Tanggal Pembuatan</dt>\n            //       <dd>{createdAt}</dd>\n            //       <dt>Tanggal Diperbaharui</dt>\n            //       <dd>{updatedAt}</dd>\n            //     </dl>\n            //   )\n            // }}\n            // footerCard={dataDetail => {\n            //   // const subjectId = path([paginationConfig.serviceName, 'subject_id', '_id'], dataDetail)\n            //   return (\n            //     <>\n            //       <button style={{ width: 100 }} type='button' className='btn bg-gradient-danger' data-toggle='modal' data-target='#modal-danger'>Hapus</button>\n            //       <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(updatePageUrl(match.params._id))} type='button' className='btn bg-gradient-primary'>Ubah</button>\n            //       <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push('/paymentmethod/create')} type='button' className='btn bg-gradient-info'>Buat Baru</button>\n            //       {/* <button style={{ width: 100, marginLeft: 5 }} type='button' className='btn bg-gradient-info' data-toggle='modal' data-target='#modal-send-email'>Kirim</button> */}\n            //       {/* <button type='button' className='btn btn-info' onClick={() => history.push(createHref)}><i className='fas fa-plus' /> {`${createNewButtonLabel || 'Create New'}`}</button> */}\n            //       {/* <button style={{ width: 100, marginLeft: 5 }} onClick={e => history.goBack()} type='button' className='btn bg-gradient-warning'>Back</button> */}\n            //     </>\n            //   )\n            // }}\n            // modalFooter={(dataDetail, tablepaginationDeleteData) => {\n            //   // const subjectId = path([paginationConfig.serviceName, 'subject_id', '_id'], dataDetail)\n            //   return (\n            //     <>\n            //       <button id='buttonCloseModal' type='button' className='btn btn-outline-light' data-dismiss='modal'>Batal</button>\n            //       <button type='button' className='btn btn-outline-light' onClick={() => tablepaginationDeleteData({ id: match.params._id, serviceName: paginationConfig.serviceDeleteName, redirectAfterDelete: redirectAfterDelete, history })}>Hapus</button>\n            //     </>\n            //   )\n            // }}\n          >\n            <DetailContent history={history} match={match} />\n          </Detail>\n        </div>\n      </div>\n\n    </ContentWrapper>\n  )\n}\nexport default injectIntl(Comp)\n"],"names":["DetailContent","props","dataDetail","createdAt","Moment","created_at","isValid","format","updatedAt","updated_at","title","description","updated_by","full_name","created_by","injectIntl","match","history","pageTitle","detailPageTitle","breadcrumb","link","AppConfig","listallPageTitle","listallPageUrl","isActive","contentHeaderTitle","isNeedLoggedin","className","detailServiceName","detailService","deleteServiceName","deleteService","fields","id","params","_id","formTitle","redirectAfterDelete","updatePageUrl","upsertPageUrl","createPageUrl"],"sourceRoot":""}