{"version":3,"file":"static/js/7511.92bf1c34.chunk.js","mappings":"0OAKMA,EAAa,SAACC,GAClB,IACEC,EAMED,EANFC,4BACAC,EAKEF,EALFE,WACAC,EAIEH,EAJFG,QACAC,EAGEJ,EAHFI,kBACAC,EAEEL,EAFFK,yBACAC,EACEN,EADFM,GASF,OANAC,EAAAA,WAAgB,WAEd,IAAMC,EAAmB,GACrBF,IAAIE,EAAiBC,IAAMH,GAC/BD,EAAyB,CAAEK,gBAAgB,EAAMC,YAAaP,EAAmBI,iBAAAA,EAAkBI,WAAY,MAC9G,CAACP,EAA0BD,EAAmBE,KAE/C,gBAAKO,UAAU,MAAf,UACE,iBAAKA,UAAU,WAAf,WACE,iBAAKA,UAAU,aAAf,WACE,kBAAOC,QAAQ,QAAf,oBACA,kBAAOC,KAAK,OAAOF,UAAU,eAAeG,MAAgC,qBAAlBb,EAAQc,MAAwBd,EAAQc,MAAQf,EAAWe,OAAS,GAAIC,SAAU,SAAAC,GAAC,OAAIlB,EAA4B,CAAEU,YAAaP,EAAmBgB,UAAW,QAASC,WAAYF,EAAEG,OAAON,eAE1P,iBAAKH,UAAU,aAAf,WACE,kBAAOC,QAAQ,cAAf,0BACA,kBAAOC,KAAK,OAAOF,UAAU,eAAeP,GAAG,cAAciB,YAAY,oBAAoBP,MAAsC,qBAAxBb,EAAQqB,YAA8BrB,EAAQqB,YAActB,EAAWsB,aAAe,GAAIN,SAAU,SAAAC,GAAC,OAAIlB,EAA4B,CAAEU,YAAaP,EAAmBgB,UAAW,cAAeC,WAAYF,EAAEG,OAAON,eAEnU,iBAAKH,UAAU,aAAf,WACE,kBAAOC,QAAQ,UAAf,wCACA,mBACA,SAAC,IAAD,CACEW,SAAO,EACPZ,UAAU,eACVa,MAAM,4BACNC,YAAY,QACZC,YAAY,QACZC,kBAAkB,MAClBC,kBAAkB,QAClBC,aAAc5B,EAAQ6B,aACtBC,qBAAsB/B,EAAW8B,aACjCE,WAAY,cAAGhB,SAAH,MAAkB,IAC9BiB,mBAAmB,mBACnBC,OAAO,2FACPlB,SAAU,gBAAGmB,EAAH,EAAGA,IAAH,OAAapC,EAA4B,CAAEU,YAAaP,EAAmBgB,UAAW,eAAgBC,WAAYgB,KAC5HzB,WAAY,aAOlB0B,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAgCH,OAhCGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACJ,WACEC,QAAQC,IAAI,aACZ,IAAQC,EAAUC,KAAK1C,MAAfyC,MACR,OACE,SAAC,IAAD,CACEE,UAAU,cACVC,WAAY,CACV,CAAE3B,MAAO,OAAQ4B,KAAMC,EAAAA,EAAAA,aACvB,CAAE7B,MAAO,OAAQ4B,KAAM,QAASE,UAAU,GAE1C,CAAE9B,MAAO,cAAe4B,KAAM,KAAME,UAAU,IAEhDC,mBAAmB,cACnBC,gBAAc,EAThB,UAWE,gBAAKpC,UAAU,MAAf,UACE,gBAAKA,UAAU,YAAf,UACE,SAAC,IAAD,CACEP,GAAImC,EAAMS,OAAOzC,IACjB0C,kBAAkB,gBAClB/C,kBAAkB,aAClBgC,OAAO,uHACPgB,UAAU,cACVC,oBAAoB,QANtB,UAQE,SAACtD,EAAD,gBAMX,EAhCGuC,CAAmBgB,EAAAA,WAkCzB","sources":["core/Pages/Role/PageUpdateRole.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Detail, Multiselect } from '../../features/TablePagination'\nimport ContentWrapper from '../../Components/Layout/ContentWrapper'\nimport AppConfig from '../../Config/AppConfig'\n\nconst FormUpdate = (props) => {\n  const {\n    tablepaginationOnChangeForm,\n    dataDetail,\n    payload,\n    upsertServiceName,\n    tablepaginationResetForm,\n    id\n  } = props\n  // useMemo(() => tablepaginationResetForm({ serviceName: upsertServiceName }), [upsertServiceName, tablepaginationResetForm])\n  React.useEffect(() => {\n    // if (id) tablepaginationResetForm({ isInitialReset: true, serviceName: upsertServiceName, defaultFormValue: { _id: id } })\n    const defaultFormValue = {}\n    if (id) defaultFormValue._id = id\n    tablepaginationResetForm({ isInitialReset: true, serviceName: upsertServiceName, defaultFormValue, apiVersion: 2 })\n  }, [tablepaginationResetForm, upsertServiceName, id])\n  return (\n    <div className='row'>\n      <div className='col-sm-6'>\n        <div className='form-group'>\n          <label htmlFor='title'>title</label>\n          <input type='text' className='form-control' value={typeof payload.title !== 'undefined' ? payload.title : dataDetail.title || ''} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'title', fieldValue: e.target.value })} />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='description'>description</label>\n          <input type='text' className='form-control' id='description' placeholder='Enter description' value={typeof payload.description !== 'undefined' ? payload.description : dataDetail.description || ''} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'description', fieldValue: e.target.value })} />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='toko_id'>Pilih Beberapa Privileges</label>\n          <br />\n          <Multiselect\n            isMulti\n            className='form-control'\n            label='pilih Beberapa Privileges'\n            labelButton='Pilih'\n            labelColumn='Pilih'\n            optionColumnValue='_id'\n            optionColumnLabel='title'\n            payloadValue={payload.privilege_id}\n            defaultValueOriginal={dataDetail.privilege_id}\n            getColumns={({ onChange }) => []}\n            listallServiceName='getAllPrivileges'\n            fields='_id,title,entity,description,name,updated_at,created_by{full_name},updated_by{full_name}'\n            onChange={({ val }) => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: 'privilege_id', fieldValue: val })}\n            apiVersion={2}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\nclass UpdateRole extends Component {\n  render () {\n    console.log('dipoooooo')\n    const { match } = this.props\n    return (\n      <ContentWrapper\n        pageTitle='Update Role'\n        breadcrumb={[\n          { title: 'Home', link: AppConfig.appHomePage },\n          { title: 'Role', link: '/role', isActive: true },\n          // { title: 'Role Detail', link: `/role/detail/${match.params._id}`, isActive: true },\n          { title: 'Update Role', link: null, isActive: true }\n        ]}\n        contentHeaderTitle='Update Role'\n        isNeedLoggedin\n      >\n        <div className='row'>\n          <div className='col-md-12'>\n            <Detail\n              id={match.params._id}\n              detailServiceName='getDetailRole'\n              upsertServiceName='upsertRole'\n              fields='privilege_id{_id,title,name},title,_id,description,created_at,updated_at,created_by{full_name},updated_by{full_name}'\n              formTitle='Update Role'\n              redirectAfterDelete='/role'\n            >\n              <FormUpdate />\n            </Detail>\n          </div>\n        </div>\n      </ContentWrapper>\n    )\n  }\n}\nexport default UpdateRole\n"],"names":["FormUpdate","props","tablepaginationOnChangeForm","dataDetail","payload","upsertServiceName","tablepaginationResetForm","id","React","defaultFormValue","_id","isInitialReset","serviceName","apiVersion","className","htmlFor","type","value","title","onChange","e","fieldName","fieldValue","target","placeholder","description","isMulti","label","labelButton","labelColumn","optionColumnValue","optionColumnLabel","payloadValue","privilege_id","defaultValueOriginal","getColumns","listallServiceName","fields","val","UpdateRole","console","log","match","this","pageTitle","breadcrumb","link","AppConfig","isActive","contentHeaderTitle","isNeedLoggedin","params","detailServiceName","formTitle","redirectAfterDelete","Component"],"sourceRoot":""}