{"version":3,"file":"static/js/8187.81888f20.chunk.js","mappings":"6fAIMA,EAAWC,EAAAA,EAAAA,SAGXC,EAAS,UAGFC,EAAsB,kBACtBC,EAAsB,WAEtBC,EAAgB,SAACC,GAAD,iBAAaJ,EAAb,kBAA6BI,EAAK,IAAMA,EAAK,KAC7DC,EAAiB,4BAAWL,IAE5BM,EAAuB,YAEvBC,EAAmBC,WACnBC,EAAkBD,iBAClBE,EAAkB,eAClBC,EAAgB,oBAEhBC,EAAgB,uBAChBC,EAAiB,qBACjBC,EAAgB,oBAChBC,EAAS,ofACTC,EAAa,SAACC,GAAD,MAAa,CACrC,CACEC,OAAQ,IACRC,SAAU,MACVC,KAAM,SAAAC,GAAC,OACL,iBAAKC,UAAU,YAAf,WACE,mBAAQC,KAAK,SAASD,UAAU,gDAAgD,cAAY,WAA5F,UACE,iBAAMA,UAAU,UAAhB,gCAEF,gBAAKA,UAAU,gBAAgBE,KAAK,OAApC,UACE,SAAC,KAAD,CAAMF,UAAU,gBAAgBG,GAAE,UAAK3B,GAAL,OAAgBG,EAAhB,YAAuCoB,EAAEK,KAAKC,OAAhF,2BAIR,CAAET,OAAQ,OAAQC,SAAU,QAC5B,CAAED,OAAQ,OAAQC,SAAU,QAC5B,CAAED,OAAQ,QAASC,SAAU,SAC7B,CAAED,OAAQ,WAAYC,SAAU,SAAAE,GAAC,OAAK,2BAAQO,IAAAA,IAAMP,EAAEQ,aAAa,SAAAC,GAAC,OAAIA,EAAEC,UAAU,IAAIC,KAAK,UAC7F,CAAEd,OAAQ,OAAQC,SAAU,SAAAE,GAAC,OAAK,2BAAQO,IAAAA,IAAMP,EAAEY,SAAS,SAAAH,GAAC,OAAIA,EAAEI,SAAS,IAAIF,KAAK,UAsBpF,CAAEd,OAAQ,cAAeC,SAAU,0BAMrC,MACElB,oBAAAA,EACAC,oBAAAA,EACAiC,cAhE2B,SAAC/B,GAAD,iBAAaJ,EAAb,mBAA8BI,IAiEzDD,cAAAA,EACAG,qBAAAA,EACA8B,gBA9D6B,YA+D7B7B,iBAAAA,EACAE,gBAAAA,EACAC,gBAAAA,EACA2B,cA7D2B,oBA8D3BzB,cAAAA,EACAD,cAAAA,EACAE,eAAAA,EACAC,cAAAA,EACAC,OAAAA,EACAC,WAAAA,EACAX,eAAAA,I,6ICnFIiC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAaC,GAAQ,IAAD,yBAClB,cAAMA,IACDC,MAAQ,CACXC,SAASzB,EAAAA,EAAAA,IAAWuB,EAAMtB,UAHV,EAgDnB,OA3CA,8BAED,WACE,IAAQwB,EAAYC,KAAKF,MAAjBC,QACR,OACE,SAAC,IAAD,CACEE,UAAWpC,EAAAA,GACXqC,WAAY,CAAC,CAAEb,MAAO,UAAWc,KAAM9C,EAAAA,EAAAA,aAAyB,CAAEgC,MAAOxB,EAAAA,GAAkBsC,KAAM,KAAMC,UAAU,IACjHC,mBAAoBxC,EAAAA,GACpByC,gBAAc,EAJhB,UAME,gBAAK1B,UAAU,MAAf,UACE,gBAAKA,UAAU,YAAf,UAiBE,SAAC,KAAD,CACE2B,mBAAoBpC,EAAAA,GACpBE,OAAQA,EAAAA,GACR0B,QAASA,EACTS,YAAY/C,EAAAA,EAAAA,MACZG,qBAAsBA,EAAAA,GACtB6C,UAAW5C,EAAAA,GACX6C,iBAAe,EACfC,iBAAkB,gBAM7B,EAjDGf,CAAagB,EAAAA,WAmDnB","sources":["Pages/Product/Manifest.js","Pages/Product/PageList.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Product'\nconst entity = 'product'\nconst serviceEntity = 'TokoProduct'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\n\nexport const createNewButtonLabel = 'Buat Baru'\nexport const createPageTitle = 'Buat Baru'\nexport const listallPageTitle = entityName + 's'\nexport const detailPageTitle = entityName + ' Detail'\nexport const upsertPageTitle = 'Form ' + entityName\nexport const upsertService = 'upsert' + serviceEntity\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,content1,estimated_delivery_unit_time_instock,estimated_delivery_unit_time_preorder,estimated_delivery_time_instock,estimated_delivery_time_preorder,instock_label,preorder_policy,product_availability,stock_amount,weight,isneed_shipping,name,code,description,price,tag_id{_id, name},toko_id{_id, name},category_id{_id, title},image_id{_id, filename, filenameorigin, file_type},image_ids{_id, filename, filenameorigin, file_type},created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Nama', accessor: 'name' },\n  { Header: 'Kode', accessor: 'code' },\n  { Header: 'Harga', accessor: 'price' },\n  { Header: 'Kategori', accessor: p => (<span>{(_.map(p.category_id, v => v.title) || []).join(', ')}</span>) },\n  { Header: 'Toko', accessor: p => (<span>{(_.map(p.toko_id, v => v.name) || []).join(', ')}</span>) },\n  // { Header: 'Gambar', accessor: p => (<span>{(p.image_id || {}).filename}.{(p.image_id || {}).file_type}</span>) },\n  //   {\n  //     Header: 'created_at',\n  //     accessor: 'created_at',\n  //     Cell: d => {\n  //       let data = Moment(d.cell.value)\n  //       if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //       else data = ''\n  //       return (<span>{`${data}`}</span>)\n  //     }\n  //   },\n  // {\n  //   Header: 'Tanggal Diperbaharui',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' }\n//   { Header: 'updated by', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\n\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  upsertPageTitle,\n  createService,\n  detailService,\n  upsertService,\n  listallService,\n  deleteService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React, { Component } from 'react'\n// import { path } from 'ramda'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { Table } from '../../core/features/TablePagination'\n// import { SearchField } from 'features/searchField'\nimport { listallService, fields, listallPageTitle, upsertPageUrl, createNewButtonLabel, getColumns } from './Manifest'\nimport AppConfig from '../../core/Config/AppConfig'\nclass Comp extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      columns: getColumns(props.history)\n    }\n  }\n\n  render () {\n    const { columns } = this.state\n    return (\n      <ContentWrapper\n        pageTitle={listallPageTitle}\n        breadcrumb={[{ title: 'Beranda', link: AppConfig.appHomePage }, { title: listallPageTitle, link: null, isActive: true }]}\n        contentHeaderTitle={listallPageTitle}\n        isNeedLoggedin\n      >\n        <div className='row'>\n          <div className='col-md-12'>\n            {/* <Filter\n              withoutCardHeader\n              serviceName={listallService}\n              child={(tablepaginationOnChangeFilter, filter = {}) => (\n                <div className='row'>\n                  <div className='col-sm-6'>\n                    <SearchField\n                      width={300}\n                      value={filter.string_to_search || ''}\n                      tablepaginationOnChangeFilter={tablepaginationOnChangeFilter}\n                      listallService={listallService}\n                    />\n                  </div>\n                </div>\n              )}\n            /> */}\n            <Table\n              listallServiceName={listallService}\n              fields={fields}\n              columns={columns}\n              createHref={upsertPageUrl()}\n              createNewButtonLabel={createNewButtonLabel}\n              cardTitle={listallPageTitle}\n              withSearchField\n              widthSearchField={300}\n            />\n          </div>\n        </div>\n      </ContentWrapper>\n    )\n  }\n}\nexport default Comp\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","listallPageUrl","createNewButtonLabel","listallPageTitle","entityName","detailPageTitle","upsertPageTitle","upsertService","detailService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","_","category_id","v","title","join","toko_id","name","detailPageUrl","createPageTitle","createService","Comp","props","state","columns","this","pageTitle","breadcrumb","link","isActive","contentHeaderTitle","isNeedLoggedin","listallServiceName","createHref","cardTitle","withSearchField","widthSearchField","Component"],"sourceRoot":""}