{"version":3,"file":"static/js/1735.59093eb3.chunk.js","mappings":"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","sources":["core/features/selectmerchant/containers/SelectMerchantMenuCon.js","core/features/selectmerchant/components/SelectMerchantMenu.js","core/features/layout/components/ParentMenu.js","core/features/layout/components/Sidebar.js"],"sourcesContent":["import { connect } from 'react-redux'\nimport { injectIntl } from 'react-intl'\nimport SelectMerchantMenu from '../components/SelectMerchantMenu'\nimport MyprofileActions from '../../myprofile/redux'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userMerchants: state.myprofile.user_merchants,\n    merchant: state.myprofile.merchant\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    myprofileChangeMerchant: data => dispatch(MyprofileActions.myprofileChangeMerchant(data))\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(SelectMerchantMenu))\n","import React from 'react'\nimport ListItemButton from '@mui/material/ListItemButton'\nimport ListItemText from '@mui/material/ListItemText'\nimport List from '@mui/material/List'\nimport MenuItem from '@mui/material/MenuItem'\nimport Menu from '@mui/material/Menu'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport StorefrontIcon from '@mui/icons-material/Storefront'\nimport _ from 'lodash'\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     backgroundColor: theme.palette.background.paper,\n//     width: '100%'\n//   }\n// }))\n\n// const options = [\n//   'Plink Market',\n//   'Syahoni',\n//   'Tokopedia',\n//   'Elevenia'\n// ]\nexport default function SimpleListMenu (props) {\n  const { userMerchants, merchant, myprofileChangeMerchant } = props\n  // const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [selectedIndex, setSelectedIndex] = React.useState(_.findIndex(userMerchants, { id: merchant.id }))\n\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index)\n    setAnchorEl(null)\n    myprofileChangeMerchant({ merchant: userMerchants[index] })\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div>\n      <List component='nav' aria-label='Device settings'>\n        <ListItemButton\n          aria-haspopup='true'\n          aria-controls='lock-menu'\n          aria-label='when device is locked'\n          onClick={handleClickListItem}\n        >\n          <ListItemIcon>\n            <StorefrontIcon color='menuDrawerIcon' />\n          </ListItemIcon>\n          <ListItemText primary={(userMerchants||[]).length > 0 ? 'Merchant:' : 'Merchant: -' } secondary={(userMerchants[selectedIndex] || {}).merchant_name} />\n        </ListItemButton>\n      </List>\n      {(userMerchants||[]).length>0 &&\n        <Menu\n          id='lock-menu'\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {(userMerchants||[]).map((option, index) => (\n            <MenuItem\n              key={option.id}\n              // disabled={index === 0}\n              selected={index === selectedIndex}\n              onClick={(event) => handleMenuItemClick(event, index)}\n            >\n              {option.merchant_name}\n            </MenuItem>\n          ))}\n        </Menu>\n      }\n    </div>\n  )\n}\n","import * as React from 'react'\nimport SendIcon from '@mui/icons-material/Send'\nimport ExpandLess from '@mui/icons-material/ExpandLess'\nimport ExpandMore from '@mui/icons-material/ExpandMore'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport Collapse from '@mui/material/Collapse'\nimport List from '@mui/material/List'\nimport { useHistory } from 'react-router-dom'\nimport { getPage } from '../../../Utils/Pages'\nimport AppConfig from '../../../Config/AppConfig'\nimport { injectIntl, FormattedMessage as T } from 'react-intl'\nimport Tooltip from '@mui/material/Tooltip'\nimport CircleIcon from '@mui/icons-material/Circle'\n\nconst basePath = AppConfig.basePath\n\nfunction ParentMenu ({\n  title,\n  submenu,\n  homePageUrl,\n  setHomePageUrl,\n  userMerchantCode,\n  userPrivileges,\n  routeActive,\n  appPatch,\n  icon,\n  toggleDrawerFlag\n}) {\n  var history = useHistory()\n  const [open, setOpen] = React.useState(false)\n  const handleClick = () => {\n    setOpen(!open)\n  }\n  return (\n    <>\n      <Tooltip title={title} disableHoverListener={toggleDrawerFlag} disableFocusListener={toggleDrawerFlag} disableTouchListener={toggleDrawerFlag}>\n        <ListItem button onClick={handleClick}>\n          <ListItemIcon>\n            {icon && icon}\n            {!icon && <SendIcon color='menuDrawerIcon' />}\n          </ListItemIcon>\n          <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n      </Tooltip>\n      <Collapse in={open} timeout='auto' unmountOnExit>\n        <List component='div' disablePadding>\n          {submenu.map((v2, i) => {\n            const page = getPage(v2.route) || {}\n            const path = (page.path || '').replace(':merchantId', userMerchantCode || '*')\n            const baseRoute = `${basePath}${path}`\n            if (!userPrivileges.includes(page.privName || path)) return null\n            if (!homePageUrl) setHomePageUrl({ homePageUrl: path })\n            return (\n              <Tooltip key={i} title={page.title || v2.title} disableHoverListener={toggleDrawerFlag} disableFocusListener={toggleDrawerFlag} disableTouchListener={toggleDrawerFlag}>\n                <ListItem\n                  button\n                  key={i}\n                  sx={{ pl: 4 }}\n                  selected={(routeActive || '').startsWith(baseRoute)}\n                  onClick={() => {\n                    appPatch({ routeActive: baseRoute, pageTitle: title })\n                    history.push(baseRoute)\n                  }}\n                >\n                  <ListItemIcon>\n                    <CircleIcon fontSize='small' color='menuDrawerIcon' />\n                  </ListItemIcon>\n                  <ListItemText primary={<T id={page.title || v2.title} />} />\n                </ListItem>\n              </Tooltip>\n            )\n          })}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n\nexport default injectIntl(ParentMenu)\n","import * as React from 'react'\nimport Box from '@mui/material/Box'\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer'\nimport Button from '@mui/material/Button'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport List from '@mui/material/List'\nimport Divider from '@mui/material/Divider'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport MuiDrawer from '@mui/material/Drawer'\nimport { styled, useTheme } from '@mui/material/styles'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport { isMobile } from 'react-device-detect'\nimport SendIcon from '@mui/icons-material/Send'\nimport { injectIntl, FormattedMessage as T } from 'react-intl'\nimport { useHistory } from 'react-router-dom'\nimport ContactPageIcon from '@mui/icons-material/ContactPage'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\n\nimport { SelectMerchantMenuCon } from '../../selectmerchant/'\nimport { getPage } from '../../../Utils/Pages'\nimport AppConfig from '../../../Config/AppConfig'\nimport { getEnvMode, setEnvMode } from 'core/Utils/Utils'\nimport images from 'core/Themes/Images'\nimport ParentMenu from './ParentMenu'\nimport Tooltip from '@mui/material/Tooltip'\n\nconst basePath = AppConfig.basePath\n\nconst drawerWidth = 240\n\nconst openedMixin = (theme) => ({\n  width: drawerWidth,\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  overflowX: 'hidden'\n})\n\nconst closedMixin = (theme) => ({\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  }),\n  overflowX: 'hidden',\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up('sm')]: {\n    width: `calc(${theme.spacing(9)} + 1px)`\n  }\n})\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    ...(open && {\n      ...openedMixin(theme),\n      '& .MuiDrawer-paper': openedMixin(theme)\n    }),\n    ...(!open && {\n      ...closedMixin(theme),\n      '& .MuiDrawer-paper': closedMixin(theme)\n    })\n  })\n)\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar\n}))\n\nfunction SwipeableTemporaryDrawer ({ isMerchantExists,toggleDrawerFlag, setToggleDrawer, sidemenu, userPrivileges, setHomePageUrl, homePageUrl, routeActive, appPatch, userMerchantCode, currentMerchant }) {\n  var history = useHistory()\n  const handleDrawerClose = () => {\n    setToggleDrawer({ toggleDrawer: !toggleDrawerFlag })\n  }\n  const toggleDrawer = (open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return\n    }\n    setToggleDrawer({ toggleDrawer: open })\n  }\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [mode, setMode] = React.useState(getEnvMode())\n  const open = Boolean(anchorEl)\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const handleClose = (e, value) => {\n    setAnchorEl(null)\n    if (value) {\n      setMode(value)\n      setEnvMode(value)\n      // redirect\n      if (value === 'production') window.location.href = AppConfig.reactAppBaseUrlProduction\n      else window.location.href = AppConfig.reactAppBaseUrlStaging\n    }\n  }\n\n  const getMenuLiSingle = ({ route, title, liClass, icon, toggleDrawerFlag }) => {\n    const page = getPage(route) || {}\n    const path = (page.path || '')\n    const baseRoute = `${basePath}${path}`\n    if (!userPrivileges.includes(page.privName || path)) return null\n    if (!homePageUrl) setHomePageUrl({ homePageUrl: path })\n    console.log('test')\n    return (\n      <Tooltip title={title} disableHoverListener={toggleDrawerFlag} disableFocusListener={toggleDrawerFlag} disableTouchListener={toggleDrawerFlag}>\n        <ListItem\n          button\n          key={route}\n          onClick={() => {\n            appPatch({ routeActive: baseRoute, pageTitle: title })\n            history.push(baseRoute)\n          }}\n          selected={(routeActive || '').startsWith(baseRoute)}\n\n        >\n          <ListItemIcon>\n            {icon || <SendIcon />}\n          </ListItemIcon>\n          <ListItemText primary={<T id={page.title || title} />} />\n        </ListItem>\n      </Tooltip>\n    )\n  }\n\n  const theme = useTheme()\n  const sideMenuArray = sidemenu.map((v, i) => {\n    if (!v.submenu && v.route) {\n      return getMenuLiSingle({ route: v.route, title: v.title, liClass: v.iconClassName || 'nav-icon fas fa-tachometer-alt', icon: v.icon, toggleDrawerFlag })\n    }\n    if (!userPrivileges.includes(v.userPrivilegeCode)) return null\n    return (\n      <ParentMenu\n        toggleDrawerFlag={toggleDrawerFlag}\n        key={i}\n        title={v.title}\n        submenu={v.submenu}\n        homePageUrl={homePageUrl}\n        setHomePageUrl={setHomePageUrl}\n        userMerchantCode={userMerchantCode}\n        userPrivileges={userPrivileges}\n        routeActive={routeActive}\n        appPatch={appPatch}\n        icon={v.icon}\n      />\n    )\n  })\n\n  React.useEffect(()=>{\n    setToggleDrawer({ toggleDrawer: false })\n  },[])\n  return (\n    <>\n      {isMobile && (\n        <SwipeableDrawer\n          id='plink-drawer'\n          anchor='left'\n          open={toggleDrawerFlag}\n          onClose={toggleDrawer(false)}\n          onOpen={toggleDrawer(true)}\n        >\n          <DrawerHeader>\n            <img style={{ height: 30 }} src={images.LogoRp} />\n            <Button\n              style={{ width: 120, fontSize: '13px', color: 'white' }}\n              id='basic-button'\n              aria-controls={open ? 'basic-menu' : undefined}\n              aria-haspopup='true'\n              aria-expanded={open ? 'true' : undefined}\n              onClick={handleClick}\n              size='small'\n              endIcon={<KeyboardArrowDownIcon />}\n            >\n              {mode}\n            </Button>\n            <Menu\n              id='basic-menu'\n              anchorEl={anchorEl}\n              open={open}\n              onClose={(event) => handleClose(event, null)}\n              MenuListProps={{\n                'aria-labelledby': 'basic-button'\n              }}\n            >\n              <MenuItem onClick={(event) => handleClose(event, 'staging')}>Staging</MenuItem>\n              <MenuItem onClick={(event) => handleClose(event, 'production')}>Production</MenuItem>\n            </Menu>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'rtl' ? <ChevronRightIcon color='menuDrawerIcon' /> : <ChevronLeftIcon color='menuDrawerIcon' />}\n            </IconButton>\n          </DrawerHeader>\n          <Divider color='menuDrawerIcon' />\n          {userPrivileges.includes('6') &&\n            <SelectMerchantMenuCon />}\n          <Divider color='menuDrawerIcon' />\n          <Box\n            role='presentation'\n            // onClick={toggleDrawer(false)}\n            onKeyDown={toggleDrawer(false)}\n          >\n            <List>\n              {sideMenuArray}\n              {\n                userPrivileges.includes('main-menu-user-management') &&\n                  <ParentMenu\n                    icon={(<ContactPageIcon color='menuDrawerIcon' />)}\n                    title='User Management'\n                    submenu={[{ route: '/user', title: 'User' }, { route: '/role', title: 'Role' }, { route: '/privilege', title: 'Privilege' }]}\n                    homePageUrl={homePageUrl}\n                    setHomePageUrl={setHomePageUrl}\n                    userMerchantCode={userMerchantCode}\n                    userPrivileges={userPrivileges}\n                    routeActive={routeActive}\n                    appPatch={appPatch}\n                  />\n              }\n            </List>\n          </Box>\n        </SwipeableDrawer>\n      )}\n      {!isMobile && (\n        <Drawer id='plink-drawer' anchor='left' variant='permanent' open={toggleDrawerFlag} onClose={toggleDrawer(false)}>\n          <DrawerHeader>\n            <img style={{ height: 30 }} src={images.LogoRp} />\n            <Button\n              style={{ width: 120, fontSize: '13px', color: 'white' }}\n              id='basic-button'\n              aria-controls={open ? 'basic-menu' : undefined}\n              aria-haspopup='true'\n              aria-expanded={open ? 'true' : undefined}\n              onClick={userPrivileges.includes('admin') ? null : handleClick}\n              size='small'\n              endIcon={!userPrivileges.includes('admin') ? (<KeyboardArrowDownIcon />) : null}\n            >\n              {userPrivileges.includes('admin') ? 'Admin' : mode}\n            </Button>\n            <Menu\n              id='basic-menu'\n              anchorEl={anchorEl}\n              open={open}\n              onClose={(event) => handleClose(event, null)}\n              MenuListProps={{\n                'aria-labelledby': 'basic-button'\n              }}\n            >\n              <MenuItem onClick={(event) => handleClose(event, 'staging')}>Staging</MenuItem>\n              <MenuItem onClick={(event) => handleClose(event, 'production')}>Production</MenuItem>\n            </Menu>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'rtl' ? <ChevronRightIcon color='menuDrawerIcon' /> : <ChevronLeftIcon color='menuDrawerIcon' />}\n            </IconButton>\n          </DrawerHeader>\n          <Divider color='menuDrawerIcon' />\n          {userPrivileges.includes('6') &&\n            <SelectMerchantMenuCon />}\n          <Divider color='menuDrawerIcon' />\n          {/* {currentMerchant.plan === 'TRIAL' && (\n            <>\n              <List>\n                <ListItemButton\n                  selected={(routeActive || '').startsWith('/get-started')}\n                  onClick={() => {\n                    appPatch({ routeActive: '/get-started', pageTitle: 'Get Started' })\n                    history.push('/get-started')\n                  }}\n                >\n                  <ListItemIcon>\n                    <SportsScoreIcon />\n                  </ListItemIcon>\n                  <ListItemText primary='Get Started' />\n                </ListItemButton>\n              </List>\n              <Divider />\n            </>)} */}\n          <Box>\n            <List>\n              {sideMenuArray}\n              {\n                userPrivileges.includes('main-menu-user-management') &&\n                  <ParentMenu\n                    icon={(<ContactPageIcon color='menuDrawerIcon' />)}\n                    title='User Management'\n                    submenu={[{ route: '/user', title: 'User' }, { route: '/role', title: 'Role' }, { route: '/privilege', title: 'Privilege' }]}\n                    homePageUrl={homePageUrl}\n                    setHomePageUrl={setHomePageUrl}\n                    userMerchantCode={userMerchantCode}\n                    userPrivileges={userPrivileges}\n                    routeActive={routeActive}\n                    appPatch={appPatch}\n                  />\n              }\n            </List>\n          </Box>\n        </Drawer>\n      )}\n    </>\n  )\n}\nexport default injectIntl(SwipeableTemporaryDrawer)\n"],"names":["connect","state","ownProps","userMerchants","myprofile","user_merchants","merchant","dispatch","myprofileChangeMerchant","data","MyprofileActions","injectIntl","props","React","anchorEl","setAnchorEl","_","id","selectedIndex","setSelectedIndex","List","component","ListItemButton","onClick","event","currentTarget","ListItemIcon","Storefront","color","ListItemText","primary","length","secondary","merchant_name","Menu","keepMounted","open","Boolean","onClose","map","option","index","MenuItem","selected","handleMenuItemClick","basePath","AppConfig","title","submenu","homePageUrl","setHomePageUrl","userMerchantCode","userPrivileges","routeActive","appPatch","icon","toggleDrawerFlag","history","useHistory","setOpen","Tooltip","disableHoverListener","disableFocusListener","disableTouchListener","ListItem","button","Send","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","v2","i","page","getPage","route","path","replace","baseRoute","includes","privName","sx","pl","startsWith","pageTitle","push","Circle","fontSize","openedMixin","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","Drawer","styled","MuiDrawer","shouldForwardProp","prop","flexShrink","whiteSpace","boxSizing","DrawerHeader","display","alignItems","justifyContent","padding","mixins","toolbar","isMerchantExists","setToggleDrawer","sidemenu","currentMerchant","handleDrawerClose","toggleDrawer","type","key","getEnvMode","mode","setMode","handleClick","handleClose","e","value","setEnvMode","window","location","href","useTheme","sideMenuArray","v","liClass","console","log","getMenuLiSingle","iconClassName","userPrivilegeCode","isMobile","SwipeableDrawer","anchor","onOpen","style","height","src","images","Button","undefined","size","endIcon","KeyboardArrowDown","MenuListProps","IconButton","direction","ChevronRight","ChevronLeft","Divider","SelectMerchantMenuCon","Box","role","onKeyDown","ContactPage","variant"],"sourceRoot":""}