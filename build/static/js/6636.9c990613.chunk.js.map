{"version":3,"file":"static/js/6636.9c990613.chunk.js","mappings":"uTAkCA,IAWA,GAAeA,EAAAA,EAAAA,KAXS,SAACC,EAAOC,GAC9B,MAAO,CACLC,QAASF,EAAMG,UAAUD,QACzBE,SAAUJ,EAAMG,UAAUC,aAGH,SAAAC,GACzB,MAAO,CACLC,yBAA0B,SAAAC,GAAI,OAAIF,EAASG,EAAAA,GAAAA,yBAA0CD,QAGzF,EAvCA,YAOI,IANFE,EAMC,EANDA,OACAC,EAKC,EALDA,YACAN,EAIC,EAJDA,SAEAE,GAEC,EAHDJ,QAGC,EAFDI,0BACAK,EACC,EADDA,iBAGIC,GAAiBC,EAAAA,EAAAA,GAAK,CAACJ,EAAQC,GAAcN,GAI3CU,EAAkBC,IAAAA,KAAOJ,EAAkB,CAAEK,IAAKN,IAYxD,MAT8B,qBAAnBE,IACJG,IAAAA,QAAUD,GAKbF,GAAiB,EAFjBN,EAAyB,CAAEW,QAASR,EAAQS,aAAcR,EAAaS,SAAS,MAK5E,kBAAyBC,KAAK,WAAWC,UAAU,mBAAmBC,SAAU,SAACC,GAAQjB,EAAyB,CAAEW,QAASR,EAAQS,aAAcR,EAAaS,QAASI,EAAEC,OAAOL,WAAcA,QAASP,GAA7LF,M,0CCbhBe,EAAWC,EAAAA,EAAAA,SAYXC,EAAa,SAAC,GAAD,EAAGC,QAAH,IAAYC,EAAZ,EAAYA,WAAZ,EAAwB1B,UAAxB,EAAmC2B,aAAnC,MAAsD,CACvE,CACEC,OAAQ,MACRC,SAAU,SAAAC,GAAC,OACT,iBAAKZ,UAAU,YAAf,WACE,mBAAQD,KAAK,SAASC,UAAU,gDAAgD,cAAY,WAA5F,UACE,iBAAMA,UAAU,UAAhB,gCAEF,gBAAKA,UAAU,gBAAgBa,KAAK,OAApC,UACE,SAAC,KAAD,CAAMb,UAAU,gBAAgBc,GAAE,UAAKV,EAAL,6BAAkCQ,EAAEjB,KAAtE,2BAKR,CAAEe,OAAQ,SAAUC,SAAU,UAC9B,CAAED,OAAQ,cAAeC,SAAU,eACnC,CAAED,OAAQ,QAASC,SAAU,SAE7B,CAAED,OAAQ,aAAcC,SAAU,wBAClC,CACED,OAAQ,MACRC,SAAU,SAAAC,GASR,IAAMG,GAAIvB,EAAAA,EAAAA,GAAK,CAAC,OAAQoB,GAClBI,GAAQxB,EAAAA,EAAAA,GAAK,CAAC,QAASoB,GAC7B,OACE,iBAAKZ,UAAU,aAAf,WACE,SAAC,EAAD,CAAmBZ,OAAQoB,EAAWb,IAAKN,YAAa0B,EAAGzB,iBAAkBkB,EAAWX,gBAExF,kBAAOG,UAAU,mBAAmBiB,QAAQ,gBAA5C,SAA6DD,WAMjEE,EAAgB,SAACC,GACrB,IACEX,EAGEW,EAHFX,WACAD,EAEEY,EAFFZ,QACAzB,EACEqC,EADFrC,UAAW2B,EACTU,EADSV,aAAcW,EACvBD,EADuBC,wBAAyBC,EAChDF,EADgDE,kBAEhDC,EAAYC,GAAAA,CAAOf,EAAWgB,YAAc,GACVF,EAAlCA,GAAaA,EAAUG,UAAuBH,EAAUI,OAAOrB,EAAAA,EAAAA,gBAClD,GACjB,IAAIsB,EAAYJ,GAAAA,CAAOf,EAAWoB,YAAc,GAGhD,OAFsCD,EAAlCA,GAAaA,EAAUF,UAAuBE,EAAUD,OAAOrB,EAAAA,EAAAA,gBAClD,IAEf,iCACE,2BACE,mCACA,wBAAKG,EAAWqB,SAChB,yCACA,wBAAKrB,EAAWsB,eAChB,wCACA,yBAAMpC,IAAAA,IAAMc,EAAWX,cAAgB,IAAI,SAACkB,EAAGgB,GAAJ,OAAUhB,EAAEc,UAAU,IAAIG,KAAK,SAC1E,+CACA,yBAAMxB,EAAWyB,YAAc,IAAIC,WAAa,MAChD,yCACA,yBAAM1B,EAAW2B,YAAc,IAAID,WAAa,MAChD,+CACA,wBAAKZ,KACL,kDACA,wBAAKK,QAEP,SAAC,KAAD,CACES,mBAAmB,mBACnBC,OAAO,2FACPC,QAAShC,EAAW,CAAEC,QAAAA,EAASC,WAAAA,EAAY1B,UAAAA,EAAW2B,aAAAA,IAGtD8B,UAAU,oBACVC,WAAY,WACV,OACE,iCACE,oBAAQzC,KAAK,SAASC,UAAU,eAAeyC,QAAS,kBAAMlC,EAAQmC,KAAR,oCAA0ClC,EAAWb,OAAnH,WAA2H,cAAGK,UAAU,gBAAxI,4BACA,oBAAQD,KAAK,SAAS4C,MAAO,CAAEC,WAAY,GAAK5C,UAAU,kBAAkByC,QAAS,kBAAMrB,EAAwB,CAAEyB,gBAAiBxB,EAAkBb,EAAWb,MAAQ,GAAIP,OAAQoB,EAAWb,OAAlM,WAA0M,cAAGK,UAAU,gBAAvN,4BAIN8C,WAAY,QAsDpB,IAaA,GAAepE,EAAAA,EAAAA,KAbS,SAACC,EAAOC,GAC9B,MAAO,CAELmE,eAAgBpE,EAAMqE,UACtB3B,kBAAmB1C,EAAMG,UAAUC,aAIZ,SAAAC,GACzB,MAAO,CACLoC,wBAAyB,SAAAlC,GAAI,OAAIF,EAASG,EAAAA,GAAAA,wBAAyCD,QAGvF,EAGE+D,EAAAA,EAAAA,KAhEF,SAAqB9B,GACnB,IAAQZ,EAA+DY,EAA/DZ,QAAS2C,EAAsD/B,EAAtD+B,MAAO7B,EAA+CF,EAA/CE,kBAAmBD,EAA4BD,EAA5BC,wBAE3C,GAAkC+B,EAAAA,EAAAA,UAAS,IAA3C,eAAOrE,EAAP,KAAkB2B,EAAlB,KAEA,OACE,iCACE,SAAC2C,EAAA,EAAD,KACA,UAACC,EAAA,EAAD,YACE,4CACA,iBAAMrD,UAAU,0FAElB,iBAAKA,UAAU,kBAAf,WACE,SAACsD,EAAA,EAAD,CACEzB,MAAM,cACN0B,WAAY,CAAC,CAAE1B,MAAO,UAAW2B,KAAMnD,EAAAA,EAAAA,aAAyB,CAAEwB,MAAO,OAAQ2B,KAAM,SAAW,CAAE3B,MAAO,cAAe2B,KAAM,KAAMC,UAAU,OAElJ,oBAASzD,UAAU,UAAnB,UACE,gBAAKA,UAAU,kBAAf,UACE,gBAAKA,UAAU,MAAf,UACE,gBAAKA,UAAU,YAAf,UACE,SAAC,IAAD,CACE0D,kBAAkB,gBAClBC,kBAAkB,aAClBtB,OAAO,yHACPuB,GAAIV,EAAMW,OAAOlE,IACjBmE,UAAU,cACVC,oBAAoB,QACpBC,cAAa,uBAAkBd,EAAMW,OAAOlE,KAC5CsE,cAAc,eARhB,UAUE,SAAC/C,EAAD,CACEG,kBAAmBA,EACnBZ,aAAcA,EACd3B,UAAWA,EACXyB,QAASA,EACTa,wBAAyBA","sources":["core/Pages/Role/PrivilegeCheckBox.js","core/Pages/Role/DetailRole.js"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport { path } from 'ramda'\nimport PrivilegeActions from '../../features/Privilege/redux'\n\nfunction PrivilegeCheckBox ({\n  roleId,\n  privilegeId,\n  checkbox,\n  loading,\n  privilegeCheckboxOnClick,\n  rolePrivilegeIds\n}) {\n  // local checked\n  let localIsChecked = path([roleId, privilegeId], checkbox)\n  // console.log('localIsChecked===>', localIsChecked)\n\n  // server checked\n  const serverIsChecked = _.find(rolePrivilegeIds, { _id: privilegeId })\n  // console.log('serverIsChecked====>', serverIsChecked)\n\n  if (typeof localIsChecked === 'undefined') {\n    if (!_.isEmpty(serverIsChecked)) {\n      // priv[p.cell.value] = true\n      // console.log(`set ${p.cell.value} menjadi true`)\n      privilegeCheckboxOnClick({ role_id: roleId, privilege_id: privilegeId, checked: true })\n    } else {\n      localIsChecked = false\n    }\n  }\n  return (<input key={privilegeId} type='checkbox' className='form-check-input' onChange={(e) => { privilegeCheckboxOnClick({ role_id: roleId, privilege_id: privilegeId, checked: e.target.checked }) }} checked={localIsChecked} />)\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    loading: state.privilege.loading,\n    checkbox: state.privilege.checkbox\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    privilegeCheckboxOnClick: data => dispatch(PrivilegeActions.privilegeCheckboxOnClick(data))\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PrivilegeCheckBox)\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { injectIntl } from 'react-intl'\nimport _ from 'lodash'\nimport { Detail, Table } from '../../features/TablePagination'\nimport LoginCheck from '../../Containers/Login/LoginCheck'\nimport ContentHeader from '../../Components/ContentHeader'\nimport PrivilegeCheckBox from './PrivilegeCheckBox'\nimport Helmet from 'react-helmet'\nimport PrivilegeActions from '../../features/Privilege/redux'\nimport { path } from 'ramda'\nimport Moment from 'moment'\nimport AppConfig from '../../Config/AppConfig'\n// import ManifestPrivilege from '../Privilege/Manifest'\n// import EnrollmentList from './components/EnrollmentList'\n// import InstructorList from './components/InstructorList'\n// import ModalEnroll from './components/ModalEnroll'\nconst basePath = AppConfig.basePath\n\n// const columns = [\n//   { Header: 'code', accessor: 'code' },\n//   { Header: 'content1', accessor: 'content1' },\n//   { Header: 'content2', accessor: 'content2' },\n//   { Header: 'created by', accessor: 'created_by' },\n//   { Header: 'created at', accessor: 'created_at' },\n//   { Header: 'updated at', accessor: 'updated_at' }\n// ]\n// const priv = {}\n\nconst getColumns = ({ history, dataDetail, privilege, setPrivilege }) => [\n  {\n    Header: 'Act',\n    accessor: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}/privilege/detail/${p._id}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  // { Header: 'code', accessor: 'code' },\n  { Header: 'entity', accessor: 'entity' },\n  { Header: 'description', accessor: 'description' },\n  { Header: 'title', accessor: 'title' },\n  // { Header: 'name', accessor: 'name' },\n  { Header: 'created by', accessor: 'created_by.full_name' },\n  {\n    Header: 'Set',\n    accessor: p => {\n      // const thePriv = _.find(dataDetail.privilege_id, { name: p.cell.value })\n      // console.log('thePriv====>', thePriv)\n      // if (!_.isEmpty(thePriv)) {\n      //   priv[p.cell.value] = true\n      //   console.log(`set ${p.cell.value} menjadi true`)\n      // }\n      // setPrivilege({ ...privilege, [p.cell.value]: true })\n      // console.log(`privvvv====>${p.cell.value}===>${priv[p.cell.value]}`)\n      const v = path(['_id'], p)\n      const label = path(['name'], p)\n      return (\n        <div className='form-check'>\n          <PrivilegeCheckBox roleId={dataDetail._id} privilegeId={v} rolePrivilegeIds={dataDetail.privilege_id} />\n          {/* <input type='checkbox' className='form-check-input' id='exampleCheck1' onChange={(e) => {}} checked={priv[p.cell.value] ? true : false } onClick={(e) => { priv[p.cell.value] = e.target.checked }} /> */}\n          <label className='form-check-label' htmlFor='exampleCheck1'>{label}</label>\n        </div>)\n    }\n  }\n]\n\nconst DetailContent = (props) => {\n  const {\n    dataDetail,\n    history,\n    privilege, setPrivilege, privilegeCheckboxSubmit, privilegeCheckbox\n  } = props\n  let createdAt = Moment(dataDetail.created_at || 0)\n  if (createdAt && createdAt.isValid()) createdAt = createdAt.format(AppConfig.datetimeFormat)\n  else createdAt = ''\n  let updatedAt = Moment(dataDetail.updated_at || 0)\n  if (updatedAt && updatedAt.isValid()) updatedAt = updatedAt.format(AppConfig.datetimeFormat)\n  else updatedAt = ''\n  return (\n    <>\n      <dl>\n        <dt>Judul</dt>\n        <dd>{dataDetail.title}</dd>\n        <dt>Description</dt>\n        <dd>{dataDetail.description}</dd>\n        <dt>Privileges</dt>\n        <dd>{(_.map(dataDetail.privilege_id || [], (v, k) => v.title) || []).join(', ')}</dd>\n        <dt>Diperbaharui Oleh</dt>\n        <dd>{(dataDetail.updated_by || {}).full_name || ''}</dd>\n        <dt>Dibuat Oleh</dt>\n        <dd>{(dataDetail.created_by || {}).full_name || ''}</dd>\n        <dt>Tanggal Pembuatan</dt>\n        <dd>{createdAt}</dd>\n        <dt>Tanggal Diperbaharui</dt>\n        <dd>{updatedAt}</dd>\n      </dl>\n      <Table\n        listallServiceName='getAllPrivileges'\n        fields='_id,title,entity,description,name,updated_at,created_by{full_name},updated_by{full_name}'\n        columns={getColumns({ history, dataDetail, privilege, setPrivilege })}\n        // createHref={upsertPageUrl()}\n        // createNewButtonLabel={createNewButtonLabel}\n        cardTitle='Daftar Privileges'\n        cardHeader={() => {\n          return (\n            <>\n              <button type='button' className='btn btn-info' onClick={() => history.push(`/privilege/upsert?role_id=${dataDetail._id}`)}><i className='fas fa-plus' /> Create New Privilege</button>\n              <button type='button' style={{ marginLeft: 5 }} className='btn btn-warning' onClick={() => privilegeCheckboxSubmit({ privilegeIdsObj: privilegeCheckbox[dataDetail._id] || {}, roleId: dataDetail._id })}><i className='fas fa-plus' /> Submit Privilege </button>\n            </>\n          )\n        }}\n        apiVersion={2}\n      />\n    </>\n  )\n}\n\nfunction DetailRole (props) {\n  const { history, match, privilegeCheckbox, privilegeCheckboxSubmit } = props\n  // console.log('dataDetail=====>', dataDetail)\n  const [privilege, setPrivilege] = useState({})\n  // const columns = getColumns({ history, dataDetail, privilege, setPrivilege })\n  return (\n    <>\n      <LoginCheck />\n      <Helmet>\n        <title>Detail Role</title>\n        <body className='hold-transition sidebar-mini layout-fixed layout-navbar-fixed layout-footer-fixed' />\n      </Helmet>\n      <div className='content-wrapper'>\n        <ContentHeader\n          title='Detail Role'\n          breadcrumb={[{ title: 'Beranda', link: AppConfig.appHomePage }, { title: 'Role', link: '/role' }, { title: 'Role Detail', link: null, isActive: true }]}\n        />\n        <section className='content'>\n          <div className='container-fluid'>\n            <div className='row'>\n              <div className='col-md-12'>\n                <Detail\n                  detailServiceName='getDetailRole'\n                  deleteServiceName='deleteRole'\n                  fields='_id,title,description,privilege_id{_id, title, name},created_at,updated_at,created_by{full_name},updated_by{full_name}'\n                  id={match.params._id}\n                  formTitle='Detail Role'\n                  redirectAfterDelete='/role'\n                  updatePageUrl={`/role/upsert/${match.params._id}`}\n                  createPageUrl='/role/upsert'\n                >\n                  <DetailContent\n                    privilegeCheckbox={privilegeCheckbox}\n                    setPrivilege={setPrivilege}\n                    privilege={privilege}\n                    history={history}\n                    privilegeCheckboxSubmit={privilegeCheckboxSubmit}\n                  />\n                </Detail>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n\n    </>\n  )\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    // loading: state.courseenrollment.loading,\n    userPrivileges: state.myprofile,\n    privilegeCheckbox: state.privilege.checkbox\n    // dataDetail: state.tablepagination.dataDetail[paginationConfig.serviceName] || []\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    privilegeCheckboxSubmit: data => dispatch(PrivilegeActions.privilegeCheckboxSubmit(data))\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(DetailRole))\n"],"names":["connect","state","ownProps","loading","privilege","checkbox","dispatch","privilegeCheckboxOnClick","data","PrivilegeActions","roleId","privilegeId","rolePrivilegeIds","localIsChecked","path","serverIsChecked","_","_id","role_id","privilege_id","checked","type","className","onChange","e","target","basePath","AppConfig","getColumns","history","dataDetail","setPrivilege","Header","accessor","p","role","to","v","label","htmlFor","DetailContent","props","privilegeCheckboxSubmit","privilegeCheckbox","createdAt","Moment","created_at","isValid","format","updatedAt","updated_at","title","description","k","join","updated_by","full_name","created_by","listallServiceName","fields","columns","cardTitle","cardHeader","onClick","push","style","marginLeft","privilegeIdsObj","apiVersion","userPrivileges","myprofile","injectIntl","match","useState","LoginCheck","Helmet","ContentHeader","breadcrumb","link","isActive","detailServiceName","deleteServiceName","id","params","formTitle","redirectAfterDelete","updatePageUrl","createPageUrl"],"sourceRoot":""}