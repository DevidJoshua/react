{"version":3,"file":"static/js/606.cae08152.chunk.js","mappings":"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","sources":["Pages/Merchant/FilterForm.js","Pages/Merchant/Manifest.js","Pages/MerchantNeedApproval/MerchantNeedApprovalPageList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { injectIntl } from 'react-intl'\n// import { Multiselect } from '../../core/features/TablePagination'\n// import MerchantManifest from '../Merchant/Manifest'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\n\nfunction Comp ({\n  tablepaginationOnChangeFilter,\n  listallService,\n  userPrivileges\n}) {\n  const [merchantName, setMerchantName] = useState('')\n  const [merchantCode, setMerchantCode] = useState('')\n  // const [value, setValue] = React.useState(new Date('2014-08-18T21:11:54'))\n  // useEffect(() => {\n  //   document.title = `You clicked ${count} times`;\n  // });\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <Box\n        component='form'\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '25ch' }\n        }}\n        noValidate\n        autoComplete='off'\n      >\n        <div>\n          <TextField\n            size='small'\n            id='merchant_code'\n            label='Merchant Code'\n            defaultValue=''\n            onBlur={(e) => {\n              if (e.target.value !== merchantCode) {\n                setMerchantCode(e.target.value)\n                tablepaginationOnChangeFilter({\n                  serviceName: listallService,\n                  fieldName: 'merchant_code',\n                  fieldValue: e.target.value\n                })\n              }\n            }}\n            onKeyDown={(e) => {\n              var code = (e.keyCode ? e.keyCode : e.which)\n              if (code === 13) { // Enter keycode\n                setMerchantCode(e.target.value)\n                tablepaginationOnChangeFilter({\n                  serviceName: listallService,\n                  fieldName: 'merchant_code',\n                  fieldValue: e.target.value\n                })\n              }\n            }}\n          />\n          <TextField\n            size='small'\n            id='merchant_name'\n            label='Merchant Name'\n            defaultValue=''\n            onBlur={(e) => {\n              if (e.target.value !== merchantName) {\n                setMerchantName(e.target.value)\n                tablepaginationOnChangeFilter({\n                  serviceName: listallService,\n                  fieldName: 'merchant_name',\n                  fieldValue: e.target.value\n                })\n              }\n            }}\n            onKeyDown={(e) => {\n              var code = (e.keyCode ? e.keyCode : e.which)\n              if (code === 13) { // Enter keycode\n                setMerchantName(e.target.value)\n                tablepaginationOnChangeFilter({\n                  serviceName: listallService,\n                  fieldName: 'merchant_name',\n                  fieldValue: e.target.value\n                })\n              }\n            }}\n          />\n        </div>\n      </Box>\n    </LocalizationProvider>\n  )\n}\nexport default injectIntl(Comp)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport AppConfig from '../../core/Config/AppConfig'\nimport {sanitizeValue,toIdr} from '../../core/Utils/Utils'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Merchant'\nconst entity = 'merchant'\nconst serviceEntity = 'Merchant'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Merchant Baru'\nexport const createPageTitle = 'Buat Merchant'\nexport const listallPageTitle = 'Merchant'\nexport const detailPageTitle = 'Detail Merchant'\nexport const upsertPageTitle = 'Form ' + entityName\n// export const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\n// export const updateService = 'update' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,merchant_name,merchant_code,merchant_debitin_id,' +\n  'merchant_plink_id,merchant_email,merchant_phone_number,frontend_callback_url,backend_callback_url,' +\n  'active_date,is_active,client_token,is_parent,address,merchant_type,merchant_picture,contact_name,contact_phone_number,payment_method_config,' +\n  'created_at,updated_at,created_by{full_name},updated_by{full_name},merchant_key{key_encrypt,key_id},merchant_paymentmethod{payment_method_code,configs}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Merchant Name', accessor: p=>sanitizeValue(p.merchant_name) },\n  { Header: 'Code', accessor: p=>sanitizeValue(p.merchant_code) },\n  { Header: 'Partner Id', accessor: p=>sanitizeValue(p.merchant_plink_id) },\n  { Header: 'Merchant Email', accessor: p=>sanitizeValue(p.merchant_email) },\n  { Header: 'Merchant Phone Number', accessor: p=>sanitizeValue(p.merchant_phone_number) },\n  { Header: 'Contact Name', accessor: p=>sanitizeValue(p.contact_name) },\n  { Header: 'Contact Phone Number', accessor: p=>sanitizeValue(p.contact_phone_number) }\n  // {\n  //   Header: 'Toko',\n  //   accessor: 'toko_id',\n  //   Cell: d => {\n  //     // let data = Moment(d.cell.value)\n  //     // if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     // else data = ''\n  //     const toko = (_.map(d.cell.value || [], (v, k) => v.name) || []).join(', ')\n  //     return (<span>{`${toko}`}</span>)\n  //   }\n  // }\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  // { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Grid from '@mui/material/Grid'\nimport Paper from '@mui/material/Paper'\nimport { Table, Filter } from '../../core/features/TablePagination'\nimport AppConfig from '../../core/Config/AppConfig'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { listallService, fields, listallPageTitle, upsertPageUrl, createNewButtonLabel, getColumns } from 'Pages/Merchant/Manifest'\nimport FilterForm from 'Pages/Merchant/FilterForm'\n\nconst paginationConfig = {\n  serviceName: listallService,\n  fields: fields\n}\nexport default function MerchantNeedApprovalPageList (props) {\n  const columns = getColumns(props.history)\n  return (\n    <ContentWrapper\n      pageTitle='Merchant Need Approval'\n      breadcrumb={[\n        { title: 'Beranda', link: AppConfig.appHomePage },\n        { title: 'Merchant Need Approval', link: null, isActive: true }\n      ]}\n      contentHeaderTitle='Merchant Need Approval'\n      isNeedLoggedin\n    >\n      <Box sx={{ flexGrow: 1 }}>\n        <Grid container spacing={1}>\n          <Grid container item spacing={3}>\n            <Grid item xs={12}>\n              <Paper variant='outlined'>\n                <Filter\n                  withoutCardHeader\n                  serviceName={listallService}\n                  child={(tablepaginationOnChangeFilter, filter = {}) => (\n                    <FilterForm\n                      tablepaginationOnChangeFilter={tablepaginationOnChangeFilter}\n                      listallService={listallService}\n                    />\n                  )}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Grid container item spacing={3}>\n            <Grid item xs={12}>\n              <Paper variant='outlined'>\n                <div style={{ padding: 10 }}>\n                  <Table\n                    withoutWrapper\n                    listallServiceName={paginationConfig.serviceName}\n                    fields={paginationConfig.fields}\n                    columns={columns}\n                    createHref={upsertPageUrl()}\n                    createNewButtonLabel={createNewButtonLabel}\n                    cardTitle={listallPageTitle}\n                    withSearchField\n                    widthSearchField={300}\n                    apiVersion={2}\n                  />\n                </div>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </ContentWrapper>\n  )\n}\n"],"names":["injectIntl","tablepaginationOnChangeFilter","listallService","userPrivileges","useState","merchantName","setMerchantName","merchantCode","setMerchantCode","dateAdapter","AdapterDateFns","component","sx","m","width","noValidate","autoComplete","size","id","label","defaultValue","onBlur","e","target","value","serviceName","fieldName","fieldValue","onKeyDown","keyCode","which","basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","listallPageUrl","createNewButtonLabel","listallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","sanitizeValue","merchant_name","merchant_code","merchant_plink_id","merchant_email","merchant_phone_number","contact_name","contact_phone_number","paginationConfig","MerchantNeedApprovalPageList","props","columns","pageTitle","breadcrumb","title","link","isActive","contentHeaderTitle","isNeedLoggedin","flexGrow","container","spacing","item","xs","variant","withoutCardHeader","child","style","padding","withoutWrapper","listallServiceName","createHref","cardTitle","withSearchField","widthSearchField","apiVersion"],"sourceRoot":""}