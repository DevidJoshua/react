{"version":3,"file":"static/js/1296.2c759283.chunk.js","mappings":"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","sources":["Pages/Merchant/Manifest.js","Pages/Merchant/PageUpdate.js","Pages/TokoOnline/Manifest.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport AppConfig from '../../core/Config/AppConfig'\nimport {sanitizeValue,toIdr} from '../../core/Utils/Utils'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Merchant'\nconst entity = 'merchant'\nconst serviceEntity = 'Merchant'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Merchant Baru'\nexport const createPageTitle = 'Buat Merchant'\nexport const listallPageTitle = 'Merchant'\nexport const detailPageTitle = 'Detail Merchant'\nexport const upsertPageTitle = 'Form ' + entityName\n// export const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\n// export const updateService = 'update' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,merchant_name,merchant_code,merchant_debitin_id,' +\n  'merchant_plink_id,merchant_email,merchant_phone_number,frontend_callback_url,backend_callback_url,' +\n  'active_date,is_active,client_token,is_parent,address,merchant_type,merchant_picture,contact_name,contact_phone_number,payment_method_config,' +\n  'created_at,updated_at,created_by{full_name},updated_by{full_name},merchant_key{key_encrypt,key_id},merchant_paymentmethod{payment_method_code,configs}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Merchant Name', accessor: p=>sanitizeValue(p.merchant_name) },\n  { Header: 'Code', accessor: p=>sanitizeValue(p.merchant_code) },\n  { Header: 'Partner Id', accessor: p=>sanitizeValue(p.merchant_plink_id) },\n  { Header: 'Merchant Email', accessor: p=>sanitizeValue(p.merchant_email) },\n  { Header: 'Merchant Phone Number', accessor: p=>sanitizeValue(p.merchant_phone_number) },\n  { Header: 'Contact Name', accessor: p=>sanitizeValue(p.contact_name) },\n  { Header: 'Contact Phone Number', accessor: p=>sanitizeValue(p.contact_phone_number) }\n  // {\n  //   Header: 'Toko',\n  //   accessor: 'toko_id',\n  //   Cell: d => {\n  //     // let data = Moment(d.cell.value)\n  //     // if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     // else data = ''\n  //     const toko = (_.map(d.cell.value || [], (v, k) => v.name) || []).join(', ')\n  //     return (<span>{`${toko}`}</span>)\n  //   }\n  // }\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  // { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React from 'react'\nimport { Detail, Multiselect, CardWrapperCon } from '../../core/features/TablePagination'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { injectIntl } from 'react-intl'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport Box from '@mui/material/Box'\nimport Grid from '@mui/material/Grid'\nimport Paper from '@mui/material/Paper'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\nimport DateTimePicker from '@mui/lab/DateTimePicker'\nimport TextField from '@mui/material/TextField'\nimport AppConfig from '../../core/Config/AppConfig'\nimport { listallService, upsertPageTitle, listallPageUrl, listallPageTitle, upsertService, fields, detailService, redirectAfterDelete } from './Manifest'\nimport TokoOnlineManifest from '../TokoOnline/Manifest'\n\nconst InputText = ({ upsertServiceName, tablepaginationOnChangeForm, payload, name, dataDetail }) => {\n  return (\n    <div className='form-group'>\n      <label htmlFor={name}>{name}</label>\n      <input type='text' className='form-control' id={name} placeholder='' value={typeof payload[name] !== 'undefined' ? payload[name] : dataDetail[name] || ''} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: name, fieldValue: e.target.value })} />\n    </div>\n  )\n}\nconst InputText2 = ({ upsertServiceName, tablepaginationOnChangeForm, payload, name, label, dataDetail }) => {\n  return (\n    <>\n      <TextField\n        size='small'\n        id={name}\n        label={label}\n        value={typeof payload[name] !== 'undefined' ? payload[name] : dataDetail[name] || ''}\n        onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: name, fieldValue: e.target.value })}\n      />\n    </>\n  )\n  // return (\n  //   <div className='form-group'>\n  //     <label htmlFor={name}>{name}</label>\n  //     <input type='text' className='form-control' id={name} placeholder='' value={typeof payload[name] !== 'undefined' ? payload[name] : dataDetail[name] || ''} onChange={e => tablepaginationOnChangeForm({ serviceName: upsertServiceName, fieldName: name, fieldValue: e.target.value })} />\n  //   </div>\n  // )\n}\n\nconst FormUpdate = (props) => {\n  const {\n    tablepaginationOnChangeForm,\n    dataDetail,\n    payload,\n    upsertServiceName,\n    id,\n    tablepaginationResetForm,\n    formTitle,\n    userPrivileges\n  } = props\n  React.useEffect(() => {\n    const defaultFormValue = {}\n    if (id) defaultFormValue._id = id\n    tablepaginationResetForm({ apiVersion: 2, isInitialReset: true, serviceName: upsertServiceName, defaultFormValue })\n  }, [tablepaginationResetForm, upsertServiceName, id])\n  console.log('payloadpayloadpayload===>', payload.title)\n  console.log('payloadpayloadpayload===>', dataDetail.title)\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <Box\n        component='form'\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '25ch' }\n        }}\n        noValidate\n        autoComplete='off'\n      >\n\n        <InputText2\n          upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n          name='frontend_callback_url'\n          label='Frontend Callback Url'\n        />\n        <InputText2\n          upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n          name='backend_callback_url'\n          label='Backend Callback Url'\n        />\n        {/* <InputText2\n          upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n          name='active_date'\n          label='Active Date'\n        /> */}\n        {/* 2021-07-27 14:34:13.0 */}\n        <InputText2\n          upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n          name='address'\n          label='Address'\n        />\n\n        <InputText2\n          upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n          name='merchant_picture'\n          label='Merchant Picture'\n        />\n        <InputText2\n          upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n          name='contact_name'\n          label='Contact Name'\n        />\n        <InputText2\n          upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n          name='contact_phone_number'\n          label='Contact Phone Number'\n        />\n        {userPrivileges.includes('13') &&\n          (<>\n            <InputText2\n              upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n              name='merchant_name' label='Merchant Name'\n            />\n            <InputText2\n              upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n              name='merchant_code' label='Merchant Code'\n            />\n            <InputText2\n              upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n              name='merchant_debitin_id' label='Merchant Debitin Id'\n            />\n            <InputText2\n              upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n              name='merchant_plink_id'\n              label='Merchant Plink Id'\n            />\n            <InputText2\n              upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n              name='merchant_phone_number'\n              label='Merchant Phone Number'\n            />\n            <InputText2\n              upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n              name='merchant_email'\n              label='Merchant Email'\n            />\n            <DateTimePicker\n              label='Active Date'\n              value={typeof payload.active_date !== 'undefined' ? payload.active_date : dataDetail.active_date || ''}\n              inputFormat='yyyy-MM-dd HH:mm:ss.SSS'\n              onChange={(e) => {\n                var d = moment(e)\n                tablepaginationOnChangeForm({\n                  serviceName: upsertServiceName,\n                  fieldName: 'active_date',\n                  fieldValue: d.isValid() ? moment(d).format('YYYY-MM-DD HH:mm:ss.SSS ZZ') : ''\n                  // fieldValue: d.isValid() ? d.format('YYYY-MM-DD HH:mm:ss') : ''\n                })\n              }}\n              renderInput={(params) => <TextField size='small' {...params} />}\n            />\n            <InputText2\n              upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n              name='is_active'\n              label='Is Active'\n            />\n            <InputText2\n              upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n              name='client_token'\n              label='Client Token'\n            />\n            <InputText2\n              upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n              name='is_parent'\n              label='Is Parent'\n            />\n            <InputText2\n              upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n              name='merchant_type'\n              label='Merchant Type'\n            />\n            <InputText2\n              upsertServiceName={upsertServiceName} dataDetail={dataDetail} payload={payload} tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n              name='payment_method_config'\n              label='Payment Method Config'\n            />\n           </>)}\n      </Box>\n    </LocalizationProvider>\n  )\n}\nfunction Comp (props) {\n  console.log('raysaaaaaaaa')\n  const { match, userPrivileges } = props\n  return (\n    <ContentWrapper\n      pageTitle={upsertPageTitle}\n      breadcrumb={[\n        { title: 'Beranda', link: AppConfig.appHomePage },\n        { title: listallPageTitle, link: listallPageUrl() },\n        { title: upsertPageTitle, link: null, isActive: true }\n      ]}\n      contentHeaderTitle={upsertPageTitle}\n      isNeedLoggedin\n    >\n      <Box sx={{ flexGrow: 1 }}>\n        <Grid container spacing={1}>\n          <Grid container item spacing={3}>\n            <Grid item xs={12}>\n              <Paper variant='outlined'>\n                <div style={{ padding: 10 }}>\n                  <Detail\n                    detailServiceName={detailService}\n                    upsertServiceName={upsertService}\n                    fields={fields}\n                    id={match.params._id}\n                    formTitle={upsertPageTitle}\n                    redirectAfterDelete={redirectAfterDelete}\n                    withoutWrapper\n                  >\n                    <FormUpdate userPrivileges={userPrivileges} formTitle={upsertPageTitle} />\n                  </Detail>\n                </div>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </ContentWrapper>\n  )\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userPrivileges: state.myprofile.user_privileges,\n    merchant: state.myprofile.merchant\n  }\n}\nexport default connect(mapStateToProps)(injectIntl(Comp))\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = AppConfig.appName\nconst entity = 'tokoonline'\nconst serviceEntity = 'TokoTokoOnline'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Baru'\nexport const createPageTitle = 'Buat Baru'\nexport const listallPageTitle = 'Daftar Toko'\nexport const detailPageTitle = 'Toko Detail'\nexport const upsertPageTitle = 'Form ' + entityName\nexport const upsertService = 'upsert' + serviceEntity\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,name,pgateway_id{_id,title,keyid,mid,secretkey,configs},template,image_ids{_id, filename, filenameorigin, file_type},logo{_id, filename, filenameorigin, file_type},address,email,template,plink_merchant_secret_key,province,city,subcity,slug,plink_merchant_id,plink_merchant_key_id,status,website,facebook,instagram,youtube,description,created_at,updated_at,owner{_id,full_name,email},created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          {/* <Link className='dropdown-item' to={upsertPageUrl(p.cell.value)}>Detail</Link> */}\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Nama', accessor: 'name' },\n  { Header: 'website', accessor: 'website' },\n  { Header: 'facebook', accessor: 'facebook' },\n  { Header: 'instagram', accessor: 'instagram' },\n  { Header: 'youtube', accessor: 'youtube' },\n  { Header: 'status', accessor: 'status' },\n  // {\n  //   Header: 'Tanggal Diperbaharui',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  { Header: 'Pemilik', accessor: 'owner.full_name' }\n//   { Header: 'updated by', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\n\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  upsertPageTitle,\n  createService,\n  detailService,\n  upsertService,\n  listallService,\n  deleteService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","listallPageUrl","createNewButtonLabel","listallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","sanitizeValue","merchant_name","merchant_code","merchant_plink_id","merchant_email","merchant_phone_number","contact_name","contact_phone_number","InputText2","upsertServiceName","tablepaginationOnChangeForm","payload","name","label","dataDetail","size","onChange","e","serviceName","fieldName","fieldValue","target","FormUpdate","props","tablepaginationResetForm","userPrivileges","formTitle","React","defaultFormValue","_id","apiVersion","isInitialReset","console","log","title","dateAdapter","AdapterDateFns","component","sx","m","width","noValidate","autoComplete","includes","active_date","inputFormat","d","moment","isValid","format","renderInput","params","connect","state","ownProps","myprofile","user_privileges","merchant","injectIntl","match","pageTitle","breadcrumb","link","isActive","contentHeaderTitle","isNeedLoggedin","flexGrow","container","spacing","item","xs","variant","style","padding","detailServiceName","withoutWrapper","entityName","detailPageUrl","createPageTitle","createService"],"sourceRoot":""}