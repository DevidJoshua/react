{"version":3,"file":"static/js/8095.65db5369.chunk.js","mappings":"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","sources":["Pages/PaymentMethod/Manifest.js","Pages/PaymentMethod/PageDetail.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Moment from 'moment'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'PaymentMethod'\nconst entity = 'paymentmethod'\nconst serviceEntity = 'PaymentMethod'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'createNewButtonLabel'\nexport const createPageTitle = 'createPageTitle'\nexport const listallPageTitle = 'listallPageTitle'\nexport const detailPageTitle = 'detailPageTitle'\nexport const upsertPageTitle = 'Form ' + entityName\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,title,description,created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Nama Payment Method', accessor: 'title' },\n  { Header: 'Keterangan', accessor: 'description' },\n  { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' },\n  {\n    Header: 'Tanggal Dibuat',\n    accessor: 'created_at',\n    Cell: d => {\n      let data = Moment(d.cell.value)\n      if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      else data = ''\n      return (<span>{`${data}`}</span>)\n    }\n  },\n  {\n    Header: 'Tanggal Dirubah',\n    accessor: 'updated_at',\n    Cell: d => {\n      let data = Moment(d.cell.value)\n      if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      else data = ''\n      return (<span>{`${data}`}</span>)\n    }\n  },\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React from 'react'\nimport { injectIntl } from 'react-intl'\nimport { Detail } from '../../core/features/TablePagination'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { detailService, fields, deleteService, detailPageTitle, listallPageTitle, listallPageUrl, redirectAfterDelete, upsertPageUrl } from './Manifest'\nimport Moment from 'moment'\nimport AppConfig from '../../core/Config/AppConfig'\nconst DetailContent = (props) => {\n  const {\n    dataDetail\n  } = props\n  let createdAt = Moment(dataDetail.created_at || 0)\n  if (createdAt && createdAt.isValid()) createdAt = createdAt.format('YYYY-MM-DD HH:mm:ss')\n  else createdAt = ''\n  let updatedAt = Moment(dataDetail.updated_at || 0)\n  if (updatedAt && updatedAt.isValid()) updatedAt = updatedAt.format('YYYY-MM-DD HH:mm:ss')\n  else updatedAt = ''\n  return (\n    <dl>\n      <dt>Nama Payment Method</dt>\n      <dd>{dataDetail.title}</dd>\n      <dt>Keterangan</dt>\n      <dd>{dataDetail.description}</dd>\n      <dt>Diperbaharui Oleh</dt>\n      <dd>{(dataDetail.updated_by || {}).full_name}</dd>\n      <dt>Dibuat Oleh</dt>\n      <dd>{(dataDetail.created_by || {}).full_name}</dd>\n      <dt>Tanggal Pembuatan</dt>\n      <dd>{createdAt}</dd>\n      <dt>Tanggal Diperbaharui</dt>\n      <dd>{updatedAt}</dd>\n    </dl>\n  )\n}\nfunction Comp (props) {\n  const { match, history } = props\n  // const [dataDetail, setDataDetail] = React.useState([])\n  // const [lastSent, setLastSent] = React.useState(0)\n  return (\n    <ContentWrapper\n      pageTitle={detailPageTitle}\n      breadcrumb={[\n        { title: 'Beranda', link: AppConfig.appHomePage },\n        { title: listallPageTitle, link: listallPageUrl() },\n        { title: detailPageTitle, link: null, isActive: true }\n      ]}\n      contentHeaderTitle={detailPageTitle}\n      isNeedLoggedin\n    >\n      <div className='row'>\n        <div className='col-md-12'>\n          <Detail\n            detailServiceName={detailService}\n            deleteServiceName={deleteService}\n            fields={fields}\n            id={match.params._id}\n            formTitle={detailPageTitle}\n            redirectAfterDelete={redirectAfterDelete}\n            updatePageUrl={upsertPageUrl(match.params._id)}\n            createPageUrl={upsertPageUrl()}\n            // child={(dataDetail) => {\n            //   let createdAt = Moment(path([paginationConfig.serviceName, 'created_at'], dataDetail))\n            //   if (createdAt && createdAt.isValid()) createdAt = createdAt.format('YYYY-MM-DD HH:mm:ss')\n            //   else createdAt = ''\n            //   let updatedAt = Moment(path([paginationConfig.serviceName, 'updated_at'], dataDetail))\n            //   if (updatedAt && updatedAt.isValid()) updatedAt = updatedAt.format('YYYY-MM-DD HH:mm:ss')\n            //   else updatedAt = ''\n            //   let lastSentDate = Moment(path([paginationConfig.serviceName, 'last_sent'], dataDetail))\n            //   if (lastSentDate && lastSentDate.isValid()) lastSentDate = lastSentDate.format('YYYY-MM-DD HH:mm:ss')\n            //   else lastSentDate = ''\n            //   return (\n            //     <dl>\n            //       <dt>Nama Payment Method</dt>\n            //       <dd>{path([paginationConfig.serviceName, 'title'], dataDetail) || ''}</dd>\n            //       <dt>Keterangan</dt>\n            //       <dd>{path([paginationConfig.serviceName, 'description'], dataDetail) || ''}</dd>\n            //       <dt>Diperbaharui Oleh</dt>\n            //       <dd>{path([paginationConfig.serviceName, 'updated_by', 'full_name'], dataDetail) || ''}</dd>\n            //       <dt>Dibuat Oleh</dt>\n            //       <dd>{path([paginationConfig.serviceName, 'created_by', 'full_name'], dataDetail) || ''}</dd>\n            //       <dt>Tanggal Pembuatan</dt>\n            //       <dd>{createdAt}</dd>\n            //       <dt>Tanggal Diperbaharui</dt>\n            //       <dd>{updatedAt}</dd>\n            //     </dl>\n            //   )\n            // }}\n            // footerCard={dataDetail => {\n            //   // const subjectId = path([paginationConfig.serviceName, 'subject_id', '_id'], dataDetail)\n            //   return (\n            //     <>\n            //       <button style={{ width: 100 }} type='button' className='btn bg-gradient-danger' data-toggle='modal' data-target='#modal-danger'>Hapus</button>\n            //       <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(updatePageUrl(match.params._id))} type='button' className='btn bg-gradient-primary'>Ubah</button>\n            //       <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push('/paymentmethod/create')} type='button' className='btn bg-gradient-info'>Buat Baru</button>\n            //       {/* <button style={{ width: 100, marginLeft: 5 }} type='button' className='btn bg-gradient-info' data-toggle='modal' data-target='#modal-send-email'>Kirim</button> */}\n            //       {/* <button type='button' className='btn btn-info' onClick={() => history.push(createHref)}><i className='fas fa-plus' /> {`${createNewButtonLabel || 'Create New'}`}</button> */}\n            //       {/* <button style={{ width: 100, marginLeft: 5 }} onClick={e => history.goBack()} type='button' className='btn bg-gradient-warning'>Back</button> */}\n            //     </>\n            //   )\n            // }}\n            // modalFooter={(dataDetail, tablepaginationDeleteData) => {\n            //   // const subjectId = path([paginationConfig.serviceName, 'subject_id', '_id'], dataDetail)\n            //   return (\n            //     <>\n            //       <button id='buttonCloseModal' type='button' className='btn btn-outline-light' data-dismiss='modal'>Batal</button>\n            //       <button type='button' className='btn btn-outline-light' onClick={() => tablepaginationDeleteData({ id: match.params._id, serviceName: paginationConfig.serviceDeleteName, redirectAfterDelete: redirectAfterDelete, history })}>Hapus</button>\n            //     </>\n            //   )\n            // }}\n          >\n            <DetailContent history={history} match={match} />\n          </Detail>\n        </div>\n      </div>\n\n    </ContentWrapper>\n  )\n}\nexport default injectIntl(Comp)\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","listallPageUrl","createNewButtonLabel","createPageTitle","listallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","d","data","Moment","isValid","format","detailPageUrl","DetailContent","props","dataDetail","createdAt","created_at","updatedAt","updated_at","title","description","updated_by","full_name","created_by","injectIntl","match","pageTitle","breadcrumb","link","isActive","contentHeaderTitle","isNeedLoggedin","detailServiceName","deleteServiceName","params","_id","formTitle","updatePageUrl","createPageUrl"],"sourceRoot":""}