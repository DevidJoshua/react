{"version":3,"file":"static/js/6838.aa58777e.chunk.js","mappings":"gOAYMA,GAAUC,EAAAA,EAAAA,KAAQ,SAACC,EAAOC,GAAR,MAAsB,CAAEC,QAASF,EAAMG,eAAeC,cAAcF,SAAWF,EAAMG,eAAeE,kBAAkBH,WAA9HH,EAA0I,SAACO,GAEzJ,OADoBA,EAAZJ,SAGN,gBAAKK,UAAU,UAAf,UACE,cAAGA,UAAU,oCAHI,QAmFvB,WAAeR,EAAAA,EAAAA,KAdS,SAACC,EAAOC,GAC9B,IAAMO,EAAsBR,EAAMG,eAAeC,cAAcK,QAAU,GACnEC,EAA0BV,EAAMG,eAAeE,kBAAkBI,QAAU,GACjF,MAAO,CACLA,QAASD,EAAoBG,OAAOD,IAA4B,IAAIE,KAAI,SAAAC,GAAC,OAAIA,KAAGC,QAAO,SAAAD,GAAC,OAAIA,SAIrE,SAAAE,GACzB,MAAO,CACLC,4BAA6B,SAAAC,GAAI,OAAIF,EAASG,EAAAA,GAAAA,4BAAiDD,KAC/FE,gCAAiC,SAAAF,GAAI,OAAIF,EAASG,EAAAA,GAAAA,gCAAqDD,QAG3G,EA3EA,YAMI,IALFD,EAKC,EALDA,4BACAG,EAIC,EAJDA,gCACAV,EAGC,EAHDA,OACAW,EAEC,EAFDA,MACAC,EACC,EADDA,QAEAC,QAAQC,IAAI,uBAAwBd,GACpC,IAAMe,EAAgBC,EAAAA,OAAa,MAC7BC,EAAoBD,EAAAA,OAAa,MAQvC,OAPAA,EAAAA,WAAgB,WAIdT,EAA4B,CAAEW,MAAOP,EAAMQ,OAAOD,QAClDL,QAAQC,IAAI,cAAeH,EAAMQ,OAAOD,SACvC,CAACX,EAA6BI,EAAMQ,OAAOD,SAE5C,iBAAKpB,UAAU,YAAf,WACE,UAAC,IAAD,YACE,gDACA,iBAAMA,UAAU,mCAElB,gBAAKA,UAAU,YAAf,UACE,iBAAKA,UAAU,iCAAf,WACE,gBAAKA,UAAU,0BAAf,UACE,SAAC,KAAD,CAAMsB,GAAG,IAAIC,MAAM,KAAnB,UAAwB,uBAAIC,EAAAA,EAAAA,eAE9B,iBAAKxB,UAAU,+BAAf,WAEE,cAAGA,UAAU,gBAAb,4BACCE,EAAOuB,OAAS,IAAK,gBAAKzB,UAAU,qBAAqB0B,KAAK,QAAzC,SAAkDxB,EAAOG,KAAI,SAAAC,GAAC,OAAKA,GAAK,IAAIqB,aAC/E,IAAlBzB,EAAOuB,SACN,kBAAMG,SAAU,SAACC,GAEf,OADIA,GAAGA,EAAEC,kBACJb,EAAcc,QAAQC,OAAS,IAAIP,OAAS,GAAYQ,EAAAA,EAAAA,IAAe,gEAAiE,SACzIhB,EAAcc,QAAQC,QAAUb,EAAkBY,QAAQC,OAAgBC,EAAAA,EAAAA,IAAe,mCAAoC,cACjIrB,EAAgC,CAAEE,QAAAA,EAASoB,YAAajB,EAAcc,QAAQC,MAAOZ,MAAOP,EAAMQ,OAAOD,SAJ3G,WAOE,iBAAKpB,UAAU,aAAf,WACE,kBAAOmC,QAAQ,cAAf,4BACA,kBAAOC,KAAK,WAAWpC,UAAU,eAAeqC,GAAG,cAAcC,YAAY,GAAGC,IAAKtB,QAEvF,iBAAKjB,UAAU,aAAf,WACE,kBAAOmC,QAAQ,kBAAf,uCACA,kBAAOC,KAAK,WAAWpC,UAAU,eAAeqC,GAAG,kBAAkBC,YAAY,GAAGC,IAAKpB,QAE3F,6BACE,mBAAQqB,MAAO,CAAEC,MAAO,QAAUL,KAAK,SAASpC,UAAU,qCAAqC0C,UAAQ,EAAvG,0BAGN,SAAC,KAAD,CAAMpB,GAAG,SAAT,0CAEF,SAAC/B,EAAD","sources":["core/Pages/ForgetPassword/ChangePassword.js"],"sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { connect } from 'react-redux'\n// import { isEmpty, isNil } from 'ramda'\n// import { injectIntl } from 'react-intl'\nimport { Link } from 'react-router-dom'\nimport AppConfig from '../../Config/AppConfig'\nimport { callErrorToast } from '../../Utils/Utils'\nimport ForgetPasswordAction from '../../features/ForgetPassword/redux'\n// import LoginActions, { LoginSelectors } from './redux'\n// import ForgetPassword from '../../Containers/ForgetPassword'\n\nconst Loading = connect((state, ownProps) => ({ loading: state.forgetpassword.ValidateToken.loading || state.forgetpassword.SubmitNewPassword.loading }))((props) => {\n  const { loading } = props\n  if (!loading) return null\n  return (\n    <div className='overlay'>\n      <i className='fas fa-2x fa-sync-alt fa-spin' />\n    </div>\n  )\n})\n\nfunction PageLogin ({\n  forgetpasswordValidateToken,\n  forgetpasswordSubmitNewPassword,\n  errors,\n  match,\n  history\n}) {\n  console.log('errorserrorserrors=>', errors)\n  const newpasswordEl = React.useRef(null)\n  const confnewpasswordEl = React.useRef(null)\n  React.useEffect(() => {\n    // match.params.token\n    // Update the document title using the browser API\n    // document.title = `You clicked ${count} times`;\n    forgetpasswordValidateToken({ token: match.params.token })\n    console.log('tokennnnnnn', match.params.token)\n  }, [forgetpasswordValidateToken, match.params.token])\n  return (\n    <div className='login-box'>\n      <Helmet>\n        <title>Lupa Kata Sandi</title>\n        <body className='hold-transition login-page' />\n      </Helmet>\n      <div className='login-box'>\n        <div className='card card-outline card-primary'>\n          <div className='card-header text-center'>\n            <Link to='/' class='h1'><b>{AppConfig.appName}</b></Link>\n          </div>\n          <div className='card-body register-card-body'>\n            {/* <p className='login-box-msg' style={{ paddingBottom: 0 }}>Lupa Kata Sandi?.</p> */}\n            <p className='login-box-msg'>Validasi Token</p>\n            {errors.length > 0 && <div className='alert alert-danger' role='alert'>{errors.map(v => (v || {}).message)}</div>}\n            {errors.length === 0 &&\n              <form onSubmit={(e) => {\n                if (e) e.preventDefault()\n                if ((newpasswordEl.current.value || '').length < 5) { return callErrorToast('Gagal mengubah password. Panjang password minimal 5 karakter.', 'error') }\n                if (newpasswordEl.current.value !== confnewpasswordEl.current.value) { return callErrorToast('Confirmasi password masih salah.', 'error') }\n                forgetpasswordSubmitNewPassword({ history, newpassword: newpasswordEl.current.value, token: match.params.token })\n              }}\n              >\n                <div className='form-group'>\n                  <label htmlFor='newpassword'>Password Baru</label>\n                  <input type='password' className='form-control' id='newpassword' placeholder='' ref={newpasswordEl} />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='confnewpassword'>Konfirmasi Password Baru</label>\n                  <input type='password' className='form-control' id='confnewpassword' placeholder='' ref={confnewpasswordEl} />\n                </div>\n                <center>\n                  <button style={{ width: '100%' }} type='submit' className='btn btn-primary btn-block btn-flat' required>Submit</button>\n                </center>\n              </form>}\n            <Link to='/login'>Kembali ke halaman Login</Link>\n          </div>\n          <Loading />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const ValidateTokenErrors = state.forgetpassword.ValidateToken.errors || []\n  const SubmitNewPasswordErrors = state.forgetpassword.SubmitNewPassword.errors || []\n  return {\n    errors: (ValidateTokenErrors.concat(SubmitNewPasswordErrors) || []).map(v => v).filter(v => v)\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    forgetpasswordValidateToken: data => dispatch(ForgetPasswordAction.forgetpasswordValidateToken(data)),\n    forgetpasswordSubmitNewPassword: data => dispatch(ForgetPasswordAction.forgetpasswordSubmitNewPassword(data))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(PageLogin)\n"],"names":["Loading","connect","state","ownProps","loading","forgetpassword","ValidateToken","SubmitNewPassword","props","className","ValidateTokenErrors","errors","SubmitNewPasswordErrors","concat","map","v","filter","dispatch","forgetpasswordValidateToken","data","ForgetPasswordAction","forgetpasswordSubmitNewPassword","match","history","console","log","newpasswordEl","React","confnewpasswordEl","token","params","to","class","AppConfig","length","role","message","onSubmit","e","preventDefault","current","value","callErrorToast","newpassword","htmlFor","type","id","placeholder","ref","style","width","required"],"sourceRoot":""}