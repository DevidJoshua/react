{"version":3,"file":"static/js/3169.c1ece4aa.chunk.js","mappings":"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","sources":["Pages/BoAccount/Manifest.js","Pages/BoAccount/NeedApprovalAccountNumberPageList.js","features/AccountNeedApproval/containers/TableHeaderCon.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport { NeedApprovalCheckBox } from '../../features/NeedApproval'\nimport AppConfig from '../../core/Config/AppConfig'\nimport {sanitizeValue} from '../../core/Utils/Utils'\n\nimport Moment from 'moment'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Account'\nexport const entity = 'account'\nconst serviceEntity = 'BankAccount'\n\nexport const redirectAfterCreate = '/account-number-detail'\nexport const redirectAfterDelete = '/all-bank-account'\nexport const detailPageUrl = (id) => (`/account-number-detail/${id}`)\nexport const upsertPageUrl = (id) => (`/form-account-number${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => ('/all-bank-account')\nexport const createNewButtonLabel = 'Buat Kategori Baru'\nexport const createPageTitle = 'Detail Bank Account'\nexport const listallPageTitle = 'All Bank Accounts'\nexport const needApprovalListallPageTitle = 'Need Approval Bank Accounts'\nexport const detailPageTitle = 'Detail Bank Account'\nexport const upsertPageTitle = 'Form ' + entityName\n// export const createService = 'create' + serviceEntity\nexport const detailService = 'getDetailBankAccountById'\n// export const updateService = 'update' + serviceEntity\nexport const upsertService = 'upsertAccountNumber'\n\nexport const opApproveAccountNumberService = 'approveBankAccount'\nexport const opRejectAccountNumberService = 'rejectBankAccount'\n\nexport const approvedAccountNumberlistallService = 'getAllBankAccount'\nexport const getAllBankAccount = 'getAllBankAccount'\n\nexport const needApprovalAccountNumberlistallService = 'getAllNeedApprovalBankAccount'\nexport const deleteService = 'delete' + serviceEntity +'ById'\nexport const fields = { _id: true, bank_code_id: { _id: true,bank_code:true }, bank_code: true, bank_name: true, status: true, description: true, account_number: true, created_at: true, updated_at: true, created_by: { _id: true, full_name: true, email: true }, validated_by: { _id: true, full_name: true, email: true , updated_at:true }, approved_by: { _id: true, email: true, full_name: true }, account_name: true }\n// export const fields = '_id,status,description,account_number,created_at,updated_at,created_by{_id,full_name},validated_by{_id,full_name},approved_by{_id,email,full_name},account_name'\nexport const getApprovedBankAccountColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Account Name', accessor: p=>sanitizeValue(p.account_name) },\n  { Header: 'Account Number', accessor: p=>sanitizeValue(p.account_number) },\n  { Header: 'Bank Code', accessor: p=>sanitizeValue(p.bank_code) },\n  { Header: 'Bank Name', accessor: p=>sanitizeValue(p.bank_name) },\n  { Header: 'description', accessor: p=>sanitizeValue(p.description) },\n  { Header: 'Status', accessor: p=>sanitizeValue(p.status) },\n  { Header: 'created by', accessor: p => <span>{sanitizeValue((p.created_by || {}).full_name)}</span> },\n  { Header: 'approved by', accessor: 'approved_by.full_name' }\n]\n\nexport const getNeedApprovalBankAccountColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Receipt Name', accessor: p=>sanitizeValue(p.account_name) },\n  { Header: 'Receipt Number', accessor: p=>sanitizeValue(p.account_number) },\n  { Header: 'Bank Code', accessor: p=>sanitizeValue(p.bank_code) },\n  { Header: 'Bank Name', accessor: p=>sanitizeValue(p.bank_name) },\n  { Header: 'Description', accessor: p=>sanitizeValue(p.description) },\n  { Header: 'Status', accessor: p=>sanitizeValue(p.status) },\n  { Header: 'Validated by', accessor: p => <span>{sanitizeValue((p.validated_by || {}).full_name)}</span> },\n  { Header: 'Validated date', accessor: p =>{\n    const date = Moment(p.created_at)\n    const dt = p.created_at === null || p.created_at === undefined ? '-' : date.format(AppConfig.datetimeFormat)\n    return sanitizeValue(dt)\n  }},\n  { Header: 'Created by', accessor: p => <span>{(sanitizeValue(p.created_by || {}).full_name)}</span> },\n  { Header: 'Created at', accessor: p =>{\n    const date = Moment(p.created_at)\n    const dt = p.created_at === null || p.created_at === undefined ? '-' : date.format(AppConfig.datetimeFormat)\n    return sanitizeValue(dt)\n  }},\n  { Header: 'Updated at', accessor: p =>{\n    const date = Moment(p.updated_at)\n    const dt = p.updated_at === null || p.updated_at === undefined ? '-' : date.format(AppConfig.datetimeFormat)\n    return sanitizeValue(dt)\n  } },\n  {\n    Header: 'set',\n    accessor: p => {\n      if(!_.has(p,'validated_by._id')) return(<></>)\n      return (\n        <>\n          <div className='form-check'>\n            <NeedApprovalCheckBox idComparison={ p.validated_by._id} transactionId={p._id} />\n          </div>\n        </>\n      )\n    }\n  }\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n\n]\n\n\n\n\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  // listallService,\n  deleteService,\n  upsertService,\n  fields,\n  listallPageUrl\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport DatePicker from 'react-datepicker'\nimport moment from 'moment'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { TableHeaderCon } from '../../features/AccountNeedApproval'\nimport {\n  FilteringTable,\n  Table,\n  Filter\n} from '../../core/features/TablePagination'\nimport {\n  entity,\n  needApprovalAccountNumberlistallService,\n  fields,\n  needApprovalListallPageTitle as listallPageTitle,\n  upsertPageUrl,\n  createNewButtonLabel,\n  getNeedApprovalBankAccountColumns,\n  opApproveAccountNumberService,\n  opRejectAccountNumberService\n} from './Manifest'\nimport AppConfig from '../../core/Config/AppConfig'\nimport styled from 'styled-components'\nimport NeedApprovalActions from '../../features/NeedApproval/redux'\n\n\n\nconst Styles = styled.div``\nclass Comp extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      columns: getNeedApprovalBankAccountColumns(props.history),\n      startDate: props.startDate,\n      endDate: props.endDate\n    }\n  }\n\n  componentWillMount () {\n    this.props.resetCheckbox()\n  }\n  \n  debounce(func, wait, immediate) {\n    var timeout;\n  \n    return function executedFunction() {\n      var context = this;\n      var args = arguments;\n        \n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n  \n      var callNow = immediate && !timeout;\n    \n      clearTimeout(timeout);\n  \n      timeout = setTimeout(later, wait);\n    \n      if (callNow) func.apply(context, args);\n    };\n  };\n  // TODO web page - account need approval http://jira.plink.co.id:9000/browse/BS-57\n  render () {\n    const paginationConfig = {\n      serviceName: needApprovalAccountNumberlistallService,\n      fields: fields\n    }\n    const { columns } = this.state\n\n    return (\n      <ContentWrapper\n        pageTitle={listallPageTitle}\n        breadcrumb={[\n          { title: 'Beranda', link: AppConfig.appHomePage },\n          { title: listallPageTitle, link: null, isActive: true }\n        ]}\n        contentHeaderTitle={listallPageTitle}\n        isNeedLoggedin\n      >\n        <div className='row'>\n          <div className='col-md-12'>\n          <Styles>\n              <Filter\n                withoutCardHeader\n                serviceName={paginationConfig.serviceName}\n                child={(tablepaginationOnChangeFilter, filter = {}) => (\n                  <div className='form-group'>\n                    <div className='d-flex justify-content-start'>\n                      <div class='input-group mb-3 ml-3' style={{ width: '40%' }}>\n                        <input\n                          id='account_number'\n                          type='text'\n                          className='form-control'\n                          placeholder='Search'\n                          onChange={(e) => \n                          this.debounce(\n                            tablepaginationOnChangeFilter({\n                              serviceName: paginationConfig.serviceName,\n                              fieldName: ['account_number','account_name'],\n                              fieldValue: e.target.value\n                            }),2000,true)}\n\n                        />\n                      </div>\n                    </div>\n                  </div>\n                )}\n              />\n            </Styles>\n            <Table\n              listallServiceName={paginationConfig.serviceName}\n              fields={paginationConfig.fields}\n              columns={columns}\n              // createHref={upsertPageUrl()}\n              // createNewButtonLabel={createNewButtonLabel}\n              // whereCondition={{ status: 'NEED_APPROVAL' }}\n              apiVersion={2}\n              cardHeader={() => {\n                return <TableHeaderCon  \n                apiver={2}\n                rejectServiceEntity={opRejectAccountNumberService}\n                approveServiceEntity={opApproveAccountNumberService}/>\n              }}\n            />\n          </div>\n        </div>\n      </ContentWrapper>\n    )\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userPrivileges: state.myprofile.user_privileges\n  }\n}\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    resetCheckbox: () => dispatch(NeedApprovalActions.needapprovalResetCheckbox())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchtoProps)(Comp)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { injectIntl } from 'react-intl'\nimport { useHistory } from 'react-router-dom'\nimport NeedApprovalActions from '../../NeedApproval/redux'\n\nconst TableHeaderCon = ({\n  needapprovalCheckboxSubmitApprove,\n  needapprovalCheckboxSubmitReject,\n  needapprovalCheckbox,\n  loadingApprove,\n  merchantId,\n  history,\n  entity,\n  apiver,\n  rejectServiceEntity,\n  approveServiceEntity\n}) => {\n\nreturn (\n    <>\n      {/* <button type='button' className='btn btn-warning' onClick={() => history.push('/form-account-number')}><i className='fas fa-plus' /> Create New </button> */}\n      <button type='button' style={{ marginLeft: 5 }} className='btn btn-success' onClick={() =>  { needapprovalCheckboxSubmitApprove({ apiver,approveServiceEntity,needapprovalCheckbox, merchantId,entity,history }) } }><i className='fas fa-check-circle' /> Approve</button>\n      <button type='button' style={{ marginLeft: 5 }} className='btn btn-danger' onClick={() => { needapprovalCheckboxSubmitReject({ apiver,rejectServiceEntity,needapprovalCheckbox, merchantId,entity,history }) }}><i className='fas fa-window-close' /> Reject </button>\n    </>\n  )\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    merchantId: state.myprofile.merchant.id,\n    loadingApprove: state.needapproval.loadingApprove,\n    needapprovalCheckbox: state.needapproval.checkbox\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    needapprovalCheckboxSubmitReject: data => dispatch(NeedApprovalActions.needapprovalCheckboxSubmitReject(data)),\n    needapprovalCheckboxSubmitApprove: data => dispatch(NeedApprovalActions.needapprovalCheckboxSubmitApprove(data))\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n// )(injectIntl(TableHeaderCon))\n)(injectIntl((props) => {\n  var history = useHistory()\n  return <TableHeaderCon history={history} {...props} />\n}))\n"],"names":["basePath","AppConfig","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","listallPageUrl","listallPageTitle","needApprovalListallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","opApproveAccountNumberService","opRejectAccountNumberService","getAllBankAccount","needApprovalAccountNumberlistallService","deleteService","fields","_id","bank_code_id","bank_code","bank_name","status","description","account_number","created_at","updated_at","created_by","full_name","email","validated_by","approved_by","account_name","getApprovedBankAccountColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","sanitizeValue","getNeedApprovalBankAccountColumns","date","Moment","dt","undefined","format","_","idComparison","transactionId","Styles","styled","Comp","props","state","columns","startDate","endDate","this","resetCheckbox","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","paginationConfig","serviceName","pageTitle","breadcrumb","title","link","isActive","contentHeaderTitle","isNeedLoggedin","withoutCardHeader","child","tablepaginationOnChangeFilter","class","style","width","placeholder","onChange","e","debounce","fieldName","fieldValue","target","listallServiceName","apiVersion","cardHeader","apiver","rejectServiceEntity","approveServiceEntity","Component","connect","ownProps","userPrivileges","myprofile","user_privileges","dispatch","NeedApprovalActions","TableHeaderCon","needapprovalCheckboxSubmitApprove","needapprovalCheckboxSubmitReject","needapprovalCheckbox","merchantId","loadingApprove","entity","marginLeft","onClick","merchant","needapproval","checkbox","data","injectIntl","useHistory"],"sourceRoot":""}