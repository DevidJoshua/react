{"version":3,"file":"static/js/8970.acfd0bb0.chunk.js","mappings":"ggBAKMA,EAAWC,EAAAA,EAAAA,SAGXC,EAAS,WAGFC,EAAsB,mBACtBC,EAAsB,IAAMF,EAE5BG,EAAgB,SAACC,GAAD,iBAAaJ,EAAb,kBAA6BI,EAAK,IAAMA,EAAK,KAC7DC,EAAiB,4BAAWL,IAC5BM,EAAuB,qBAEvBC,EAAmB,WACnBC,EAAkB,kBAClBC,EAAkB,gBAElBC,EAAgB,oBAEhBC,EAAgB,iBAChBC,EAAiB,kBACjBC,EAAgB,iBAChBC,EAAS,2bAITC,EAAa,SAACC,GAAD,MAAa,CACrC,CACEC,OAAQ,IACRC,SAAU,MACVC,KAAM,SAAAC,GAAC,OACL,iBAAKC,UAAU,YAAf,WACE,mBAAQC,KAAK,SAASD,UAAU,gDAAgD,cAAY,WAA5F,UACE,iBAAMA,UAAU,UAAhB,gCAEF,gBAAKA,UAAU,gBAAgBE,KAAK,OAApC,UACE,SAAC,KAAD,CAAMF,UAAU,gBAAgBG,GAAE,UAAK1B,GAAL,OAAgBG,EAAhB,YAAuCmB,EAAEK,KAAKC,OAAhF,2BAIR,CAAET,OAAQ,gBAAiBC,SAAU,SAAAE,GAAC,OAAEO,EAAAA,EAAAA,IAAcP,EAAEQ,iBACxD,CAAEX,OAAQ,OAAQC,SAAU,SAAAE,GAAC,OAAEO,EAAAA,EAAAA,IAAcP,EAAES,iBAC/C,CAAEZ,OAAQ,aAAcC,SAAU,SAAAE,GAAC,OAAEO,EAAAA,EAAAA,IAAcP,EAAEU,qBACrD,CAAEb,OAAQ,iBAAkBC,SAAU,SAAAE,GAAC,OAAEO,EAAAA,EAAAA,IAAcP,EAAEW,kBACzD,CAAEd,OAAQ,wBAAyBC,SAAU,SAAAE,GAAC,OAAEO,EAAAA,EAAAA,IAAcP,EAAEY,yBAChE,CAAEf,OAAQ,eAAgBC,SAAU,SAAAE,GAAC,OAAEO,EAAAA,EAAAA,IAAcP,EAAEa,gBACvD,CAAEhB,OAAQ,uBAAwBC,SAAU,SAAAE,GAAC,OAAEO,EAAAA,EAAAA,IAAcP,EAAEc,2B,wMCpC3DC,EAAgB,SAACC,GACrB,IACEC,EAIED,EAJFC,WAEAC,GAEEF,EAHFG,UAGEH,EAFFE,OACAE,EACEJ,EADFI,eAEEC,EAAYC,GAAAA,CAAOL,EAAWM,YAAc,GACVF,EAAlCA,GAAaA,EAAUG,UAAuBH,EAAUI,OAAO,uBAClD,GACjB,IAAIC,EAAYJ,GAAAA,CAAOL,EAAWU,YAAc,GAIhD,OAHsCD,EAAlCA,GAAaA,EAAUF,UAAuBE,EAAUD,OAAO,uBAClD,IAGf,+BACE,iBAAKxB,UAAU,MAAf,WACE,iBAAKA,UAAU,WAAf,WACE,SAAC,KAAD,CAAgBkB,UAAU,iCAA1B,UACE,2BACE,2CACA,wBAAKF,EAAWT,iBAChB,2CACA,wBAAKS,EAAWR,iBAChB,4CACA,wBAAKQ,EAAWN,kBAChB,mDACA,wBAAKM,EAAWL,yBAChB,4DACA,wBAAKK,EAAWW,yBAChB,2DACA,wBAAKX,EAAWY,wBAChB,yCACA,wBAAKZ,EAAWa,eAChB,uCACA,wBAAKb,EAAWc,aAChB,8CACA,wBAAKd,EAAWe,WAChB,8CACA,wBAAKf,EAAWgB,oBAChB,0CACA,wBAAKhB,EAAWJ,gBAChB,kDACA,wBAAKI,EAAWH,4BAGnBM,EAAec,SAAS,QACvB,SAAC,KAAD,CAAgBf,UAAU,gBAA1B,UACE,2BACE,iDACA,wBAAKF,EAAWkB,uBAChB,yCACA,wBAAKlB,EAAWmB,OAChB,4DACA,wBAAKnB,EAAWP,qBAChB,0CACA,wBAAKO,EAAWoB,gBAChB,gDACA,wBAAKpB,EAAWqB,aAChB,2CACA,wBAAKrB,EAAWsB,iBAChB,mDACA,wBAAKtB,EAAWuB,yBAChB,+CACA,yBAAMvB,EAAWwB,YAAc,IAAIC,WAAa,MAChD,yCACA,yBAAMzB,EAAW0B,YAAc,IAAID,WAAa,MAChD,+CACA,wBAAKrB,KACL,kDACA,wBAAKK,aAKb,gBAAKzB,UAAU,WAAf,UACE,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,YAAf,UACE,SAAC,KAAD,CACE2C,mBAAoBC,EAAAA,GAAAA,eACpBnD,OAAQmD,EAAAA,GAAAA,OACRC,QAASD,EAAAA,GAAAA,WAA8B7B,EAAMpB,SAC7CmD,WAAY,kBACV,gBAAK9C,UAAU,MAAf,UACE,SAAC,KAAD,CAAM+C,WAAS,EAACC,QAAS,EAAzB,UACE,SAAC,KAAD,CAAMC,MAAI,EAAV,UACE,SAAC,KAAD,CAAqBC,WAAYjC,EAAMkC,OAAOhB,IAAKiB,mBAAmB,0BAQ9EC,UAAWT,EAAAA,GAAAA,iBACXU,iBAAe,EACfC,iBAAkB,IAClBC,WAAY,EACZC,eAAgB,CAAEC,YAAazC,EAAMkC,OAAOhB,SAG/ChB,EAAec,SAAS,QACvB,gBAAKjC,UAAU,YAAf,UACE,SAAC,KAAD,CAAgBkB,UAAU,iBAA1B,UAEKF,EAAW2C,wBAA0B,IAAIC,KAAI,SAACC,EAAGC,GAAJ,OAC5C,2BAAY,iDAA4B,wBAAKD,EAAEE,uBAAyB,qCAAgB,wBAAKF,EAAEG,YAAtFF,UAKlB3C,EAAec,SAAS,QACvB,gBAAKjC,UAAU,YAAf,UACE,SAAC,KAAD,iBAkDhB,WAAeiE,EAAAA,EAAAA,KANS,SAACC,EAAOC,GAC9B,MAAO,CACLhD,eAAgB+C,EAAME,UAAUC,gBAChCC,SAAUJ,EAAME,UAAUE,YAG9B,EAAwCC,EAAAA,EAAAA,KAzCxC,SAAexD,GACb,IAAQE,EAAmCF,EAAnCE,MAAOtB,EAA4BoB,EAA5BpB,QAASwB,EAAmBJ,EAAnBI,eACxB,OACE,SAAC,IAAD,CACEqD,UAAWrF,EAAAA,GACXsF,WAAY,CACV,CAAEC,MAAO,UAAWC,KAAMjG,EAAAA,EAAAA,aAC1B,CAAEgG,MAAOxF,EAAAA,GAAkByF,MAAM3F,EAAAA,EAAAA,OACjC,CAAE0F,MAAOvF,EAAAA,GAAiBwF,KAAM,KAAMC,UAAU,IAElDC,mBAAoB1F,EAAAA,GACpB2F,gBAAc,EARhB,UAUE,gBAAK9E,UAAU,MAAf,UACE,gBAAKA,UAAU,YAAf,UACE,SAAC,IAAD,CACE+E,kBAAmB1F,EAAAA,GACnB2F,kBAAmBxF,EAAAA,GACnBC,OAAQA,EAAAA,GACRV,GAAIkC,EAAMkC,OAAOhB,IACjBjB,UAAW/B,EAAAA,GACXN,oBAAqBA,EAAAA,GACrBoG,eAAenG,EAAAA,EAAAA,IAAcmC,EAAMkC,OAAOhB,KAC1C+C,eAAepG,EAAAA,EAAAA,MACfqG,gBAAc,EAThB,UAWE,SAACrE,EAAD,CAAeK,eAAgBA,EAAgBD,UAAW/B,EAAAA,GAAiBQ,QAASA,EAASsB,MAAOA","sources":["Pages/Merchant/Manifest.js","Pages/Merchant/PageDetail.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport AppConfig from '../../core/Config/AppConfig'\nimport {sanitizeValue,toIdr} from '../../core/Utils/Utils'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Merchant'\nconst entity = 'merchant'\nconst serviceEntity = 'Merchant'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Merchant Baru'\nexport const createPageTitle = 'Buat Merchant'\nexport const listallPageTitle = 'Merchant'\nexport const detailPageTitle = 'Detail Merchant'\nexport const upsertPageTitle = 'Form ' + entityName\n// export const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\n// export const updateService = 'update' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,merchant_name,merchant_code,merchant_debitin_id,' +\n  'merchant_plink_id,merchant_email,merchant_phone_number,frontend_callback_url,backend_callback_url,' +\n  'active_date,is_active,client_token,is_parent,address,merchant_type,merchant_picture,contact_name,contact_phone_number,payment_method_config,' +\n  'created_at,updated_at,created_by{full_name},updated_by{full_name},merchant_key{key_encrypt,key_id},merchant_paymentmethod{payment_method_code,configs}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Merchant Name', accessor: p=>sanitizeValue(p.merchant_name) },\n  { Header: 'Code', accessor: p=>sanitizeValue(p.merchant_code) },\n  { Header: 'Partner Id', accessor: p=>sanitizeValue(p.merchant_plink_id) },\n  { Header: 'Merchant Email', accessor: p=>sanitizeValue(p.merchant_email) },\n  { Header: 'Merchant Phone Number', accessor: p=>sanitizeValue(p.merchant_phone_number) },\n  { Header: 'Contact Name', accessor: p=>sanitizeValue(p.contact_name) },\n  { Header: 'Contact Phone Number', accessor: p=>sanitizeValue(p.contact_phone_number) }\n  // {\n  //   Header: 'Toko',\n  //   accessor: 'toko_id',\n  //   Cell: d => {\n  //     // let data = Moment(d.cell.value)\n  //     // if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     // else data = ''\n  //     const toko = (_.map(d.cell.value || [], (v, k) => v.name) || []).join(', ')\n  //     return (<span>{`${toko}`}</span>)\n  //   }\n  // }\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  // { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React from 'react'\nimport { injectIntl } from 'react-intl'\nimport _ from 'lodash'\nimport { connect } from 'react-redux'\nimport { Detail, CardWrapperCon, Table, Filter } from '../../core/features/TablePagination'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { detailService, fields, deleteService, detailPageTitle, listallPageTitle, listallPageUrl, upsertPageUrl, redirectAfterDelete } from './Manifest'\nimport { TeamMemberCon } from 'features/dashboard'\nimport MerchanKeyManifest from '../MerchantKey/Manifest'\nimport Moment from 'moment'\nimport AppConfig from '../../core/Config/AppConfig'\nimport { MerchantkeyModalCon } from '../../features/merchantKey'\nimport { Grid } from '@mui/material'\nimport { MerchantSecretKeyModalCon } from '../../features/merchantSecretKey'\n\nconst DetailContent = (props) => {\n  const {\n    dataDetail,\n    formTitle,\n    match,\n    userPrivileges\n  } = props\n  let createdAt = Moment(dataDetail.created_at || 0)\n  if (createdAt && createdAt.isValid()) createdAt = createdAt.format('YYYY-MM-DD HH:mm:ss')\n  else createdAt = ''\n  let updatedAt = Moment(dataDetail.updated_at || 0)\n  if (updatedAt && updatedAt.isValid()) updatedAt = updatedAt.format('YYYY-MM-DD HH:mm:ss')\n  else updatedAt = ''\n\n  return (\n    <>\n      <div className='row'>\n        <div className='col-sm-6'>\n          <CardWrapperCon formTitle='Merchant Integration Parameter'>\n            <dl>\n              <dt>Merchant Name</dt>\n              <dd>{dataDetail.merchant_name}</dd>\n              <dt>Merchant Code</dt>\n              <dd>{dataDetail.merchant_code}</dd>\n              <dt>Merchant Email</dt>\n              <dd>{dataDetail.merchant_email}</dd>\n              <dt>Merchant Phone Number</dt>\n              <dd>{dataDetail.merchant_phone_number}</dd>\n              <dt>Merchant Frontend Callback Url</dt>\n              <dd>{dataDetail.frontend_callback_url}</dd>\n              <dt>Merchant Backend Callback Url</dt>\n              <dd>{dataDetail.backend_callback_url}</dd>\n              <dt>Active Date</dt>\n              <dd>{dataDetail.active_date}</dd>\n              <dt>Is Active</dt>\n              <dd>{dataDetail.is_active}</dd>\n              <dt>Merchant Address</dt>\n              <dd>{dataDetail.address}</dd>\n              <dt>Merchant Picture</dt>\n              <dd>{dataDetail.merchant_picture}</dd>\n              <dt>Contact Name</dt>\n              <dd>{dataDetail.contact_name}</dd>\n              <dt>Contact Phone Number</dt>\n              <dd>{dataDetail.contact_phone_number}</dd>\n            </dl>\n          </CardWrapperCon>\n          {userPrivileges.includes('13') &&\n            <CardWrapperCon formTitle='Merchant Info'>\n              <dl>\n                <dt>Debitin Merchant Id</dt>\n                <dd>{dataDetail.merchant_debitin_id}</dd>\n                <dt>Merchant Id</dt>\n                <dd>{dataDetail._id}</dd>\n                <dt>Plink Merchant Id / Partner Id</dt>\n                <dd>{dataDetail.merchant_plink_id}</dd>\n                <dt>Client Token</dt>\n                <dd>{dataDetail.client_token}</dd>\n                <dt>Is Merchant Parent</dt>\n                <dd>{dataDetail.is_parent}</dd>\n                <dt>Merchant Type</dt>\n                <dd>{dataDetail.merchant_type}</dd>\n                <dt>Payment Method Config</dt>\n                <dd>{dataDetail.payment_method_config}</dd>\n                <dt>Diperbaharui Oleh</dt>\n                <dd>{(dataDetail.updated_by || {}).full_name || ''}</dd>\n                <dt>Dibuat Oleh</dt>\n                <dd>{(dataDetail.created_by || {}).full_name || ''}</dd>\n                <dt>Tanggal Pembuatan</dt>\n                <dd>{createdAt}</dd>\n                <dt>Tanggal Diperbaharui</dt>\n                <dd>{updatedAt}</dd>\n              </dl>\n            </CardWrapperCon>}\n        </div>\n\n        <div className='col-sm-6'>\n          <div className='row'>\n            <div className='col-sm-12'>\n              <Table\n                listallServiceName={MerchanKeyManifest.listallService}\n                fields={MerchanKeyManifest.fields}\n                columns={MerchanKeyManifest.getColumns(props.history)}\n                cardHeader={() => (\n                  <div className='row'>\n                    <Grid container spacing={2}>\n                      <Grid item>\n                        <MerchantkeyModalCon merchantId={match.params._id} buttonTriggerLabel='Create New Key' />\n                      </Grid>\n                      {/* <Grid item>\n                          <MerchantSecretKeyModalCon merchantId={match.params._id} buttonTriggerLabel='Generate Secret Key' serviceReference={MerchanKeyManifest.listallService}/>\n                        </Grid> */}\n                    </Grid>\n                  </div>\n                )}\n                cardTitle={MerchanKeyManifest.listallPageTitle}\n                withSearchField\n                widthSearchField={300}\n                apiVersion={2}\n                whereCondition={{ merchant_id: match.params._id }}\n              />\n            </div>\n            {userPrivileges.includes('13') &&\n              <div className='col-sm-12'>\n                <CardWrapperCon formTitle='Payment Method'>\n                  {\n                    (dataDetail.merchant_paymentmethod || []).map((i, k) => (\n                      <dl key={k}><dt>Payment Method Code</dt><dd>{i.payment_method_code}</dd><dt>Configs</dt><dd>{i.configs}</dd></dl>)\n                    )\n                  }\n                </CardWrapperCon>\n              </div>}\n            {userPrivileges.includes('13') &&\n              <div className='col-sm-12'>\n                <TeamMemberCon />\n              </div>}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nfunction Comp (props) {\n  const { match, history, userPrivileges } = props\n  return (\n    <ContentWrapper\n      pageTitle={detailPageTitle}\n      breadcrumb={[\n        { title: 'Beranda', link: AppConfig.appHomePage },\n        { title: listallPageTitle, link: listallPageUrl() },\n        { title: detailPageTitle, link: null, isActive: true }\n      ]}\n      contentHeaderTitle={detailPageTitle}\n      isNeedLoggedin\n    >\n      <div className='row'>\n        <div className='col-md-12'>\n          <Detail\n            detailServiceName={detailService}\n            deleteServiceName={deleteService}\n            fields={fields}\n            id={match.params._id}\n            formTitle={detailPageTitle}\n            redirectAfterDelete={redirectAfterDelete}\n            updatePageUrl={upsertPageUrl(match.params._id)}\n            createPageUrl={upsertPageUrl()}\n            withoutWrapper\n          >\n            <DetailContent userPrivileges={userPrivileges} formTitle={detailPageTitle} history={history} match={match} />\n          </Detail>\n        </div>\n      </div>\n\n    </ContentWrapper>\n  )\n}\n// export default injectIntl(Comp)\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userPrivileges: state.myprofile.user_privileges,\n    merchant: state.myprofile.merchant\n  }\n}\nexport default connect(mapStateToProps)(injectIntl(Comp))\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","listallPageUrl","createNewButtonLabel","listallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","sanitizeValue","merchant_name","merchant_code","merchant_plink_id","merchant_email","merchant_phone_number","contact_name","contact_phone_number","DetailContent","props","dataDetail","match","formTitle","userPrivileges","createdAt","Moment","created_at","isValid","format","updatedAt","updated_at","frontend_callback_url","backend_callback_url","active_date","is_active","address","merchant_picture","includes","merchant_debitin_id","_id","client_token","is_parent","merchant_type","payment_method_config","updated_by","full_name","created_by","listallServiceName","MerchanKeyManifest","columns","cardHeader","container","spacing","item","merchantId","params","buttonTriggerLabel","cardTitle","withSearchField","widthSearchField","apiVersion","whereCondition","merchant_id","merchant_paymentmethod","map","i","k","payment_method_code","configs","connect","state","ownProps","myprofile","user_privileges","merchant","injectIntl","pageTitle","breadcrumb","title","link","isActive","contentHeaderTitle","isNeedLoggedin","detailServiceName","deleteServiceName","updatePageUrl","createPageUrl","withoutWrapper"],"sourceRoot":""}