{"version":3,"file":"static/js/4325.956dd518.chunk.js","mappings":"odAGMA,EAAWC,EAAAA,EAAAA,SAGXC,EAAS,aAGFC,EAAsB,qBACtBC,EAAsB,IAAMF,EAE5BG,EAAgB,SAACC,GAAD,iBAAaJ,EAAb,kBAA6BI,EAAK,IAAMA,EAAK,KAE7DC,EAAuB,2BAEvBC,EAAmB,aACnBC,EAAkB,oBAClBC,EAAkB,kBAElBC,EAAgB,sBAChBC,EAAgB,mBAChBC,EAAiB,oBACjBC,EAAgB,mBAChBC,EAAS,4KACTC,EAAa,SAACC,GAAD,MAAa,CACrC,CACEC,OAAQ,GACRC,SAAU,MACVC,KAAM,SAAAC,GAAC,OACL,iBAAKC,UAAU,YAAf,WACE,mBAAQC,KAAK,SAASD,UAAU,gDAAgD,cAAY,WAA5F,UACE,iBAAMA,UAAU,UAAhB,gCAEF,gBAAKA,UAAU,gBAAgBE,KAAK,OAApC,UACE,SAAC,KAAD,CAAMF,UAAU,gBAAgBG,GAAE,UAAKzB,GAAL,OAAgBG,EAAhB,YAAuCkB,EAAEK,KAAKC,OAAhF,2BAIR,CAAET,OAAQ,QAASC,SAAU,SAC7B,CAAED,OAAQ,aAAcC,SAAU,iBA+CpC,MACEhB,oBAAAA,EACAC,oBAAAA,EACAwB,cA/E2B,SAACtB,GAAD,iBAAaJ,EAAb,mBAA8BI,IAgFzDD,cAAAA,EAEAE,qBAAAA,EACAsB,gBA/E6B,2BAgF7BrB,iBAAAA,EACAC,gBAAAA,EAGAE,cAAAA,EAEAE,eAAAA,EACAC,cAAAA,EACAF,cAAAA,EACAG,OAAAA,EACAC,WAAAA,EACAc,eA7F4B,4BAAW5B,IA8FvCQ,gBAAAA,I,uZCvGIV,EAAWC,EAAAA,EAAAA,SAGXC,EAAS,aAGFC,EAAsB,qBACtBC,EAAsB,IAAMF,EAE5BG,EAAgB,SAACC,GAAD,iBAAaJ,EAAb,kBAA6BI,EAAK,IAAMA,EAAK,KAC7DwB,EAAiB,4BAAW5B,IAC5BK,EAAuB,wBAEvBC,EAAmB,cACnBC,EAAkB,qBAClBC,EAAkB,kBAElBC,EAAgB,sBAChBC,EAAgB,mBAChBC,EAAiB,oBACjBC,EAAgB,mBAChBC,EAAS,qLACTC,EAAa,SAACC,GAAD,MAAa,CACrC,CACEC,OAAQ,MACRC,SAAU,MACVC,KAAM,SAAAC,GAAC,OACL,iBAAKC,UAAU,YAAf,WACE,mBAAQC,KAAK,SAASD,UAAU,gDAAgD,cAAY,WAA5F,UACE,iBAAMA,UAAU,UAAhB,gCAEF,gBAAKA,UAAU,gBAAgBE,KAAK,OAApC,UACE,SAAC,KAAD,CAAMF,UAAU,gBAAgBG,GAAE,UAAKzB,GAAL,OAAgBG,EAAhB,YAAuCkB,EAAEK,KAAKC,OAAhF,2BAIR,CAAET,OAAQ,OAAQC,SAAU,QAC5B,CAAED,OAAQ,UAAWC,SAAU,WAY/B,CACED,OAAQ,mBACRC,SAAU,YACVC,KAAM,SAAAW,GAEJ,GADAC,QAAQC,IAAI,cAAgBF,EAAEL,KAAKC,QAC9BI,EAAEL,KAAKC,MAAO,MAAO,IAC1B,IAAIO,EAAOC,GAAAA,CAAOJ,EAAEL,KAAKC,OAGzB,OAF4BO,EAAxBA,GAAQA,EAAKE,UAAkBF,EAAKG,OAAO,uBACnC,IACJ,oCAAUH,SA4BxB,MACE/B,oBAAAA,EACAC,oBAAAA,EACAwB,cAjF2B,SAACtB,GAAD,iBAAaJ,EAAb,mBAA8BI,IAkFzDD,cAAAA,EAEAE,qBAAAA,EACAsB,gBAjF6B,mBAkF7BrB,iBAAAA,EACAC,gBAAAA,EAGAE,cAAAA,EAEAE,eAAAA,EACAC,cAAAA,EACAF,cAAAA,EACAG,OAAAA,EACAC,WAAAA,EACAc,eAAAA,I,uJCvGIQ,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAaC,GAAQ,IAAD,yBAClB,cAAMA,IACDC,MAAQ,CACXC,SAASzB,EAAAA,EAAAA,IAAWuB,EAAMtB,UAHV,EA8DnB,OAzDA,8BAED,WACE,IAAQwB,EAAYC,KAAKF,MAAjBC,QACAxB,EAAYyB,KAAKH,MAAjBtB,QACR,OACE,SAAC,IAAD,CACE0B,UAAWnC,EAAAA,GACXoC,WAAY,CAAC,CAAEC,MAAO,UAAWC,KAAM7C,EAAAA,EAAAA,aAAyB,CAAE4C,MAAOrC,EAAAA,GAAkBsC,KAAM,KAAMC,UAAU,IACjHC,mBAAoBxC,EAAAA,GACpByC,gBAAc,EAJhB,UAME,gBAAK3B,UAAU,MAAf,UACE,iBAAKA,UAAU,YAAf,WAcE,SAAC,KAAD,CACE4B,mBAAoBrC,EAAAA,GACpBE,OAAQA,EAAAA,GACR0B,QAASA,EACTU,YAAY9C,EAAAA,EAAAA,MACZE,qBAAsBA,EAAAA,GACtB6C,UAAW5C,EAAAA,MAEb,SAAC,KAAD,CACE0C,mBAAoBG,EAAAA,GAAAA,eACpBtC,OAAQsC,EAAAA,GAAAA,OACRZ,QAASY,EAAAA,GAAAA,WAA8BpC,GACvCkC,WAAYE,EAAAA,GAAAA,gBACZ9C,qBAAsB8C,EAAAA,GAAAA,qBACtBD,UAAWC,EAAAA,GAAAA,8BAgBtB,EA/DGf,CAAagB,EAAAA,WAiEnB","sources":["Pages/EmailBatch/Manifest.js","Pages/EmailBlast/Manifest.js","Pages/EmailBlast/PageList.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\n// const entityName = 'EmailBatch'\nconst entity = 'emailbatch'\nconst serviceEntity = 'EmailBatch'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Grup Email Customer'\nexport const createPageTitle = 'Buat Grup Email Customer'\nexport const listallPageTitle = 'Email Grup'\nexport const detailPageTitle = 'Detail Email Grup'\nexport const upsertPageTitle = 'Form Grup Email'\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,customer_email_ids{_id, email},file_ids{_id, filename, filenameorigin, file_type},title,description,created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: '',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Judul', accessor: 'title' },\n  { Header: 'Keterangan', accessor: 'description' }\n  // {\n  //   Header: 'Toko',\n  //   accessor: 'toko_id',\n  //   Cell: d => {\n  //     // let data = Moment(d.cell.value)\n  //     // if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     // else data = ''\n  //     const toko = (_.map(d.cell.value || [], (v, k) => v.name) || []).join(', ')\n  //     return (<span>{`${toko}`}</span>)\n  //   }\n  // }\n  // {\n  //   Header: 'Terakhir Dikirim',\n  //   accessor: 'last_sent',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  // { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl,\n  upsertPageTitle\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Moment from 'moment'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'EmailBlast'\nconst entity = 'emailblast'\nconst serviceEntity = 'EmailBlast'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Email Blast Baru'\nexport const createPageTitle = 'Buat Email Blast'\nexport const listallPageTitle = 'Email Blast'\nexport const detailPageTitle = 'Detail Email Blast'\nexport const upsertPageTitle = 'Form ' + entityName\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,email_batch_id{_id,title, customer_email_ids{email}},toko_id{_id,name,email},name,subject,last_sent,content1,created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: 'Act',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Name', accessor: 'name' },\n  { Header: 'Subject', accessor: 'subject' },\n  // {\n  //   Header: 'Toko',\n  //   accessor: 'toko_id',\n  //   Cell: d => {\n  //     // let data = Moment(d.cell.value)\n  //     // if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     // else data = ''\n  //     const toko = (_.map(d.cell.value || [], (v, k) => v.name) || []).join(', ')\n  //     return (<span>{`${toko}`}</span>)\n  //   }\n  // }\n  {\n    Header: 'Terakhir Dikirim',\n    accessor: 'last_sent',\n    Cell: d => {\n      console.log('asdfadsfdsf' + d.cell.value)\n      if (!d.cell.value) return '-'\n      let data = Moment(d.cell.value)\n      if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      else data = ''\n      return (<span>{`${data}`}</span>)\n    }\n  },\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  // { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React, { Component } from 'react'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { Table } from '../../core/features/TablePagination'\nimport { listallService, fields, listallPageTitle, upsertPageUrl, createNewButtonLabel, getColumns } from './Manifest'\nimport ManifestEmailBatch from '../EmailBatch/Manifest'\nimport AppConfig from '../../core/Config/AppConfig'\nclass Comp extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      columns: getColumns(props.history)\n    }\n  }\n\n  render () {\n    const { columns } = this.state\n    const { history } = this.props\n    return (\n      <ContentWrapper\n        pageTitle={listallPageTitle}\n        breadcrumb={[{ title: 'Beranda', link: AppConfig.appHomePage }, { title: listallPageTitle, link: null, isActive: true }]}\n        contentHeaderTitle={listallPageTitle}\n        isNeedLoggedin\n      >\n        <div className='row'>\n          <div className='col-md-12'>\n            {/* <Filter\n              paginationConfig={paginationConfig}\n              child={(tablepaginationOnChangeFilter, filter) => (\n                <div className='row'>\n                  <div className='col-sm-6'>\n                    <div className='form-group'>\n                      <label htmlFor='string_to_search'>Cari</label>\n                      <input type='text' className='form-control' value={path(['string_to_search'], filter) || ''} id='string_to_search' placeholder='' onChange={e => tablepaginationOnChangeFilter({ serviceName: paginationConfig.serviceName, fieldName: 'string_to_search', fieldValue: e.target.value })} />\n                    </div>\n                  </div>\n                </div>\n              )}\n            /> */}\n            <Table\n              listallServiceName={listallService}\n              fields={fields}\n              columns={columns}\n              createHref={upsertPageUrl()}\n              createNewButtonLabel={createNewButtonLabel}\n              cardTitle={listallPageTitle}\n            />\n            <Table\n              listallServiceName={ManifestEmailBatch.listallService}\n              fields={ManifestEmailBatch.fields}\n              columns={ManifestEmailBatch.getColumns(history)}\n              createHref={ManifestEmailBatch.upsertPageUrl()}\n              createNewButtonLabel={ManifestEmailBatch.createNewButtonLabel}\n              cardTitle={ManifestEmailBatch.listallPageTitle}\n            />\n            {/* <Table\n              paginationConfig={{\n                serviceName: ManifestEmailBatch.listallService,\n                fields: ManifestEmailBatch.fields\n              }}\n              columns={ManifestEmailBatch.getColumns(history)}\n              createHref={ManifestEmailBatch.createPageUrl()}\n              createNewButtonLabel={ManifestEmailBatch.createNewButtonLabel}\n              cardTitle='Daftar Group Email Customer'\n            /> */}\n          </div>\n        </div>\n      </ContentWrapper>\n    )\n  }\n}\nexport default Comp\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","createNewButtonLabel","listallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","detailPageUrl","createPageTitle","listallPageUrl","d","console","log","data","Moment","isValid","format","Comp","props","state","columns","this","pageTitle","breadcrumb","title","link","isActive","contentHeaderTitle","isNeedLoggedin","listallServiceName","createHref","cardTitle","ManifestEmailBatch","Component"],"sourceRoot":""}