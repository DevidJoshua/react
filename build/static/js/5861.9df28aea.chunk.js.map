{"version":3,"file":"static/js/5861.9df28aea.chunk.js","mappings":"wTAIMA,EAAWC,EAAAA,EAAAA,SAGXC,EAAS,YAGFC,EAAsB,oBAGtBC,EAAgB,SAACC,GAAD,iBAAaH,EAAb,kBAA6BG,EAAK,IAAMA,EAAK,KAE7DC,EAAuB,sBAEvBC,EAAmB,YAOnBC,EAAiB,mBAEjBC,EAAS,CAAEC,KAAK,EAAMC,QAAS,CAAED,KAAK,EAAME,OAAO,GAAQA,OAAO,EAAMC,MAAM,EAAMC,aAAa,EAAMZ,QAAQ,EAAMa,YAAY,EAAMC,YAAY,EAAMC,WAAY,CAAEC,WAAW,GAAQC,WAAY,CAAED,WAAW,IACnNE,EAAa,SAACC,GAAD,MAAa,CACrC,CACEC,OAAQ,IACRC,SAAU,MACVC,KAAM,SAAAC,GAAC,OACL,iBAAKC,UAAU,YAAf,WACE,mBAAQC,KAAK,SAASD,UAAU,gDAAgD,cAAY,WAA5F,UACE,iBAAMA,UAAU,UAAhB,gCAEF,gBAAKA,UAAU,gBAAgBE,KAAK,OAApC,UACE,SAAC,KAAD,CAAMF,UAAU,gBAAgBG,GAAE,UAAK7B,GAAL,OAAgBG,EAAhB,YAAuCsB,EAAEK,KAAKC,OAAhF,2BAIR,CAAET,OAAQ,QAASC,SAAU,SAC7B,CAAED,OAAQ,OAAQC,SAAU,QAC5B,CAAED,OAAQ,cAAeC,SAAU,eACnC,CACED,OAAQ,OACRC,SAAU,UACVC,KAAM,SAAAQ,GAIJ,IAAMJ,GAAQK,IAAAA,IAAMD,EAAEF,KAAKC,OAAS,IAAI,SAACG,EAAGC,GAAJ,OAAUD,EAAEtB,UAAU,IAAIwB,KAAK,MACvE,OAAQ,oCAAUR,SC9ClBS,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAaC,GAAQ,IAAD,yBAClB,cAAMA,IACDC,MAAQ,CACXC,QAASpB,EAAWkB,EAAMjB,UAHV,EAgDnB,OA3CA,8BAED,WACE,IAAMoB,EAAmB,CACvBC,YAAalC,EACbC,OAAQA,GAEF+B,EAAYG,KAAKJ,MAAjBC,QACR,OACE,SAACI,EAAA,EAAD,CACEC,UAAWtC,EACXuC,WAAY,CAAC,CAAElC,MAAO,UAAWmC,KAAM9C,EAAAA,EAAAA,aAAyB,CAAEW,MAAOL,EAAkBwC,KAAM,KAAMC,UAAU,IACjHC,mBAAoB1C,EACpB2C,gBAAc,EAJhB,UAME,gBAAKxB,UAAU,MAAf,UACE,iBAAKA,UAAU,YAAf,WACE,SAAC,KAAD,CACEgB,YAAaD,EAAiBC,YAC9BS,MAAO,SAACC,GAAD,IAAgCC,EAAhC,uDAAyC,GAAzC,OACL,gBAAK3B,UAAU,MAAf,UACE,gBAAKA,UAAU,WAAf,UACE,iBAAKA,UAAU,aAAf,WACE,kBAAO4B,QAAQ,mBAAf,mBACA,kBAAO3B,KAAK,OAAOD,UAAU,eAAeK,MAAOsB,EAAOE,kBAAoB,GAAIlD,GAAG,mBAAmBmD,YAAY,GAAGC,SAAU,SAAAC,GAAC,OAAIN,EAA8B,CAAEV,YAAaD,EAAiBC,YAAaiB,UAAW,mBAAoBC,WAAYF,EAAEG,OAAO9B,sBAM/Q,SAAC,KAAD,CACE+B,mBAAoBrB,EAAiBC,YACrCjC,OAAQgC,EAAiBhC,OACzB+B,QAASA,EACTuB,WAAY3D,IACZE,qBAAsBA,EACtB0D,UAAWzD,EACX0D,WAAY,eAMvB,EAjDG5B,CAAa6B,EAAAA,WAwDnB,GAAeC,EAAAA,EAAAA,KALS,SAAC5B,EAAO6B,GAC9B,MAAO,CACLC,eAAgB9B,EAAM+B,UAAUC,mBAGpC,CAAwClC","sources":["core/Pages/Privilege/Manifest.js","core/Pages/Privilege/PageList.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport AppConfig from '../../Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Privilege'\nconst entity = 'privilege'\nconst serviceEntity = 'Privilege'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Privilege Baru'\nexport const createPageTitle = 'Buat Privilege'\nexport const listallPageTitle = 'Privilege'\nexport const detailPageTitle = 'Detail Privilege'\nexport const upsertPageTitle = 'Form ' + entityName\n// export const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\n// export const updateService = 'update' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = { _id: true, role_id: { _id: true, title: true }, title: true, name: true, description: true, entity: true, created_at: true, updated_at: true, created_by: { full_name: true }, updated_by: { full_name: true } }\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Title', accessor: 'title' },\n  { Header: 'Name', accessor: 'name' },\n  { Header: 'Description', accessor: 'description' },\n  {\n    Header: 'Role',\n    accessor: 'role_id',\n    Cell: d => {\n      // let data = Moment(d.cell.value)\n      // if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      // else data = ''\n      const role = (_.map(d.cell.value || [], (v, k) => v.title) || []).join(', ')\n      return (<span>{`${role}`}</span>)\n    }\n  }\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  // { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ContentWrapper from '../../Components/Layout/ContentWrapper'\nimport { Table, Filter } from '../../features/TablePagination'\nimport { listallService, fields, listallPageTitle, upsertPageUrl, createNewButtonLabel, getColumns } from './Manifest'\nimport AppConfig from '../../Config/AppConfig'\nclass Comp extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      columns: getColumns(props.history)\n    }\n  }\n\n  render () {\n    const paginationConfig = {\n      serviceName: listallService,\n      fields: fields\n    }\n    const { columns } = this.state\n    return (\n      <ContentWrapper\n        pageTitle={listallPageTitle}\n        breadcrumb={[{ title: 'Beranda', link: AppConfig.appHomePage }, { title: listallPageTitle, link: null, isActive: true }]}\n        contentHeaderTitle={listallPageTitle}\n        isNeedLoggedin\n      >\n        <div className='row'>\n          <div className='col-md-12'>\n            <Filter\n              serviceName={paginationConfig.serviceName}\n              child={(tablepaginationOnChangeFilter, filter = {}) => (\n                <div className='row'>\n                  <div className='col-sm-6'>\n                    <div className='form-group'>\n                      <label htmlFor='string_to_search'>Cari</label>\n                      <input type='text' className='form-control' value={filter.string_to_search || ''} id='string_to_search' placeholder='' onChange={e => tablepaginationOnChangeFilter({ serviceName: paginationConfig.serviceName, fieldName: 'string_to_search', fieldValue: e.target.value })} />\n                    </div>\n                  </div>\n                </div>\n              )}\n            />\n            <Table\n              listallServiceName={paginationConfig.serviceName}\n              fields={paginationConfig.fields}\n              columns={columns}\n              createHref={upsertPageUrl()}\n              createNewButtonLabel={createNewButtonLabel}\n              cardTitle={listallPageTitle}\n              apiVersion={2}\n            />\n          </div>\n        </div>\n      </ContentWrapper>\n    )\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userPrivileges: state.myprofile.user_privileges\n  }\n}\nexport default connect(mapStateToProps)(Comp)\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","upsertPageUrl","id","createNewButtonLabel","listallPageTitle","listallService","fields","_id","role_id","title","name","description","created_at","updated_at","created_by","full_name","updated_by","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","d","_","v","k","join","Comp","props","state","columns","paginationConfig","serviceName","this","ContentWrapper","pageTitle","breadcrumb","link","isActive","contentHeaderTitle","isNeedLoggedin","child","tablepaginationOnChangeFilter","filter","htmlFor","string_to_search","placeholder","onChange","e","fieldName","fieldValue","target","listallServiceName","createHref","cardTitle","apiVersion","Component","connect","ownProps","userPrivileges","myprofile","user_privileges"],"sourceRoot":""}