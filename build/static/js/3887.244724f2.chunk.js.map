{"version":3,"file":"static/js/3887.244724f2.chunk.js","mappings":"whBAIMA,EAAWC,EAAAA,EAAAA,SAGXC,EAAS,gBAGFC,EAAsB,IAAMD,EAAS,UACrCE,EAAsB,IAAMF,EAE5BG,EAAgB,SAACC,GAAD,iBAAaJ,EAAb,kBAA6BI,EAAK,IAAMA,EAAK,KAC7DC,EAAiB,4BAAWL,IAC5BM,EAAuB,uBACvBC,EAAkB,kBAClBC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAkB,qBAElBC,EAAgB,yBAChBC,EAAgB,sBAChBC,EAAiB,uBACjBC,EAAgB,sBAChBC,EAAS,0FACTC,EAAa,SAACC,GAAD,MAAa,CACrC,CACEC,OAAQ,IACRC,SAAU,MACVC,KAAM,SAAAC,GAAC,OACL,iBAAKC,UAAU,YAAf,WACE,mBAAQC,KAAK,SAASD,UAAU,gDAAgD,cAAY,WAA5F,UACE,iBAAMA,UAAU,UAAhB,gCAEF,gBAAKA,UAAU,gBAAgBE,KAAK,OAApC,UACE,SAAC,KAAD,CAAMF,UAAU,gBAAgBG,GAAE,UAAK3B,GAAL,OAAgBG,EAAhB,YAAuCoB,EAAEK,KAAKC,OAAhF,2BAIR,CAAET,OAAQ,sBAAuBC,SAAU,SAC3C,CAAED,OAAQ,aAAcC,SAAU,eAClC,CAAED,OAAQ,cAAeC,SAAU,wBACnC,CAAED,OAAQ,eAAgBC,SAAU,wBACpC,CACED,OAAQ,iBACRC,SAAU,aACVC,KAAM,SAAAQ,GACJ,IAAIC,EAAOC,GAAAA,CAAOF,EAAEF,KAAKC,OAGzB,OAF4BE,EAAxBA,GAAQA,EAAKE,UAAkBF,EAAKG,OAAO,uBACnC,IACJ,oCAAUH,OAGtB,CACEX,OAAQ,kBACRC,SAAU,aACVC,KAAM,SAAAQ,GACJ,IAAIC,EAAOC,GAAAA,CAAOF,EAAEF,KAAKC,OAGzB,OAF4BE,EAAxBA,GAAQA,EAAKE,UAAkBF,EAAKG,OAAO,uBACnC,IACJ,oCAAUH,SAIxB,MACE5B,oBAAAA,EACAC,oBAAAA,EACA+B,cAxD2B,SAAC7B,GAAD,iBAAaJ,EAAb,mBAA8BI,IAyDzDD,cAAAA,EAEAG,qBAAAA,EACAC,gBAAAA,EACAC,iBAAAA,EACAC,gBAAAA,EAGAE,cAAAA,EAEAE,eAAAA,EACAC,cAAAA,EACAF,cAAAA,EACAG,OAAAA,EACAC,WAAAA,EACAX,eAAAA,I,8IC/EI6B,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAaC,GAAQ,IAAD,yBAClB,cAAMA,IACDC,MAAQ,CACXC,SAASrB,EAAAA,EAAAA,IAAWmB,EAAMlB,UAHV,EA+BnB,OA1BA,8BAED,WACE,IAAQoB,EAAYC,KAAKF,MAAjBC,QAER,OACE,SAAC,IAAD,CACEE,UAAW/B,EAAAA,GACXgC,WAAY,CAAC,CAAEC,MAAO,UAAWC,KAAM3C,EAAAA,EAAAA,aAAyB,CAAE0C,MAAOjC,EAAAA,GAAkBkC,KAAM,KAAMC,UAAU,IACjHC,mBAAoBpC,EAAAA,GACpBqC,gBAAc,EAJhB,UAME,gBAAKvB,UAAU,MAAf,UACE,gBAAKA,UAAU,YAAf,UACE,SAAC,KAAD,CACEwB,mBAAoBjC,EAAAA,GACpBE,OAAQA,EAAAA,GACRsB,QAASA,EACTU,YAAY5C,EAAAA,EAAAA,MACZG,qBAAsBA,EAAAA,GACtB0C,UAAWxC,EAAAA,eAMtB,EAhCG0B,CAAae,EAAAA,WAkCnB","sources":["Pages/PaymentMethod/Manifest.js","Pages/PaymentMethod/PageList.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Moment from 'moment'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'PaymentMethod'\nconst entity = 'paymentmethod'\nconst serviceEntity = 'PaymentMethod'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'createNewButtonLabel'\nexport const createPageTitle = 'createPageTitle'\nexport const listallPageTitle = 'listallPageTitle'\nexport const detailPageTitle = 'detailPageTitle'\nexport const upsertPageTitle = 'Form ' + entityName\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,title,description,created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Nama Payment Method', accessor: 'title' },\n  { Header: 'Keterangan', accessor: 'description' },\n  { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' },\n  {\n    Header: 'Tanggal Dibuat',\n    accessor: 'created_at',\n    Cell: d => {\n      let data = Moment(d.cell.value)\n      if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      else data = ''\n      return (<span>{`${data}`}</span>)\n    }\n  },\n  {\n    Header: 'Tanggal Dirubah',\n    accessor: 'updated_at',\n    Cell: d => {\n      let data = Moment(d.cell.value)\n      if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      else data = ''\n      return (<span>{`${data}`}</span>)\n    }\n  },\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React, { Component } from 'react'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { Table } from '../../core/features/TablePagination'\nimport { listallService, fields, listallPageTitle, upsertPageUrl, createNewButtonLabel, getColumns } from './Manifest'\nimport AppConfig from '../../core/Config/AppConfig'\nclass Comp extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      columns: getColumns(props.history)\n    }\n  }\n\n  render () {\n    const { columns } = this.state\n    // const { history } = this.props\n    return (\n      <ContentWrapper\n        pageTitle={listallPageTitle}\n        breadcrumb={[{ title: 'Beranda', link: AppConfig.appHomePage }, { title: listallPageTitle, link: null, isActive: true }]}\n        contentHeaderTitle={listallPageTitle}\n        isNeedLoggedin\n      >\n        <div className='row'>\n          <div className='col-md-12'>\n            <Table\n              listallServiceName={listallService}\n              fields={fields}\n              columns={columns}\n              createHref={upsertPageUrl()}\n              createNewButtonLabel={createNewButtonLabel}\n              cardTitle={listallPageTitle}\n            />\n          </div>\n        </div>\n      </ContentWrapper>\n    )\n  }\n}\nexport default  Comp\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","listallPageUrl","createNewButtonLabel","createPageTitle","listallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","d","data","Moment","isValid","format","detailPageUrl","Comp","props","state","columns","this","pageTitle","breadcrumb","title","link","isActive","contentHeaderTitle","isNeedLoggedin","listallServiceName","createHref","cardTitle","Component"],"sourceRoot":""}