{"version":3,"file":"static/js/9122.0db24f7f.chunk.js","mappings":"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","sources":["Pages/CheckStatusPayment/PageCheckStatusPayment.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { isEmpty, isNil } from 'ramda'\nimport { injectIntl } from 'react-intl'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\n// import LoginActions, { LoginSelectors } from './redux'\nimport PurchaseorderActions from '../../features/PurchaseOrder/redux'\n\nclass PageCheckStatusPayment extends Component {\n  isEmptyOrNull (str) {\n    return isEmpty(str) || isNil(str)\n  }\n\n  state={\n    isLoading: false\n  }\n\n  // componentWillMount()\n  // {\n  //   this.setState({isLoading:true})\n  //   setTimeout(()=>{\n  //     this.setState({isLoading:false})\n  //   },3000)\n  // }\n  _formOnSubmit(e) {\n    if (e) e.preventDefault()\n    const email = this.refs.email.value\n    const trxid = this.refs.trxid.value\n    const otp = (this.refs.otp || {}).value\n    const { otpRefNum } = this.props\n    if(!otpRefNum)\n      this.props.purchaseorderCheckStatusRequestOtp({\n        email: email,\n        trxid: trxid\n      })\n    else\n    this.props.purchaseorderCheckStatus({\n      email: email,\n      trxid: trxid,\n      otp: otp,\n      otpRefNum: otpRefNum,\n    })\n\n    return false\n  }\n  render () {\n    const {otpRefNum, purchaseOrderDetail} = this.props\n    return (\n      <div className='login-box'>\n        <Helmet>\n          <title>Cek Status Pembayaran</title>\n          <body className='hold-transition login-page' />\n        </Helmet>\n        <div className='card'>\n          <div className='card-body login-card-body'>\n            <p className='login-box-msg'><b>Cek Status Pembayaran</b></p>\n            <form onSubmit={(e) => this._formOnSubmit(e)}>\n              <div className='input-group mb-3'>\n                <input type='email' className='form-control' placeholder='Email' ref='email' required />\n                <div className='input-group-append'>\n                  <div className='input-group-text'>\n                    <span className='fas fa-envelope' />\n                  </div>\n                </div>\n              </div>\n              <div className='input-group mb-3'>\n                <input type='text' className='form-control' placeholder='Nomor Transaksi' ref='trxid' required />\n                <div className='input-group-append'>\n                  <div className='input-group-text'>\n                    <span className='fas fa-money' />\n                  </div>\n                </div>\n              </div>\n              {otpRefNum && <div className='input-group mb-3'>\n                <input type='text' className='form-control' placeholder='Otp' ref='otp' required />\n                <div className='input-group-append'>\n                  <div className='input-group-text'>\n                    <span className='fas fa-lock' />\n                  </div>\n                </div>\n              </div>}\n              {/* <div className='row'>\n                <div className='col-8'>\n                  <div className='icheck-primary'> */}\n              {/* <input type='checkbox' id='remember' />\n                    <label for='remember'>\n                      Remember Me\n                    </label> */}\n              {/* </div>\n                </div> */}\n              <div className='col-12'>\n                {/* <button type='submit' className='btn btn-block btn-primary btn-sm'>Sign In</button> */}\n                {(!this.props.loading && !otpRefNum) && <button type='submit' className='btn btn-block btn-primary btn-sm'>Kirim Otp</button>}\n                {(!this.props.loading && otpRefNum) && <button type='submit' className='btn btn-block btn-primary btn-sm'>Cek Status Transaksi</button>}\n                {this.props.loading && (<center>Please Wait</center>)}\n                {/* {this.props.isRequesting && (<center><Loader loading type='rpmerah' /></center>)} */}\n              </div>\n            <br />\n          </form>\n              \n              <hr />\n              {!_.isEmpty(purchaseOrderDetail) && <dl>\n                <dt>Nama</dt>\n                <dd>{purchaseOrderDetail.full_name}</dd>\n                <dt>Email</dt>\n                <dd>{purchaseOrderDetail.email}</dd>\n                <dt>No Telepon</dt>\n                <dd>{purchaseOrderDetail.phone_number}</dd>\n                <dt>Nomor Transaksi</dt>\n                <dd>{purchaseOrderDetail.session_id}</dd>\n                <dt>Status Terakhir</dt>\n                <dd>{purchaseOrderDetail.action}</dd>\n                <dt>Payment Link</dt>\n                <dd><a href={`${purchaseOrderDetail.debitin_paymentpage_backend_baseurl}${purchaseOrderDetail.payment_page_url}`}>Klik link ini untuk Lakukan pembayaran</a></dd>\n              </dl>}\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log('state=>', state)\n  return {\n    otpRefNum: state.purchaseorder.otpRefNum,\n    purchaseOrderDetail: state.purchaseorder.purchaseOrderDetail,\n    otpValid: state.purchaseorder.otpValid,\n    loading: state.purchaseorder.loading\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  purchaseorderCheckStatusRequestOtp: data => dispatch(PurchaseorderActions.purchaseorderCheckStatusRequestOtp(data)),\n  purchaseorderCheckStatus: data => dispatch(PurchaseorderActions.purchaseorderCheckStatus(data))\n})\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(PageCheckStatusPayment))\n\n"],"names":["PageCheckStatusPayment","state","isLoading","str","isEmpty","isNil","e","preventDefault","email","this","refs","value","trxid","otp","otpRefNum","props","purchaseorderCheckStatus","purchaseorderCheckStatusRequestOtp","purchaseOrderDetail","className","onSubmit","_formOnSubmit","type","placeholder","ref","required","loading","_","full_name","phone_number","session_id","action","href","debitin_paymentpage_backend_baseurl","payment_page_url","Component","connect","ownProps","console","log","purchaseorder","otpValid","dispatch","data","PurchaseorderActions","injectIntl"],"sourceRoot":""}