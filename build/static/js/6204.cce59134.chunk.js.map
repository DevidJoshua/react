{"version":3,"file":"static/js/6204.cce59134.chunk.js","mappings":"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","sources":["Pages/Pgateway/Manifest.js","Pages/Pgateway/PageDetail.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n// import _ from 'lodash'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Pgateway'\nconst entity = 'pgateway'\nconst serviceEntity = 'Pgateway'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Pgateway Baru'\nexport const createPageTitle = 'Buat Pgateway'\nexport const listallPageTitle = 'Pgateway'\nexport const detailPageTitle = 'Detail Pgateway'\nexport const upsertPageTitle = 'Form ' + entityName\n// export const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\n// export const updateService = 'update' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,backendCallbackUrl,frontendCallbackUrl,description,title,pgcode,keyid,mid,secretkey,configs,created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Title', accessor: 'title' },\n  { Header: 'pgcode', accessor: 'pgcode' },\n  { Header: 'keyid', accessor: 'keyid' },\n  { Header: 'mid', accessor: 'mid' },\n  { Header: 'secretkey', accessor: 'secretkey' },\n  { Header: 'configs', accessor: 'configs' }\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  // { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React from 'react'\nimport { injectIntl } from 'react-intl'\n// import _ from 'lodash'\nimport { Detail, CardWrapperCon } from '../../core/features/TablePagination'\n// import { path } from 'ramda'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { detailService, fields, deleteService, detailPageTitle, listallPageTitle, listallPageUrl, upsertPageUrl, redirectAfterDelete } from './Manifest'\nimport Moment from 'moment'\nimport AppConfig from '../../core/Config/AppConfig'\n// import AppConfig from '../../core/Config/AppConfig'\n\nconst DetailContent = (props) => {\n  const {\n    dataDetail,\n    formTitle\n  } = props\n  let createdAt = Moment(dataDetail.created_at || 0)\n  if (createdAt && createdAt.isValid()) createdAt = createdAt.format('YYYY-MM-DD HH:mm:ss')\n  else createdAt = ''\n  let updatedAt = Moment(dataDetail.updated_at || 0)\n  if (updatedAt && updatedAt.isValid()) updatedAt = updatedAt.format('YYYY-MM-DD HH:mm:ss')\n  else updatedAt = ''\n  return (\n    <>\n      <div className='row'>\n        <div className='col-sm-6'>\n          <CardWrapperCon formTitle={formTitle}>\n            <dl>\n              <dt>Judul</dt>\n              <dd>{dataDetail.title}</dd>\n              <dt>pgcode</dt>\n              <dd>{dataDetail.pgcode}</dd>\n              <dt>keyid</dt>\n              <dd>{dataDetail.keyid}</dd>\n              <dt>mid</dt>\n              <dd>{dataDetail.mid}</dd>\n              <dt>secretkey</dt>\n              <dd>{dataDetail.secretkey}</dd>\n              <dt>configs</dt>\n              <dd>{dataDetail.configs}</dd>\n              <dt>description</dt>\n              <dd>{dataDetail.description}</dd>\n              <dt>backendCallbackUrl</dt>\n              <dd>{dataDetail.backendCallbackUrl}</dd>\n              <dt>frontendCallbackUrl</dt>\n              <dd>{dataDetail.frontendCallbackUrl}</dd>\n              <dt>Diperbaharui Oleh</dt>\n              <dd>{(dataDetail.updated_by || {}).full_name || ''}</dd>\n              <dt>Dibuat Oleh</dt>\n              <dd>{(dataDetail.created_by || {}).full_name || ''}</dd>\n              <dt>Tanggal Pembuatan</dt>\n              <dd>{createdAt}</dd>\n              <dt>Tanggal Diperbaharui</dt>\n              <dd>{updatedAt}</dd>\n            </dl>\n          </CardWrapperCon>\n        </div>\n      </div>\n    </>\n  )\n}\n\nfunction Comp (props) {\n  const { match, history } = props\n  return (\n    <ContentWrapper\n      pageTitle={detailPageTitle}\n      breadcrumb={[\n        { title: 'Beranda', link: AppConfig.appHomePage },\n        { title: listallPageTitle, link: listallPageUrl() },\n        { title: detailPageTitle, link: null, isActive: true }\n      ]}\n      contentHeaderTitle={detailPageTitle}\n      isNeedLoggedin\n    >\n      <div className='row'>\n        <div className='col-md-12'>\n          <Detail\n            detailServiceName={detailService}\n            deleteServiceName={deleteService}\n            fields={fields}\n            id={match.params._id}\n            formTitle={detailPageTitle}\n            redirectAfterDelete={redirectAfterDelete}\n            updatePageUrl={upsertPageUrl(match.params._id)}\n            createPageUrl={upsertPageUrl()}\n            withoutWrapper\n          >\n            <DetailContent formTitle={detailPageTitle} history={history} match={match} />\n          </Detail>\n        </div>\n      </div>\n\n    </ContentWrapper>\n  )\n}\nexport default injectIntl(Comp)\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","listallPageUrl","createNewButtonLabel","listallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","detailPageUrl","createPageTitle","DetailContent","props","dataDetail","formTitle","createdAt","Moment","created_at","isValid","format","updatedAt","updated_at","title","pgcode","keyid","mid","secretkey","configs","description","backendCallbackUrl","frontendCallbackUrl","updated_by","full_name","created_by","injectIntl","match","pageTitle","breadcrumb","link","isActive","contentHeaderTitle","isNeedLoggedin","detailServiceName","deleteServiceName","params","_id","updatePageUrl","createPageUrl","withoutWrapper"],"sourceRoot":""}