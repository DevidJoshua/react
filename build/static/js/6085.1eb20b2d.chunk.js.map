{"version":3,"file":"static/js/6085.1eb20b2d.chunk.js","mappings":"mNAOMA,GAAUC,EAAAA,EAAAA,KAAS,kBAAM,0FA0B/B,WAAeC,EAAAA,EAAAA,KAvBS,SAACC,EAAOC,GAE9B,MAAO,CACLC,eAAgBF,EAAMG,UAAUC,iBAAmB,GACnDC,QAASL,EAAMM,MAAMC,KACrBC,aAAcC,EAAAA,GAAAA,aAA4BT,EAAMM,OAChDI,aAAcD,EAAAA,GAAAA,aAA4BT,EAAMM,OAChDK,iBAAkBF,EAAAA,GAAAA,iBAAgCT,EAAMM,OACxDM,YAAaC,EAAAA,GAAAA,YAAyBb,EAAMc,KAC5CC,iBAAkBf,EAAMM,MAAMU,aAC9BC,YAAajB,EAAMc,IAAIG,YACvBC,gBAAiBlB,EAAMG,UAAUgB,SACjCC,kBAAmBpB,EAAMG,UAAUkB,gBAAkB,IAAIC,OAAS,MAI3C,SAAAC,GACzB,MAAO,CACLC,SAAU,SAAAC,GAAI,OAAIF,EAASG,EAAAA,GAAAA,SAAoBD,KAC/CE,eAAgB,SAAAF,GAAI,OAAIF,EAASG,EAAAA,GAAAA,eAA0BD,KAC3DG,gBAAiB,SAAAH,GAAI,OAAIF,EAASM,EAAAA,GAAAA,gBAA6BJ,QAGnE,EAzBa,SAACK,GAAD,OAAW,SAACjC,GAAD,QAASoB,YAAaa,EAAMb,YAAaU,eAAgBG,EAAMH,eAAgBI,SAAUD,EAAMC,SAAUpB,iBAAkBmB,EAAMnB,iBAAkBqB,SAAUF,EAAME,SAAUR,SAAUM,EAAMN,SAAUZ,YAAakB,EAAMlB,YAAaF,aAAcoB,EAAMpB,aAAcuB,QAASH,EAAMG,SAAaH","sources":["core/features/layout/containers/SidebarCon.js"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport loadable from '@loadable/component'\nimport LoginActions, { LoginSelectors } from '../../../Containers/Login/redux'\nimport AppActions, { AppSelectors } from '../../../Redux/AppRedux'\n// import Sidebar from '../../Components/Sidebar/Sidebar'\n\nconst Sidebar = loadable(() => import('../components/Sidebar'))\nconst Comp = (props) => <Sidebar homePageUrl={props.homePageUrl} setHomePageUrl={props.setHomePageUrl} sidemenu={props.sidemenu} userMerchantCode={props.userMerchantCode} userRole={props.userRole} appPatch={props.appPatch} routeActive={props.routeActive} sessionToken={props.sessionToken} history={props.history} {...props} />\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log('state.myprofile===>', state.myprofile)\n  return {\n    userPrivileges: state.myprofile.user_privileges || [],\n    profile: state.login.user,\n    userFullName: LoginSelectors.userFullName(state.login),\n    sessionToken: LoginSelectors.sessionToken(state.login),\n    userMerchantCode: LoginSelectors.userMerchantCode(state.login),\n    routeActive: AppSelectors.routeActive(state.app),\n    toggleDrawerFlag: state.login.toggleDrawer,\n    homePageUrl: state.app.homePageUrl,\n    currentMerchant: state.myprofile.merchant,\n    isMerchantExists: (state.myprofile.user_merchants || []).length > 0,\n    // userRole: LoginSelectors.userRole(state.login)\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    appPatch: data => dispatch(AppActions.appPatch(data)),\n    setHomePageUrl: data => dispatch(AppActions.setHomePageUrl(data)),\n    setToggleDrawer: data => dispatch(LoginActions.setToggleDrawer(data))\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Comp)\n"],"names":["Sidebar","loadable","connect","state","ownProps","userPrivileges","myprofile","user_privileges","profile","login","user","userFullName","LoginSelectors","sessionToken","userMerchantCode","routeActive","AppSelectors","app","toggleDrawerFlag","toggleDrawer","homePageUrl","currentMerchant","merchant","isMerchantExists","user_merchants","length","dispatch","appPatch","data","AppActions","setHomePageUrl","setToggleDrawer","LoginActions","props","sidemenu","userRole","history"],"sourceRoot":""}