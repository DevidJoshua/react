{"version":3,"file":"static/js/7534.8035dae3.chunk.js","mappings":"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","sources":["core/features/TablePagination/components/UpdateViewForm.js","core/features/TablePagination/components/ModalDeleteData.js","core/features/TablePagination/containers/DetailCon.js"],"sourcesContent":["import React, { PureComponent } from 'react'\n\nexport default class UpdateViewForm extends PureComponent {\n  render () {\n    const {\n      child,\n      tablepaginationOnChangeForm,\n      dataDetail,\n      payload,\n      loading,\n      userPrivileges\n    } = this.props\n    return (\n      <>\n        {child({ tablepaginationOnChangeForm, dataDetail, payload, loading, userPrivileges })}\n      </>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport { injectIntl, FormattedMessage as T } from 'react-intl'\nimport { connect } from 'react-redux'\nimport TablepaginationActions from '../redux'\nimport Loader from '../../../Components/Loader/Loader'\nclass ModalDeleteData extends PureComponent {\n  render () {\n    const {\n      tablepaginationDeleteData,\n      deleteServiceName,\n      redirectAfterDelete,\n      history,\n      deletePayload,\n      loading\n    } = this.props\n    console.log('modalmodalmodalmodalmodal', this.props)\n    return (\n      <div className='modal fade' id='modal-danger'>\n        <div className='modal-dialog'>\n          <div className='modal-content bg-danger'>\n            <div className='modal-header'>\n              <h4 className='modal-title'><T id='label-danger' /></h4>\n              <button type='button' className='close' data-dismiss='modal' aria-label='Close'>\n                <span aria-hidden='true'>Ã—</span>\n              </button>\n            </div>\n            <div className='modal-body'>\n              <p><T id='label-delete-confirmation' /></p>\n            </div>\n            <div className='modal-footer justify-content-between'>\n              {loading && <Loader loading type='rpmerah' />}\n              {!loading &&\n                <>\n                  <button id='buttonCloseModal' type='button' className='btn btn-outline-light' data-dismiss='modal'><T id='label.cancel' /></button>\n                  <button type='button' className='btn btn-outline-light' onClick={() => tablepaginationDeleteData({ deletePayload, serviceName: deleteServiceName, redirectAfterDelete, history })}><T id='label.delete' /></button>\n                </>}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default connect(\n  (state, ownProps) => ({ deletePayload: state.tablepagination.deletePayload,loading: (state.tablepagination.loading || {})[ownProps.deleteServiceName] }),\n  dispatch => ({ tablepaginationDeleteData: data => dispatch(TablepaginationActions.tablepaginationDeleteData(data)) })\n)(injectIntl(ModalDeleteData))\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { injectIntl } from 'react-intl'\nimport _ from 'lodash'\nimport TablepaginationActions from '../redux'\n// import Loader from '../../../Components/Loader/Loader'\nimport UpdateViewForm from '../components/UpdateViewForm'\nimport ModalDeleteData from '../components/ModalDeleteData'\n\nfunction DetailContent ({\n  history,\n  children,\n  userPrivileges,\n  errors,\n  upsertServiceName,\n  detailServiceName,\n  deleteServiceName,\n  dataDetail,\n  child: childFunc,\n  fetchData,\n  id,\n  tablepaginationOnChangeForm,\n  tablepaginationDeleteData,\n  tablepaginationResetForm,\n  payload,\n  loading,\n  updatePageUrl,\n  createPageUrl,\n  redirectAfterDelete,\n  needToSave,\n  activeForm,\n  fileArray,\n  buttonAction,\n  myUserId,\n  myMerchantId\n}) {\n  \n  React.useEffect(() => {\n    // console.log('React.useEffect-======', dataDetail)\n    if (id) fetchData({ id })\n  }, [fetchData, id])\n\n  const childrenWithProps = React.Children.map(children, child => {\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, {\n        tablepaginationOnChangeForm,\n        tablepaginationResetForm,\n        dataDetail,\n        payload,\n        loading,\n        userPrivileges,\n        childFunc,\n        upsertServiceName,\n        detailServiceName,\n        id,\n        needToSave,\n        activeForm,\n        fileArray,\n        myUserId,\n        myMerchantId\n      })\n    }\n    return child\n  })\n\n  return (\n    <>\n      {!_.isEmpty(errors) &&\n        <div class='alert alert-danger' role='alert'>\n          <ul>\n            {errors.map((v, i) => <li key={i}>{v.message}</li>)}\n          </ul>\n        </div>}\n\n      {childrenWithProps}\n      {buttonAction && buttonAction({ dataDetail,id,deleteServiceName })}\n      {!buttonAction &&\n        <>\n          {id && deleteServiceName && <button style={{ width: 100 }} type='button' className='btn bg-gradient-danger' data-toggle='modal' data-target='#modal-danger'>Hapus</button>}     \n          {updatePageUrl && <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(updatePageUrl)} type='button' className='btn bg-gradient-primary'>Ubah</button>}\n          {(id && createPageUrl) && <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(createPageUrl)} type='button' className='btn bg-gradient-info'>Buat</button>}\n\n        </>}\n      <ModalDeleteData\n        tablepaginationDeleteData={tablepaginationDeleteData}\n        deleteServiceName={deleteServiceName}\n        redirectAfterDelete={redirectAfterDelete}\n        history={history}\n        id={id}\n      />\n      <br />\n      <br />\n    </>\n  )\n  // }\n}\n\nconst Updateform = (props) => {\n  const history = useHistory()\n  const {\n    // footerCard,\n    // paginationConfig,\n    childFunc,\n    tablepaginationOnChangeForm,\n    // formTitle,\n    // tablepaginationSubmitForm,\n    id,\n    dataDetail,\n    tablepaginationFetchDataDetail,\n    tablepaginationResetForm,\n    tablepaginationDeleteData,\n    // tablepaginationSetloading,\n    payload,\n    // redirectAfterCreate,\n    // isNeedValidation,\n    // onSubmit,\n    // beforeSubmit,\n    errors,\n    loading,\n    userPrivileges,\n    children,\n    serviceName,\n    isReloading,\n    detailServiceName,\n    upsertServiceName,\n    fields,\n    updatePageUrl,\n    createPageUrl,\n    // for delete process\n    redirectAfterDelete,\n    deleteServiceName,\n    needToSave,\n    activeForm,\n    fileArray,\n    apiVersion,\n    buttonAction,\n    myUserId,\n    myMerchantId,\n    preProcessPatchData,\n    tablepaginationSetReloadDetail\n  } = props\n  // console.log('myUserIdmyUserIdmyUserIdmyUserId', myUserId)\n  // const errors = path(['errors', paginationConfig.serviceName], props) || []\n  // console.log('hhhhhhhhfffff', props)\n  const doFetchData = React.useCallback(({ id }) => {\n    var dataRedux = { serviceName: detailServiceName, id, fields, apiVersion: apiVersion }\n    if(preProcessPatchData) dataRedux.preProcessPatchData = preProcessPatchData\n    tablepaginationFetchDataDetail(dataRedux)\n  }, [tablepaginationFetchDataDetail, detailServiceName, fields,isReloading])\n  useEffect(() => {\n    // tablepaginationResetForm({ serviceName: upsertServiceName, activeForm: upsertServiceName, activeDetail: detailServiceName })\n    // returned function will be called on component unmount\n    return () => {\n      // tablepaginationResetForm({ serviceName: upsertServiceName })\n    }\n  }, [tablepaginationResetForm, upsertServiceName,isReloading])\n\n  useEffect(()=>{\n    tablepaginationSetReloadDetail({isReload:false,serviceName:detailServiceName})\n  },[])\n\n  return (\n    <DetailContent\n      activeForm={activeForm}\n      needToSave={needToSave}\n      history={history}\n      upsertServiceName={upsertServiceName}\n      detailServiceName={detailServiceName}\n      deleteServiceName={deleteServiceName}\n      userPrivileges={userPrivileges}\n      errors={errors}\n      serviceName={serviceName}\n      payload={payload || {}}\n      tablepaginationResetForm={tablepaginationResetForm}\n      tablepaginationOnChangeForm={tablepaginationOnChangeForm}\n      tablepaginationDeleteData={tablepaginationDeleteData}\n      loading={loading}\n      dataDetail={dataDetail || {}}\n      childFunc={childFunc}\n      fetchData={doFetchData}\n      id={id}\n      updatePageUrl={updatePageUrl}\n      createPageUrl={createPageUrl}\n      redirectAfterDelete={redirectAfterDelete}\n      fileArray={fileArray}\n      apiVersion={apiVersion}\n      buttonAction={buttonAction}\n      myUserId={myUserId}\n      myMerchantId={myMerchantId}\n    >\n      {children && children}\n      {!children && childFunc && <UpdateViewForm />}\n    </DetailContent>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // const errors = (state.tablepagination.errors || {})[(ownProps.paginationConfig || {}).serviceName] || []\n  // const loading = (state.tablepagination.loading || {})[(ownProps.paginationConfig || {}).serviceName] || false\n\n  const errors = (state.tablepagination.errors || {})[ownProps.detailServiceName]\n  const loading = (state.tablepagination.loading || {})[ownProps.detailServiceName]\n  const dataDetail = (state.tablepagination.dataDetail || {})[ownProps.detailServiceName]\n  const payload = (state.tablepagination.payload || {})[ownProps.upsertServiceName]\n  const fileArray = (state.tablepagination.fileArray || {})[ownProps.upsertServiceName] || {}\n\n  return {\n    fileArray,\n    isReloading: state.tablepagination.reloadDetail[ownProps.detailServiceName],\n    currentFileArray: state.tablepagination.currentFileArray,\n    loading,\n    errors,\n    payload,\n    needToSave: state.tablepagination.needToSave,\n    activeForm: state.tablepagination.activeForm,\n    dataDetail: dataDetail || {},\n    userPrivileges: state.myprofile.user_privileges,\n    myUserId: state.myprofile.user_id,\n    myMerchantId: (state.myprofile.merchant || {}).id\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    tablepaginationSetReloadDetail: data => dispatch(TablepaginationActions.setReloadDetail(data)),\n    tablepaginationSetloading: data => dispatch(TablepaginationActions.tablepaginationSetloading(data)),\n    tablepaginationOnChangeForm: data => dispatch(TablepaginationActions.tablepaginationOnChangeForm(data)),\n    tablepaginationSubmitForm: data => dispatch(TablepaginationActions.tablepaginationSubmitForm(data)),\n    tablepaginationFetchDataDetail: data => dispatch(TablepaginationActions.tablepaginationFetchDataDetail(data)),\n    tablepaginationResetForm: data => dispatch(TablepaginationActions.tablepaginationResetForm(data)),\n    tablepaginationDeleteData: data => dispatch(TablepaginationActions.tablepaginationDeleteData(data))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(Updateform))\n"],"names":["UpdateViewForm","this","props","child","tablepaginationOnChangeForm","dataDetail","payload","loading","userPrivileges","PureComponent","ModalDeleteData","tablepaginationDeleteData","deleteServiceName","redirectAfterDelete","history","deletePayload","console","log","className","id","type","Loader","onClick","serviceName","connect","state","ownProps","tablepagination","dispatch","data","TablepaginationActions","injectIntl","DetailContent","children","errors","upsertServiceName","detailServiceName","childFunc","fetchData","tablepaginationResetForm","updatePageUrl","createPageUrl","needToSave","activeForm","fileArray","buttonAction","myUserId","myMerchantId","React","childrenWithProps","_","class","role","map","v","i","message","style","width","marginLeft","push","isReloading","reloadDetail","currentFileArray","myprofile","user_privileges","user_id","merchant","tablepaginationSetReloadDetail","tablepaginationSetloading","tablepaginationSubmitForm","tablepaginationFetchDataDetail","useHistory","fields","apiVersion","preProcessPatchData","doFetchData","dataRedux","useEffect","isReload"],"sourceRoot":""}