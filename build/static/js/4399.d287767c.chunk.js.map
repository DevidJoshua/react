{"version":3,"file":"static/js/4399.d287767c.chunk.js","mappings":"8fAIMA,EAAWC,EAAAA,EAAAA,SAGXC,EAAS,aAGFC,EAAsB,qBACtBC,EAAsB,IAAMF,EAE5BG,EAAgB,SAACC,GAAD,iBAAaJ,EAAb,kBAA6BI,EAAK,IAAMA,EAAK,KAC7DC,EAAiB,4BAAWL,IAC5BM,EAAuB,wBAEvBC,EAAmB,cACnBC,EAAkB,qBAClBC,EAAkB,kBAElBC,EAAgB,sBAChBC,EAAgB,mBAChBC,EAAiB,oBACjBC,EAAgB,mBAChBC,EAAS,qLACTC,EAAa,SAACC,GAAD,MAAa,CACrC,CACEC,OAAQ,MACRC,SAAU,MACVC,KAAM,SAAAC,GAAC,OACL,iBAAKC,UAAU,YAAf,WACE,mBAAQC,KAAK,SAASD,UAAU,gDAAgD,cAAY,WAA5F,UACE,iBAAMA,UAAU,UAAhB,gCAEF,gBAAKA,UAAU,gBAAgBE,KAAK,OAApC,UACE,SAAC,KAAD,CAAMF,UAAU,gBAAgBG,GAAE,UAAK1B,GAAL,OAAgBG,EAAhB,YAAuCmB,EAAEK,KAAKC,OAAhF,2BAIR,CAAET,OAAQ,OAAQC,SAAU,QAC5B,CAAED,OAAQ,UAAWC,SAAU,WAY/B,CACED,OAAQ,mBACRC,SAAU,YACVC,KAAM,SAAAQ,GAEJ,GADAC,QAAQC,IAAI,cAAgBF,EAAEF,KAAKC,QAC9BC,EAAEF,KAAKC,MAAO,MAAO,IAC1B,IAAII,EAAOC,GAAAA,CAAOJ,EAAEF,KAAKC,OAGzB,OAF4BI,EAAxBA,GAAQA,EAAKE,UAAkBF,EAAKG,OAAO,uBACnC,IACJ,oCAAUH,SA4BxB,MACE7B,oBAAAA,EACAC,oBAAAA,EACAgC,cAjF2B,SAAC9B,GAAD,iBAAaJ,EAAb,mBAA8BI,IAkFzDD,cAAAA,EAEAG,qBAAAA,EACA6B,gBAjF6B,mBAkF7B5B,iBAAAA,EACAC,gBAAAA,EAGAE,cAAAA,EAEAE,eAAAA,EACAC,cAAAA,EACAF,cAAAA,EACAG,OAAAA,EACAC,WAAAA,EACAV,eAAAA,I,uIC/FI+B,EAAgB,SAACC,GACrB,IACEC,EAGED,EAHFC,WACAtB,EAEEqB,EAFFrB,QACAuB,EACEF,EADFE,UAGEC,EAAYT,GAAAA,CAAOO,EAAWG,YAAc,GACVD,EAAlCA,GAAaA,EAAUR,UAAuBQ,EAAUP,OAAO,uBAClD,GACjB,IAAIS,EAAYX,GAAAA,CAAOO,EAAWK,YAAc,GACVD,EAAlCA,GAAaA,EAAUV,UAAuBU,EAAUT,OAAO,uBAClD,GAEjB,IAAIW,EAAe,IACfN,EAAWO,YAE+BD,GAD5CA,EAAeb,GAAAA,CAAOO,EAAWO,WAAa,KAC1BD,EAAaZ,UAA0BY,EAAaX,OAAO,uBAC3D,IAGtB,IAAMa,EAAeR,EAAWS,gBAAkB,GAClD,OACE,gBAAK1B,UAAU,MAAf,UACE,gBAAKA,UAAU,WAAf,UACE,SAAC,KAAD,CAAgBkB,UAAWA,EAA3B,UACE,2BACE,wCACA,wBAAKD,EAAWU,QAChB,qCACA,wBAAKV,EAAWW,WAChB,+CACA,yBAAMX,EAAWY,SAAW,IAAIF,QAChC,iDACA,yBACE,SAAC,KAAD,CACEG,QAAS,WACPnC,EAAQoC,KAAK,sBAAwBN,EAAaO,MAFtD,SAKGP,EAAaQ,WAKlB,kCACA,yBAAI,gBAAKC,wBAAyB,CAAEC,OAAQlB,EAAWmB,eACvD,8CACA,wBAAKb,KACL,+CACA,yBAAMN,EAAWoB,YAAc,IAAIC,aACnC,yCACA,yBAAMrB,EAAWsB,YAAc,IAAID,aACnC,+CACA,wBAAKnB,KACL,kDACA,wBAAKE,cAsDjB,WAAemB,EAAAA,EAAAA,KA/Cf,SAAexB,GACb,IAAQyB,EAAmBzB,EAAnByB,MAAO9C,EAAYqB,EAAZrB,QAYf,OACE,SAAC,IAAD,CACE+C,UAAWvD,EAAAA,GACXwD,WAAY,CACV,CAAEV,MAAO,UAAWW,KAAMlE,EAAAA,EAAAA,aAC1B,CAAEuD,MAAO,qBAAsBW,KAAM,eAGrC,CAAEX,MAAO9C,EAAAA,GAAiByD,KAAM,KAAMC,UAAU,IAElDC,mBAAoB3D,EAAAA,GACpB4D,gBAAc,EAVhB,UAYE,gBAAK/C,UAAU,MAAf,UACE,gBAAKA,UAAU,YAAf,UACE,SAAC,IAAD,CACEgD,kBAAmB3D,EAAAA,GACnB4D,kBAAmBzD,EAAAA,GACnBC,OAAQA,EAAAA,GACRV,GAAI0D,EAAMS,OAAOlB,IACjBd,UAAW/B,EAAAA,GACXN,oBAAqBA,EAAAA,GACrBsE,eAAerE,EAAAA,EAAAA,IAAc2D,EAAMS,OAAOlB,KAC1CoB,eAAetE,EAAAA,EAAAA,MACfuE,gBAAc,EAThB,UAWE,SAACtC,EAAD,CAAeG,UAAW/B,EAAAA,GAAiBQ,QAASA,EAAS8C,MAAOA","sources":["Pages/EmailBlast/Manifest.js","Pages/EmailBlast/PageDetail.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Moment from 'moment'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'EmailBlast'\nconst entity = 'emailblast'\nconst serviceEntity = 'EmailBlast'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Email Blast Baru'\nexport const createPageTitle = 'Buat Email Blast'\nexport const listallPageTitle = 'Email Blast'\nexport const detailPageTitle = 'Detail Email Blast'\nexport const upsertPageTitle = 'Form ' + entityName\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,email_batch_id{_id,title, customer_email_ids{email}},toko_id{_id,name,email},name,subject,last_sent,content1,created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: 'Act',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Name', accessor: 'name' },\n  { Header: 'Subject', accessor: 'subject' },\n  // {\n  //   Header: 'Toko',\n  //   accessor: 'toko_id',\n  //   Cell: d => {\n  //     // let data = Moment(d.cell.value)\n  //     // if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     // else data = ''\n  //     const toko = (_.map(d.cell.value || [], (v, k) => v.name) || []).join(', ')\n  //     return (<span>{`${toko}`}</span>)\n  //   }\n  // }\n  {\n    Header: 'Terakhir Dikirim',\n    accessor: 'last_sent',\n    Cell: d => {\n      console.log('asdfadsfdsf' + d.cell.value)\n      if (!d.cell.value) return '-'\n      let data = Moment(d.cell.value)\n      if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      else data = ''\n      return (<span>{`${data}`}</span>)\n    }\n  },\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  // { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React from 'react'\n// import Immutable from 'seamless-immutable'\nimport { Link } from 'react-router-dom'\n// import _ from 'lodash'\nimport { injectIntl } from 'react-intl'\nimport { Detail, CardWrapperCon } from '../../core/features/TablePagination'\n// import { path } from 'ramda'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { upsertPageUrl, detailService, fields, deleteService, detailPageTitle, redirectAfterDelete } from './Manifest'\nimport Moment from 'moment'\nimport AppConfig from '../../core/Config/AppConfig'\n// import ManifestCustomerEmail from '../CustomerEmail/Manifest'\n// import { data } from '../../core/Redux/HomeRedux'\n\nconst DetailContent = (props) => {\n  const {\n    dataDetail,\n    history,\n    formTitle\n  } = props\n\n  let createdAt = Moment(dataDetail.created_at || 0)\n  if (createdAt && createdAt.isValid()) createdAt = createdAt.format('YYYY-MM-DD HH:mm:ss')\n  else createdAt = ''\n  let updatedAt = Moment(dataDetail.updated_at || 0)\n  if (updatedAt && updatedAt.isValid()) updatedAt = updatedAt.format('YYYY-MM-DD HH:mm:ss')\n  else updatedAt = ''\n\n  let lastSentDate = '-'\n  if (dataDetail.last_sent) {\n    lastSentDate = Moment(dataDetail.last_sent || 0)\n    if (lastSentDate && lastSentDate.isValid()) lastSentDate = lastSentDate.format('YYYY-MM-DD HH:mm:ss')\n    else lastSentDate = ''\n  }\n\n  const emailBatchId = dataDetail.email_batch_id || {}\n  return (\n    <div className='row'>\n      <div className='col-sm-6'>\n        <CardWrapperCon formTitle={formTitle}>\n          <dl>\n            <dt>Nama Email</dt>\n            <dd>{dataDetail.name}</dd>\n            <dt>Subject</dt>\n            <dd>{dataDetail.subject}</dd>\n            <dt>Dikirim dari toko</dt>\n            <dd>{(dataDetail.toko_id || {}).name}</dd>\n            <dt>Daftar Email Tujuan</dt>\n            <dd>\n              <Link\n                onClick={() => {\n                  history.push('/emailbatch/upsert/' + emailBatchId._id)\n                }}\n              >\n                {emailBatchId.title}\n              </Link>\n              {/* <br /> */}\n              {/* {(emailBatchId.customer_email_ids || []).map(v => v.email).join(', ')} */}\n            </dd>\n            <dt>Body</dt>\n            <dd><div dangerouslySetInnerHTML={{ __html: dataDetail.content1 }} /></dd>\n            <dt>Terakhir dikirim</dt>\n            <dd>{lastSentDate}</dd>\n            <dt>Diperbaharui Oleh</dt>\n            <dd>{(dataDetail.updated_by || {}).full_name}</dd>\n            <dt>Dibuat Oleh</dt>\n            <dd>{(dataDetail.created_by || {}).full_name}</dd>\n            <dt>Tanggal Pembuatan</dt>\n            <dd>{createdAt}</dd>\n            <dt>Tanggal Diperbaharui</dt>\n            <dd>{updatedAt}</dd>\n          </dl>\n        </CardWrapperCon>\n      </div>\n    </div>\n  )\n}\nfunction Comp (props) {\n  const { match, history } = props\n  // const [dataDetail, setDataDetail] = React.useState([])\n  // const [lastSent, setLastSent] = React.useState(0)\n  // const paginationConfig = {\n  //   serviceName: detailService,\n  //   serviceDeleteName: deleteService,\n  //   fields: fields\n  // }\n  // useEffect(() => {\n  //   const dDetail = Immutable.asMutable(path([paginationConfig.serviceName], dataDetail) || {}, { deep: true })\n  //   setLastSent(parseInt(dDetail.last_sent || 0))\n  // }, [dataDetail, paginationConfig.serviceName])\n  return (\n    <ContentWrapper\n      pageTitle={detailPageTitle}\n      breadcrumb={[\n        { title: 'Beranda', link: AppConfig.appHomePage },\n        { title: 'Daftar Email Blast', link: '/emailblast' },\n        // { title: 'Course Detail', link: `/course/detail/${courseId}`, isActive: true },\n        // { title: 'Subject Detail', link: `/subject/detail/${subjectId}`, isActive: true },\n        { title: detailPageTitle, link: null, isActive: true }\n      ]}\n      contentHeaderTitle={detailPageTitle}\n      isNeedLoggedin\n    >\n      <div className='row'>\n        <div className='col-md-12'>\n          <Detail\n            detailServiceName={detailService}\n            deleteServiceName={deleteService}\n            fields={fields}\n            id={match.params._id}\n            formTitle={detailPageTitle}\n            redirectAfterDelete={redirectAfterDelete}\n            updatePageUrl={upsertPageUrl(match.params._id)}\n            createPageUrl={upsertPageUrl()}\n            withoutWrapper\n          >\n            <DetailContent formTitle={detailPageTitle} history={history} match={match} />\n          </Detail>\n        </div>\n      </div>\n\n    </ContentWrapper>\n  )\n}\nexport default injectIntl(Comp)\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","listallPageUrl","createNewButtonLabel","listallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","d","console","log","data","Moment","isValid","format","detailPageUrl","createPageTitle","DetailContent","props","dataDetail","formTitle","createdAt","created_at","updatedAt","updated_at","lastSentDate","last_sent","emailBatchId","email_batch_id","name","subject","toko_id","onClick","push","_id","title","dangerouslySetInnerHTML","__html","content1","updated_by","full_name","created_by","injectIntl","match","pageTitle","breadcrumb","link","isActive","contentHeaderTitle","isNeedLoggedin","detailServiceName","deleteServiceName","params","updatePageUrl","createPageUrl","withoutWrapper"],"sourceRoot":""}