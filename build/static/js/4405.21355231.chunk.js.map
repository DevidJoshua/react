{"version":3,"file":"static/js/4405.21355231.chunk.js","mappings":"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","sources":["core/Pages/Tag/Manifest.js","core/Pages/Tag/PageDetail.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Moment from 'moment'\nimport AppConfig from '../../Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Tag'\nconst entity = 'tag'\nconst serviceEntity = 'Tag'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const updatePageUrl = (id) => (`/${entity}/update/${id}`)\nexport const createPageUrl = () => (`/${entity}/create`)\nexport const createNewButtonLabel = 'Create New ' + entityName\nexport const createPageTitle = 'Create New ' + entityName\nexport const listallPageTitle = entityName + 's'\nexport const detailPageTitle = entityName + ' Detail'\nexport const updatePageTitle = 'Update ' + entityName\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const updateService = 'update' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,name,created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: 'Act',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'name', accessor: 'name' },\n  {\n    Header: 'created_at',\n    accessor: 'created_at',\n    Cell: d => {\n      let data = Moment(d.cell.value)\n      if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      else data = ''\n      return (<span>{`${data}`}</span>)\n    }\n  },\n  {\n    Header: 'updated_at',\n    accessor: 'updated_at',\n    Cell: d => {\n      let data = Moment(d.cell.value)\n      if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      else data = ''\n      return (<span>{`${data}`}</span>)\n    }\n  },\n  { Header: 'created by', accessor: 'created_by.full_name' },\n  { Header: 'updated by', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  updatePageUrl,\n  createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  updatePageTitle,\n  createService,\n  detailService,\n  updateService,\n  listallService,\n  deleteService,\n  fields,\n  getColumns\n}","import React from 'react'\nimport { injectIntl } from 'react-intl'\nimport { Detail as Detaildata } from '../../features/TablePagination'\nimport { path } from 'ramda'\nimport ContentWrapper from '../../Components/Layout/ContentWrapper'\nimport { detailService, fields, deleteService, detailPageTitle, updatePageUrl, redirectAfterDelete } from './Manifest'\nimport Moment from 'moment'\nimport AppConfig from '../../Config/AppConfig'\n\nfunction Comp (props) {\n  const { match, history } = props\n  const paginationConfig = {\n    serviceName: detailService,\n    serviceDeleteName: deleteService,\n    fields: fields\n  }\n  // const subjectId = path([paginationConfig.serviceName, 'subject_id', '_id'], dataDetail)\n  // const courseId = path([paginationConfig.serviceName, 'subject_id', 'course_id', '_id'], dataDetail)\n  return (\n    <ContentWrapper\n      pageTitle={detailPageTitle}\n      breadcrumb={[\n        { title: 'Home', link: AppConfig.appHomePage },\n        // { title: 'Course', link: '/course', isActive: true },\n        // { title: 'Course Detail', link: `/course/detail/${courseId}`, isActive: true },\n        // { title: 'Subject Detail', link: `/subject/detail/${subjectId}`, isActive: true },\n        { title: detailPageTitle, link: null, isActive: true }\n      ]}\n      contentHeaderTitle={detailPageTitle}\n      isNeedLoggedin\n    >\n      <div className='row'>\n        <div className='col-md-12'>\n          <Detaildata\n            id={match.params._id}\n            updateHref={updatePageUrl(match.params._id)}\n            formTitle={detailPageTitle}\n            paginationConfig={paginationConfig}\n            child={(dataDetail) => {\n\n              let createdAt = Moment(path([paginationConfig.serviceName, 'created_at'], dataDetail))\n              if (createdAt && createdAt.isValid()) createdAt = createdAt.format('YYYY-MM-DD HH:mm:ss')\n              else createdAt = ''\n              let updatedAt = Moment(path([paginationConfig.serviceName, 'updated_at'], dataDetail))\n              if (updatedAt && updatedAt.isValid()) updatedAt = updatedAt.format('YYYY-MM-DD HH:mm:ss')\n              else updatedAt = ''\n              return (\n                <dl>\n                  <dt>Name</dt>\n                  <dd>{path([paginationConfig.serviceName, 'name'], dataDetail) || ''}</dd>\n                  <dt>Updated By</dt>\n                  <dd>{path([paginationConfig.serviceName, 'updated_by', 'full_name'], dataDetail) || ''}</dd>\n                  <dt>Created By</dt>\n                  <dd>{path([paginationConfig.serviceName, 'created_by', 'full_name'], dataDetail) || ''}</dd>\n                  <dt>Created By</dt>\n                  <dd>{createdAt}</dd>\n                  <dt>Updated By</dt>\n                  <dd>{updatedAt}</dd>\n                </dl>\n              )\n\n            }}\n            footerCard={dataDetail => {\n              // const subjectId = path([paginationConfig.serviceName, 'subject_id', '_id'], dataDetail)\n              return (\n                <>\n                  <button style={{ width: 100 }} type='button' className='btn bg-gradient-danger' data-toggle='modal' data-target='#modal-danger'>Delete</button>\n                  <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(updatePageUrl(match.params._id))} type='button' className='btn bg-gradient-primary'>Edit</button>\n                </>\n              )\n            }}\n            modalFooter={(dataDetail, tablepaginationDeleteData) => {\n              // const subjectId = path([paginationConfig.serviceName, 'subject_id', '_id'], dataDetail)\n              return (\n                <>\n                  <button id='buttonCloseModal' type='button' className='btn btn-outline-light' data-dismiss='modal'>Cancel</button>\n                  <button type='button' className='btn btn-outline-light' onClick={() => tablepaginationDeleteData({ id: match.params._id, serviceName: paginationConfig.serviceDeleteName, redirectAfterDelete: redirectAfterDelete, history })}>Delete</button>\n                </>\n              )\n            }}\n          />\n        </div>\n      </div>\n\n    </ContentWrapper>\n  )\n}\nexport default injectIntl(Comp)\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","detailPageUrl","id","updatePageUrl","createPageUrl","createNewButtonLabel","listallPageTitle","entityName","detailPageTitle","updatePageTitle","detailService","updateService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","d","data","Moment","isValid","format","createPageTitle","createService","injectIntl","props","match","paginationConfig","serviceName","serviceDeleteName","pageTitle","breadcrumb","title","link","isActive","contentHeaderTitle","isNeedLoggedin","params","_id","updateHref","formTitle","child","dataDetail","createdAt","path","updatedAt","footerCard","style","width","marginLeft","onClick","push","modalFooter","tablepaginationDeleteData"],"sourceRoot":""}