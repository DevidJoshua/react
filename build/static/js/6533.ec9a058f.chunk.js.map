{"version":3,"file":"static/js/6533.ec9a058f.chunk.js","mappings":"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","sources":["Pages/BoDisbursement/Manifest.js","features/Disbursement/containers/ButtonActionCon.js","Pages/BoDisbursement/PageDetail.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport _ from 'lodash'\nimport AppConfig from '../../core/Config/AppConfig'\nimport {toIdr,toDateTime} from '../../core/Utils/Utils'\n\nconst basePath = AppConfig.basePath\n\nconst entityName = 'DisbursementTransaction'\nconst entity = 'disbursementtransaction'\nconst serviceEntity = 'DisbursementTransaction'\n\nexport const redirectAfterCreate = '/disbursement-transaction-detail'\nexport const redirectAfterDelete = `/all-disbursement`\nexport const detailPageUrl = (id) => (`/disbursement-transaction-detail/${id}`)\nexport const upsertPageUrl = (id) => (`/form-disbursement-transaction${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/all-disbursement`)\nexport const createNewButtonLabel = 'Buat Kategori Baru'\nexport const createPageTitle = 'Buat Kategori'\nexport const listallPageTitle = 'All Disbursement'\nexport const detailPageTitle = 'Detail Disbursement Transaction'\nexport const upsertPageTitle = 'Form Disbursement Transaction'\n// export const createService = 'create' + serviceEntity\nexport const detailService = 'getDetailDisbursementTransaction'\n// export const updateService = 'update' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAllDisbursementStatus'\nexport const deleteService = 'delete' + serviceEntity +'ById'\n// export const fields = { _id: true, disburse_acquirer: true, total_amount: true, merchant_name: true, status: true, account_number: true, bank_code: true }\nexport const fields = { _id: true, merchant_name: true, email_merchant: true, disburse_acquirer: true, payment_date: true, total_amount: true, status: true, account_number: true, bank_code: true, created_dt: true, updated_dt: true, validated_dt: true, approved_dt: true, validated_by: { _id: true, full_name: true }, approved_by: { _id: true, full_name: true }, created_by: { _id: true, full_name: true }, bank_name: true }\nexport const getColumns = (history) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Recipient Name', accessor: 'merchant_name' },\n  { Header: 'Recipient Email', accessor: 'email_merchant' },\n  { Header: 'Total Amount', accessor: p=>toIdr(p.total_amount) },\n  { Header: 'Status', accessor: 'status' },\n  { Header: 'Account Number', accessor: 'account_number' },\n  { Header: 'Bank Code', accessor: 'bank_code' },\n  { Header: 'Bank Name', accessor: 'bank_name' },\n  { Header: 'Created by', accessor: 'created_by.full_name' },\n  { Header: 'Validated by', accessor: 'validated_by.full_name' },\n  { Header: 'Approved by', accessor: 'approved_by.full_name' },\n  { Header: 'payment date', accessor: p =>{\n    console.log(\"data pnya>>>>\",p)\n    // 'payment_date'\n    return p.payment_date == 'null' ? '-' : p.payment_date \n  }}\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { injectIntl } from 'react-intl'\n// import NeedApprovalActions from '../redux'\n\nconst TableHeaderCon = ({\n  history,\n  id,\n  dataDetail,\n  merchantId,\n  deleteService,\n  upsertPageUrl,\n  userId\n}) => {\n  return (\n    <>\n      {dataDetail && dataDetail.status === 'OPEN' && (dataDetail.created_by || {})._id === userId && deleteService && <button style={{ width: 100 }} type='button' className='btn bg-gradient-danger' data-toggle='modal' data-target='#modal-danger'>Hapus</button>}\n      {dataDetail && dataDetail.status === 'OPEN' && (dataDetail.created_by || {})._id === userId && upsertPageUrl(id) && <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(upsertPageUrl(id))} type='button' className='btn bg-gradient-primary'>Ubah</button>}\n      {(dataDetail && upsertPageUrl()) && <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(upsertPageUrl())} type='button' className='btn bg-gradient-info'>Buat</button>}\n    </>\n  )\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    merchantId: state.myprofile.merchant.id,\n    userId: state.myprofile.user_id\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    // needapprovalCheckboxSubmitReject: data => dispatch(NeedApprovalActions.needapprovalCheckboxSubmitReject(data)),\n    // needapprovalCheckboxSubmitApprove: data => dispatch(NeedApprovalActions.needapprovalCheckboxSubmitApprove(data))\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(TableHeaderCon))\n","import React from 'react'\nimport { injectIntl } from 'react-intl'\nimport _ from 'lodash'\nimport { Detail, CardWrapperCon, Table, Filter } from '../../core/features/TablePagination'\n// import { path } from 'ramda'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { detailService, fields, deleteService, detailPageTitle, listallPageTitle, listallPageUrl, upsertPageUrl, redirectAfterDelete } from './Manifest'\nimport MerchanKeyManifest from '../MerchantKey/Manifest'\nimport Moment from 'moment'\nimport AppConfig from '../../core/Config/AppConfig'\nimport { ButtonActionCon } from '../../features/Disbursement'\n// import AppConfig from '../../core/Config/AppConfig'\nimport { useHistory  } from 'react-router-dom'\nimport { useDispatch,useSelector }  from 'react-redux'\nimport TablepaginationActions from '../../core/features/TablePagination/redux'\nimport {path} from 'ramda'\nimport {toIdr,toDateTime} from '../../core/Utils/Utils'\n\nconst DetailContent = (props) => {\n  const {\n    dataDetail,\n    formTitle,\n    match,\n    id\n  } = props\n  let createdAt = Moment(dataDetail.created_dt || 0)\n  if (createdAt && dataDetail.created_dt !== null) createdAt = createdAt.format('YYYY-MM-DD HH:mm:ss')\n  else createdAt = '-'\n  let updatedAt = Moment(dataDetail.updated_dt || 0)\n  if (updatedAt && dataDetail.updated_dt !== null) updatedAt = updatedAt.format('YYYY-MM-DD HH:mm:ss')\n  else updatedAt = '-'\n\n  const paginationConfig = {\n    serviceName: MerchanKeyManifest.listallService,\n    fields: MerchanKeyManifest.fields\n  }\n\n  const history = useHistory()\n  React.useEffect(() => {\n    if(_.isUndefined(id) || _.isNull(id) )history.push('/all-disbursement')\n  }, [])\n  \n  return (\n    <>\n      <div className='row'>\n        <div className='col-sm-10'>\n          <CardWrapperCon formTitle={formTitle}>\n            <dl>\n              <dt>Total Amount</dt>\n              <dd>{toIdr(dataDetail.total_amount)}</dd>\n              <dt>Reference Number</dt>\n              <dd>{dataDetail.ref_no || '-'}</dd>\n              <hr />\n              <dt>Account number</dt>\n              <dd>{dataDetail.account_number || '-'}</dd>\n              <dt>Account Name</dt>\n              <dd>{dataDetail.account_name || '-'}</dd>\n              <hr />\n              <dt>Kode Bank</dt>\n              <dd>{dataDetail.bank_code || '-'}</dd>\n              <dt>Nama Bank</dt>\n              <dd>{dataDetail.merchant_name || '-'}</dd>\n              <hr/>\n              <dt>Recipient Email</dt>\n              <dd>{dataDetail.merchant_email || '-'}</dd>\n              <dt>Recipient Name</dt>\n              <dd>{dataDetail.merchant_name || '-'}</dd>\n              <hr/>\n              <dt>Keterangan</dt>\n              <dd>{dataDetail.description || '-'}</dd>\n              <hr />\n              <dt>Status</dt>\n              <dd>{dataDetail.status || '-'}</dd>\n              <dt>Disbursement Acquirer</dt>\n              <dd>{dataDetail.disburse_acquirer || '-'}</dd>\n              <hr />\n              <dt>Dibuat oleh</dt>\n              <dd>{path(['created_by','full_name'],dataDetail) || '-'}</dd>\n              <dt>Tanggal Pembuatan</dt>\n              <dd>{toDateTime(dataDetail.created_dt)}</dd>\n              <dt>Tanggal Diperbaharui</dt>\n              <dd>{toDateTime(dataDetail.updated_dt)}</dd>\n              <hr />\n              <dt>Disetujui oleh</dt>\n              <dd>{path(['approved_by','full_name'],dataDetail) || '-'}</dd>\n              <dt>Tanggal Disetuji</dt>\n              <dd>{toDateTime(dataDetail.approved_dt)}</dd>\n              <hr />\n              <dt>Divalidasi oleh</dt>\n              <dd>{path(['validated_by','full_name'],dataDetail) || '-'}</dd>\n              <dt>Tanggal Validasi</dt>\n              <dd>{toDateTime(dataDetail.validated_dt)}</dd>\n            </dl>\n          </CardWrapperCon>\n        </div>\n      </div>\n    </>\n  )\n}\n\nfunction Comp (props) {\n  const { match, history } = props\n\n  const dispatch = useDispatch()\n\n  //SET PAYLOAD FOR DELETE SERVICE\n  const _id = match.params._id\n  const merchant_id = String(useSelector(state=>state.myprofile.merchant.id))\n  const user_id = useSelector(state=>state.myprofile.user_id)\n  \n  React.useEffect(() => {\n      dispatch(TablepaginationActions.setDeletePayload({_id,merchant_id,user_id}))  \n  }, [])\n\n  return (\n    <ContentWrapper\n      pageTitle={detailPageTitle}\n      breadcrumb={[\n        { title: 'Beranda', link: AppConfig.appHomePage },\n        { title: listallPageTitle, link: listallPageUrl() },\n        { title: detailPageTitle, link: null, isActive: true }\n      ]}\n      contentHeaderTitle={detailPageTitle}\n      isNeedLoggedin\n    >\n      <div className='row'>\n        <div className='col-md-12'>\n          <Detail\n            detailServiceName={detailService}\n            deleteServiceName={deleteService}\n            fields={fields}\n            id={match.params._id}\n            formTitle={detailPageTitle}\n            redirectAfterDelete={redirectAfterDelete}\n            updatePageUrl={upsertPageUrl(match.params._id)}\n            createPageUrl={upsertPageUrl()}\n            withoutWrapper\n            apiVersion={2}\n            buttonAction={({ dataDetail }) => {\n              return (\n                <ButtonActionCon\n                  history={history}\n                  id={match.params._id}\n                  dataDetail={dataDetail}\n                  deleteService={deleteService}\n                  upsertPageUrl={upsertPageUrl}\n                />)\n              // return (\n              //   <>\n              //     {dataDetail && dataDetail.status === 'OPEN' && deleteService && <button style={{ width: 100 }} type='button' className='btn bg-gradient-danger' data-toggle='modal' data-target='#modal-danger'>Hapus</button>}\n              //     {dataDetail && dataDetail.status === 'OPEN' && upsertPageUrl(match.params._id) && <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(upsertPageUrl(match.params._id))} type='button' className='btn bg-gradient-primary'>Ubah</button>}\n              //     {(dataDetail && upsertPageUrl()) && <button style={{ width: 100, marginLeft: 5 }} onClick={() => history.push(upsertPageUrl())} type='button' className='btn bg-gradient-info'>Buat</button>}\n              //   </>\n              // )\n            }}\n          >\n            <DetailContent formTitle={detailPageTitle} history={history} match={match} />\n          </Detail>\n        </div>\n      </div>\n\n    </ContentWrapper>\n  )\n}\nexport default injectIntl(Comp)\n"],"names":["basePath","AppConfig","serviceEntity","redirectAfterCreate","redirectAfterDelete","upsertPageUrl","id","listallPageUrl","listallPageTitle","detailPageTitle","upsertPageTitle","detailService","upsertService","listallService","deleteService","fields","_id","merchant_name","email_merchant","disburse_acquirer","payment_date","total_amount","status","account_number","bank_code","created_dt","updated_dt","validated_dt","approved_dt","validated_by","full_name","approved_by","created_by","bank_name","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","toIdr","console","log","connect","state","ownProps","merchantId","myprofile","merchant","userId","user_id","dispatch","injectIntl","dataDetail","style","width","marginLeft","onClick","push","DetailContent","props","formTitle","match","createdAt","Moment","format","updatedAt","MerchanKeyManifest","useHistory","React","_","ref_no","account_name","merchant_email","description","path","toDateTime","useDispatch","params","merchant_id","String","useSelector","TablepaginationActions","ContentWrapper","pageTitle","breadcrumb","title","link","isActive","contentHeaderTitle","isNeedLoggedin","detailServiceName","deleteServiceName","updatePageUrl","createPageUrl","withoutWrapper","apiVersion","buttonAction","ButtonActionCon"],"sourceRoot":""}