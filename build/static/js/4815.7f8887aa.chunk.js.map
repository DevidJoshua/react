{"version":3,"file":"static/js/4815.7f8887aa.chunk.js","mappings":"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","sources":["Pages/CustomerEmail/Manifest.js","Pages/CustomerEmail/PageCreate.js","Pages/EmailBatch/Manifest.js"],"sourcesContent":["const entityName = 'CustomerEmail'\nconst entity = 'customeremail'\nconst serviceEntity = 'CustomerEmail'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const updatePageUrl = (id) => (`/${entity}/update/${id}`)\nexport const createPageUrl = ({ batchId }) => (`/${entity}/create/${batchId}`)\nexport const createNewButtonLabel = 'label-create_customer_email'\nexport const createPageTitle = 'label-create_customer_email'\nexport const listallPageTitle = 'Email Customer'\nexport const detailPageTitle = 'Detail Email Customer'\nexport const updatePageTitle = 'Update ' + entityName\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const updateService = 'update' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const listallByBatchIdService = 'getAll' + serviceEntity + 'sByBatchId'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,email,batch_id,created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  // {\n  //   Header: 'Act',\n  //   accessor: '_id',\n  //   Cell: p => (\n  //     <div className='btn-group'>\n  //       <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n  //         <span className='sr-only'>Toggle Dropdown</span>\n  //       </button>\n  //       <div className='dropdown-menu' role='menu'>\n  //         <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n  //       </div>\n  //     </div>)\n  // },\n  { Header: 'Email', accessor: 'email' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  updatePageUrl,\n  createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  updatePageTitle,\n  createService,\n  detailService,\n  updateService,\n  listallService,\n  listallByBatchIdService,\n  deleteService,\n  fields,\n  getColumns\n}\n","import React, { useEffect } from 'react'\nimport { Create as Createform } from '../../core/features/TablePagination'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { createService, fields, createPageTitle } from './Manifest'\nimport ManifestEmailBatch from '../EmailBatch/Manifest'\nimport AppConfig from '../../core/Config/AppConfig'\n\nconst paginationConfig = {\n  serviceName: createService,\n  fields: fields\n}\n\nlet tablepaginationOnChangeFormFunc = null\nfunction Comp (props) {\n  const { history, match } = props\n\n  useEffect(() => {\n    tablepaginationOnChangeFormFunc({ serviceName: paginationConfig.serviceName, fieldName: 'batch_id', fieldValue: match.params.batch_id || '' })\n  })\n\n  return (\n    <ContentWrapper\n      pageTitle={createPageTitle}\n      breadcrumb={[{ title: 'Beranda', link: AppConfig.appHomePage }, { title: 'Daftar Email Blast', link: '/emailblast' }, { title: 'Buat Daftar Email Customer', link: null, isActive: true }]}\n      contentHeaderTitle={createPageTitle}\n      isNeedLoggedin\n    >\n      <div className='row'>\n        <div className='col-md-12'>\n          <Createform\n            formTitle={createPageTitle}\n            paginationConfig={paginationConfig}\n            redirectAfterCreateToParent={`${ManifestEmailBatch.redirectAfterCreate}/${match.params.batch_id}`}\n            gotoParent\n            child={(tablepaginationOnChangeForm) => {\n              tablepaginationOnChangeFormFunc = tablepaginationOnChangeForm\n              return (\n                <div className='row'>\n                  <div className='col-sm-6'>\n                    <div className='form-group'>\n                      <label htmlFor='title'>Email</label>\n                      <input type='text' className='form-control' id='name' placeholder='Masukkan judul grup email customer' onChange={e => tablepaginationOnChangeForm({ serviceName: paginationConfig.serviceName, fieldName: 'email', fieldValue: e.target.value })} />\n                    </div>\n                  </div>\n                </div>\n              )\n            }}\n            footerCard={({ tablepaginationSubmitForm, payload }) => {\n              return (\n                <>\n                  <button style={{ width: 100 }} type='button' className='btn bg-gradient-warning' onClick={e => history.goBack()}>Batal</button>\n                  <button\n                    style={{ width: 100, marginLeft: 5 }} type='button' className='btn bg-gradient-primary' onClick={(e) => tablepaginationSubmitForm({\n                      fields: paginationConfig.fields,\n                      payload,\n                      serviceName: paginationConfig.serviceName,\n                      history,\n                      redirectAfterCreateToParent: `${ManifestEmailBatch.redirectAfterCreate}/${match.params.batch_id}`\n                    })}\n                  >Kirim\n                  </button>\n                </>\n              )\n            }}\n          />\n        </div>\n      </div>\n    </ContentWrapper>\n  )\n}\nexport default Comp\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\n// const entityName = 'EmailBatch'\nconst entity = 'emailbatch'\nconst serviceEntity = 'EmailBatch'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const upsertPageUrl = (id) => (`/${entity}/upsert${id ? '/' + id : ''}`)\nexport const listallPageUrl = () => (`/${entity}`)\nexport const createNewButtonLabel = 'Buat Grup Email Customer'\nexport const createPageTitle = 'Buat Grup Email Customer'\nexport const listallPageTitle = 'Email Grup'\nexport const detailPageTitle = 'Detail Email Grup'\nexport const upsertPageTitle = 'Form Grup Email'\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const upsertService = 'upsert' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,customer_email_ids{_id, email},file_ids{_id, filename, filenameorigin, file_type},title,description,created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: '',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'Judul', accessor: 'title' },\n  { Header: 'Keterangan', accessor: 'description' }\n  // {\n  //   Header: 'Toko',\n  //   accessor: 'toko_id',\n  //   Cell: d => {\n  //     // let data = Moment(d.cell.value)\n  //     // if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     // else data = ''\n  //     const toko = (_.map(d.cell.value || [], (v, k) => v.name) || []).join(', ')\n  //     return (<span>{`${toko}`}</span>)\n  //   }\n  // }\n  // {\n  //   Header: 'Terakhir Dikirim',\n  //   accessor: 'last_sent',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dibuat',\n  //   accessor: 'created_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // {\n  //   Header: 'Tanggal Dirubah',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'Dibuat Oleh', accessor: 'created_by.full_name' },\n  // { Header: 'Dirubah Oleh', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  upsertPageUrl,\n  // createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  // updatePageTitle,\n  // createService,\n  detailService,\n  // updateService,\n  listallService,\n  deleteService,\n  upsertService,\n  fields,\n  getColumns,\n  listallPageUrl,\n  upsertPageTitle\n}\n"],"names":["entity","createPageTitle","createService","fields","redirectAfterCreate","redirectAfterDelete","detailPageUrl","id","updatePageUrl","createPageUrl","batchId","createNewButtonLabel","listallPageTitle","detailPageTitle","updatePageTitle","detailService","updateService","listallService","listallByBatchIdService","deleteService","getColumns","history","Header","accessor","paginationConfig","serviceName","tablepaginationOnChangeFormFunc","props","match","useEffect","fieldName","fieldValue","params","batch_id","pageTitle","breadcrumb","title","link","AppConfig","isActive","contentHeaderTitle","isNeedLoggedin","className","formTitle","redirectAfterCreateToParent","ManifestEmailBatch","gotoParent","child","tablepaginationOnChangeForm","htmlFor","type","placeholder","onChange","e","target","value","footerCard","tablepaginationSubmitForm","payload","style","width","onClick","goBack","marginLeft","basePath","upsertPageUrl","upsertPageTitle","upsertService","Cell","p","role","to","cell","listallPageUrl"],"sourceRoot":""}