{"version":3,"file":"static/js/716.3d7daac6.chunk.js","mappings":"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","sources":["core/Pages/Tag/Manifest.js","core/Pages/Tag/PageList.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Moment from 'moment'\nimport AppConfig from '../../Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'Tag'\nconst entity = 'tag'\nconst serviceEntity = 'Tag'\n\nexport const redirectAfterCreate = '/' + entity + '/detail'\nexport const redirectAfterDelete = '/' + entity\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const updatePageUrl = (id) => (`/${entity}/update/${id}`)\nexport const createPageUrl = () => (`/${entity}/create`)\nexport const createNewButtonLabel = 'Create New ' + entityName\nexport const createPageTitle = 'Create New ' + entityName\nexport const listallPageTitle = entityName + 's'\nexport const detailPageTitle = entityName + ' Detail'\nexport const updatePageTitle = 'Update ' + entityName\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const updateService = 'update' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,name,created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = (history) => [\n  {\n    Header: 'Act',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'name', accessor: 'name' },\n  {\n    Header: 'created_at',\n    accessor: 'created_at',\n    Cell: d => {\n      let data = Moment(d.cell.value)\n      if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      else data = ''\n      return (<span>{`${data}`}</span>)\n    }\n  },\n  {\n    Header: 'updated_at',\n    accessor: 'updated_at',\n    Cell: d => {\n      let data = Moment(d.cell.value)\n      if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n      else data = ''\n      return (<span>{`${data}`}</span>)\n    }\n  },\n  { Header: 'created by', accessor: 'created_by.full_name' },\n  { Header: 'updated by', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  updatePageUrl,\n  createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  updatePageTitle,\n  createService,\n  detailService,\n  updateService,\n  listallService,\n  deleteService,\n  fields,\n  getColumns\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { path } from 'ramda'\nimport ContentWrapper from '../../Components/Layout/ContentWrapper'\nimport { Table, Filter } from '../../features/TablePagination'\nimport AppConfig from '../../Config/AppConfig'\nimport { listallService, fields, listallPageTitle, createPageUrl, createNewButtonLabel, getColumns } from './Manifest'\nclass Comp extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      columns: getColumns(props.history)\n    }\n  }\n\n  render () {\n    const paginationConfig = {\n      serviceName: listallService,\n      fields: fields\n    }\n    const { columns } = this.state\n    return (\n      <ContentWrapper\n        pageTitle={listallPageTitle}\n        breadcrumb={[{ title: 'Beranda', link: AppConfig.appHomePage }, { title: listallPageTitle, link: null, isActive: true }]}\n        contentHeaderTitle={listallPageTitle}\n        isNeedLoggedin\n      >\n        <div className='row'>\n          <div className='col-md-12'>\n            <Filter\n              paginationConfig={paginationConfig}\n              child={(tablepaginationOnChangeFilter, filter) => (\n                <div className='row'>\n                  <div className='col-sm-6'>\n                    <div className='form-group'>\n                      <label htmlFor='string_to_search'>Search</label>\n                      <input type='text' className='form-control' value={path(['string_to_search'], filter) || ''} id='string_to_search' placeholder='Enter some text' onChange={e => tablepaginationOnChangeFilter({ serviceName: paginationConfig.serviceName, fieldName: 'string_to_search', fieldValue: e.target.value })} />\n                    </div>\n                  </div>\n                </div>\n              )}\n            />\n            <Table\n              paginationConfig={paginationConfig}\n              columns={columns}\n              createHref={createPageUrl()}\n              createNewButtonLabel={createNewButtonLabel}\n            />\n          </div>\n        </div>\n      </ContentWrapper>\n    )\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userPrivileges: state.myprofile.user_privileges\n  }\n}\nexport default connect(mapStateToProps)(Comp)\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","redirectAfterDelete","detailPageUrl","id","updatePageUrl","createPageUrl","createNewButtonLabel","listallPageTitle","entityName","detailPageTitle","updatePageTitle","detailService","updateService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","d","data","Moment","isValid","format","createPageTitle","createService","Comp","props","state","columns","paginationConfig","serviceName","this","pageTitle","breadcrumb","title","link","isActive","contentHeaderTitle","isNeedLoggedin","child","tablepaginationOnChangeFilter","filter","htmlFor","path","placeholder","onChange","e","fieldName","fieldValue","target","createHref","Component","connect","ownProps","userPrivileges","myprofile","user_privileges"],"sourceRoot":""}