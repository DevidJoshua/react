{"version":3,"file":"static/js/9946.7894dc4b.chunk.js","mappings":"4hBAGMA,EAAWC,EAAAA,EAAAA,SAGXC,EAAS,WAGFC,EAAsB,SAACC,GAAD,MAAa,oBAA4BA,GAC/DC,EAAsB,SAACD,GAAD,MAAa,sBAAwBA,GAC3DE,EAAgB,SAACC,GAAD,iBAAaL,EAAb,mBAA8BK,IAC9CC,EAAgB,SAACD,GAAD,iBAAaL,EAAb,mBAA8BK,IAC9CE,EAAgB,4BAAWP,EAAX,YAChBQ,EAAuB,sBAEvBC,EAAmB,YACnBC,EAAkBC,kBAClBC,EAAkB,kBAClBC,EAAgB,iBAEhBC,EAAgB,oBAChBC,EAAiB,kBACjBC,EAAgB,iBAChBC,EAAS,8IACTC,EAAa,SAAC,GAAD,EAAGC,QAAH,IAAYjB,EAAZ,EAAYA,OAAZ,MAAyB,CACjD,CACEkB,OAAQ,IACRC,SAAU,MACVC,KAAM,SAAAC,GAAC,OACL,iBAAKC,UAAU,YAAf,WACE,mBAAQC,KAAK,SAASD,UAAU,gDAAgD,cAAY,WAA5F,UACE,iBAAMA,UAAU,UAAhB,gCAEF,gBAAKA,UAAU,gBAAgBE,KAAK,OAApC,UACE,SAAC,KAAD,CAAMF,UAAU,gBAAgBG,GAAE,UAAK7B,GAAL,OAAgBG,EAAoBC,GAApC,YAA+CqB,EAAEK,KAAKC,OAAxF,2BAIR,CAAET,OAAQ,OAAQC,SAAU,qBAC5B,CAAED,OAAQ,QAASC,SAAU,mBAkB/B,MACEpB,oBAAAA,EACAE,oBAAAA,EACAC,cAAAA,EACAE,cAAAA,EACAC,cAAAA,EACAC,qBAAAA,EACAsB,gBAlD6B,oBAmD7BrB,iBAAAA,EACAC,gBAAAA,EACAE,gBAAAA,EACAmB,cAjD2B,iBAkD3BjB,cAAAA,EACAD,cAAAA,EACAE,eAAAA,EACAC,cAAAA,EACAC,OAAAA,EACAC,WAAAA,I,yJCrEIc,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAaC,GAAQ,IAAD,yBAClB,cAAMA,IACDC,MAAQ,CACXC,SAASjB,EAAAA,EAAAA,IAAWe,EAAMd,UAHV,EA6CnB,OAxCA,8BAED,WACE,IAAMiB,EAAmB,CACvBC,YAAatB,EAAAA,GACbE,OAAQA,EAAAA,IAEFkB,EAAYG,KAAKJ,MAAjBC,QACR,OACE,SAAC,IAAD,CACEI,UAAW9B,EAAAA,GACX+B,WAAY,CAAC,CAAEC,MAAO,OAAQC,KAAM3C,EAAAA,EAAAA,aAAyB,CAAE0C,MAAOhC,EAAAA,GAAkBiC,KAAM,KAAMC,UAAU,IAC9GC,mBAAoBnC,EAAAA,GACpBoC,gBAAc,EAJhB,UAME,gBAAKrB,UAAU,MAAf,UACE,iBAAKA,UAAU,YAAf,WACE,SAAC,KAAD,CACEY,iBAAkBA,EAClBU,MAAO,SAACC,EAA+BC,GAAhC,OACL,gBAAKxB,UAAU,MAAf,UACE,gBAAKA,UAAU,WAAf,UACE,iBAAKA,UAAU,aAAf,WACE,kBAAOyB,QAAQ,mBAAf,qBACA,kBAAOxB,KAAK,OAAOD,UAAU,eAAeK,OAAOqB,EAAAA,EAAAA,GAAK,CAAC,oBAAqBF,IAAW,GAAI3C,GAAG,mBAAmB8C,YAAY,kBAAkBC,SAAU,SAAAC,GAAC,OAAIN,EAA8B,CAAEV,YAAaD,EAAiBC,YAAaiB,UAAW,mBAAoBC,WAAYF,EAAEG,OAAO3B,sBAMzS,SAAC,KAAD,CACEO,iBAAkBA,EAClBD,QAASA,EACTsB,YAAYlD,EAAAA,EAAAA,MACZC,qBAAsBA,EAAAA,gBAMjC,EA9CGwB,CAAa0B,EAAAA,WAgDnB","sources":["Pages/TokoTeam/Manifest.js","Pages/TokoTeam/PageList.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AppConfig from '../../core/Config/AppConfig'\nconst basePath = AppConfig.basePath\n\nconst entityName = 'TokoTeam'\nconst entity = 'tokoteam'\nconst serviceEntity = 'TokoTeam'\n\nexport const redirectAfterCreate = (tokoId) => ('/' + entity + '/detail/' + tokoId)\nexport const redirectAfterDelete = (tokoId) => ('/tokoonline/detail/' + tokoId)\nexport const detailPageUrl = (id) => (`/${entity}/detail/${id}`)\nexport const updatePageUrl = (id) => (`/${entity}/update/${id}`)\nexport const createPageUrl = () => (`/${entity}/create`)\nexport const createNewButtonLabel = 'Create New ' + entityName\nexport const createPageTitle = 'Add a team member'\nexport const listallPageTitle = 'Toko Team'\nexport const detailPageTitle = entityName + ' Detail'\nexport const updatePageTitle = 'Update ' + entityName\nexport const updateService = 'update' + serviceEntity\nexport const createService = 'create' + serviceEntity\nexport const detailService = 'getDetail' + serviceEntity\nexport const listallService = 'getAll' + serviceEntity + 's'\nexport const deleteService = 'delete' + serviceEntity\nexport const fields = '_id,user_id{_id, full_name, email},toko_id{_id, name},role_id{_id, title},created_at,updated_at,created_by{full_name},updated_by{full_name}'\nexport const getColumns = ({ history, tokoId }) => [\n  {\n    Header: ' ',\n    accessor: '_id',\n    Cell: p => (\n      <div className='btn-group'>\n        <button type='button' className='btn btn-default dropdown-toggle dropdown-icon' data-toggle='dropdown'>\n          <span className='sr-only'>Toggle Dropdown</span>\n        </button>\n        <div className='dropdown-menu' role='menu'>\n          <Link className='dropdown-item' to={`${basePath}${redirectAfterCreate(tokoId)}/${p.cell.value}`}>Detail</Link>\n        </div>\n      </div>)\n  },\n  { Header: 'nama', accessor: 'user_id.full_name' },\n  { Header: 'email', accessor: 'user_id.email' }\n  // { Header: 'name', accessor: 'toko_id.name' },\n  // {\n  //   Header: 'updated_at',\n  //   accessor: 'updated_at',\n  //   Cell: d => {\n  //     let data = Moment(d.cell.value)\n  //     if (data && data.isValid()) data = data.format('YYYY-MM-DD HH:mm:ss')\n  //     else data = ''\n  //     return (<span>{`${data}`}</span>)\n  //   }\n  // },\n  // { Header: 'created by', accessor: 'created_by.full_name' }\n//   { Header: 'updated by', accessor: 'updated_by.full_name' }\n  // { Header: 'created at', accessor: 'created_at' },\n  // { Header: 'updated at', accessor: 'updated_at' }\n]\n\nexport default {\n  redirectAfterCreate,\n  redirectAfterDelete,\n  detailPageUrl,\n  updatePageUrl,\n  createPageUrl,\n  createNewButtonLabel,\n  createPageTitle,\n  listallPageTitle,\n  detailPageTitle,\n  updatePageTitle,\n  createService,\n  detailService,\n  updateService,\n  listallService,\n  deleteService,\n  fields,\n  getColumns\n}\n","import React, { Component } from 'react'\nimport { path } from 'ramda'\nimport ContentWrapper from '../../core/Components/Layout/ContentWrapper'\nimport { Table, Filter } from '../../core/features/TablePagination'\nimport { listallService, fields, listallPageTitle, createPageUrl, createNewButtonLabel, getColumns } from './Manifest'\nimport AppConfig from '../../core/Config/AppConfig'\nclass Comp extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      columns: getColumns(props.history)\n    }\n  }\n\n  render () {\n    const paginationConfig = {\n      serviceName: listallService,\n      fields: fields\n    }\n    const { columns } = this.state\n    return (\n      <ContentWrapper\n        pageTitle={listallPageTitle}\n        breadcrumb={[{ title: 'Home', link: AppConfig.appHomePage }, { title: listallPageTitle, link: null, isActive: true }]}\n        contentHeaderTitle={listallPageTitle}\n        isNeedLoggedin\n      >\n        <div className='row'>\n          <div className='col-md-12'>\n            <Filter\n              paginationConfig={paginationConfig}\n              child={(tablepaginationOnChangeFilter, filter) => (\n                <div className='row'>\n                  <div className='col-sm-6'>\n                    <div className='form-group'>\n                      <label htmlFor='string_to_search'>Search</label>\n                      <input type='text' className='form-control' value={path(['string_to_search'], filter) || ''} id='string_to_search' placeholder='Enter some text' onChange={e => tablepaginationOnChangeFilter({ serviceName: paginationConfig.serviceName, fieldName: 'string_to_search', fieldValue: e.target.value })} />\n                    </div>\n                  </div>\n                </div>\n              )}\n            />\n            <Table\n              paginationConfig={paginationConfig}\n              columns={columns}\n              createHref={createPageUrl()}\n              createNewButtonLabel={createNewButtonLabel}\n            />\n          </div>\n        </div>\n      </ContentWrapper>\n    )\n  }\n}\nexport default Comp\n"],"names":["basePath","AppConfig","entity","redirectAfterCreate","tokoId","redirectAfterDelete","detailPageUrl","id","updatePageUrl","createPageUrl","createNewButtonLabel","listallPageTitle","detailPageTitle","entityName","updatePageTitle","updateService","detailService","listallService","deleteService","fields","getColumns","history","Header","accessor","Cell","p","className","type","role","to","cell","value","createPageTitle","createService","Comp","props","state","columns","paginationConfig","serviceName","this","pageTitle","breadcrumb","title","link","isActive","contentHeaderTitle","isNeedLoggedin","child","tablepaginationOnChangeFilter","filter","htmlFor","path","placeholder","onChange","e","fieldName","fieldValue","target","createHref","Component"],"sourceRoot":""}