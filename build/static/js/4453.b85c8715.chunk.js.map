{"version":3,"file":"static/js/4453.b85c8715.chunk.js","mappings":"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","sources":["core/Pages/MyAccount/components/ModalChangePassword.js","core/Pages/MyAccount/PageMyAccount.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport ChangePasswordActions from '../../../features/ChangePassword/redux'\nimport { callErrorToast } from '../../../Utils/Utils'\n\nclass ModalChangePassword extends Component {\n    state={\n      err: '',\n      pass: '',\n      pass_new: '',\n      pass_new_conf: '',\n      seePass: false,\n      seePassConf: false,\n      seePassClass: 'fas fa-eye',\n      seePassConfClass: 'fas fa-eye'\n    }\n\n    constructor (props) {\n      super(props)\n      this._handleSubmit = this._handleSubmit.bind(this)\n    //   this._form = this._form.bind(this)\n    //   this._result = this._result.bind(this)\n    }\n\n    componentDidMount () {\n      this.props.reset()\n    }\n\n    _handleSubmit () {\n      const { pass, pass_new, pass_new_conf } = this.state\n      const { userId, doResult } = this.props\n      console.log('handle submit')\n      if (pass_new !== pass_new_conf) {\n        callErrorToast('Password konfirmasi tidak sama', 'error')\n        // this.setState({ err: 'Password doesn\\'t match' })\n      } else if (pass_new.length <= 5) {\n        callErrorToast('Gagal mengubah password. Panjang password minimal 5 karakter', 'error')\n      } else {\n        doResult({ password: pass, new_password: pass_new, userId })\n      }\n      this._clearAllInputs()\n    }\n    _clearAllInputs(){\n      document.querySelectorAll('[id=input]').forEach(element=>{\n            element.value = ''\n      })\n    }\n    \n    \n\n\n    render () {\n      const { error } = this.props\n      return (\n        <div className='modal fade' id='modal-change-password'>\n          <div className='z modal-dialog'>\n            <div className='modal-content bg-info'>\n              <form>\n                <div className='modal-header'>\n                  <h4 className='modal-title'>Ganti Kata Sandi</h4>\n                  <button type='button' className='close' data-dismiss='modal' aria-label='Close' onClick={()=>this._clearAllInputs()}>\n                    <span aria-hidden='true'>&times;</span>\n                  </button>\n                </div>\n                <div className='modal-body'>\n                  {!_.isEmpty(error) &&\n                    <div className='row'>\n                      <div className='col-12'>\n                        <div className='alert alert-danger' role='alert'><center>{error}</center></div>\n                      </div>\n                    </div>}\n                  {!_.isEmpty(this.state.err) &&\n                    <div className='row'>\n                      <div className='col-12'>\n                        <div className='alert alert-danger' role='alert'><center>{this.state.err}</center></div>\n                      </div>\n                    </div>}\n                  <div className='form-group'>\n                    <label>Kata Sandi Lama</label>\n                    <input type='password' className='form-control' id=\"input\"  placeholder='Kata Sandi Lama' onChange={(e) => this.setState({ pass: e.target.value })} required />\n                  </div>\n                  <div className='form-group'>\n                    <label>Kata Sandi Baru</label>\n                    <div className='input-group'>\n                      <input type={this.state.seePass ? 'text' : 'password'} id=\"input\" className='form-control' placeholder='Kata Sandi Baru' onChange={(e) => this.setState({ pass_new: e.target.value })} required />\n                      <div className='input-group-append'>\n                        <span className='input-group-text'>\n                          <i\n                            className={this.state.seePassClass} onClick={() => {\n                              if (this.state.seePass === false) { this.setState({ seePass: true, seePassClass: 'fas fa-eye-slash' }) } else { this.setState({ seePass: false, seePassClass: 'fas fa-eye' }) }\n                            }}\n                          />\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='form-group'>\n                    <label>Konfirmasi Kata sandi baru</label>\n                    <div className='input-group'>\n                      <input type={this.state.seePassConf ? 'text' : 'password'} id=\"input\" className='form-control' placeholder='Konfirmasi Password Baru' onChange={(e) => this.setState({ pass_new_conf: e.target.value })} required />\n                      <div className='input-group-append'>\n                        <span className='input-group-text'>\n                          <i\n                            className={this.state.seePassConfClass} onClick={() => {\n                              if (this.state.seePassConf === false) { this.setState({ seePassConf: true, seePassConfClass: 'fas fa-eye-slash' }) } else { this.setState({ seePassConf: false, seePassConfClass: 'fas fa-eye' }) }\n                            }}\n                          />\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className='modal-footer justify-content-between'>\n                  <button id='buttonCloseModal' type='button' className='btn btn-outline-light' data-dismiss='modal' onClick={()=>this._clearAllInputs()}>Batal</button>\n                  <button type='button' className='btn btn-outline-light' onClick={(e) => this._handleSubmit()}>Kirim</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    error: state.changepassword.errors,\n    userId: state.myprofile.user_id,\n    email: state.changepassword.email\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    doResult: data => dispatch(ChangePasswordActions.changepasswordSubmit(data)),\n    reset: data => dispatch(ChangePasswordActions.changepasswordResetForm())\n  }\n}\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(ModalChangePassword)\n","import React, { Component } from 'react'\n// import { Link } from 'react-router-dom'\nimport LoginCheck from '../../Containers/Login/LoginCheck'\n// PAGES\nimport ModalChangePassword from './components/ModalChangePassword'\n// PAGES\nimport MyAccountAction from '../../features/myaccount/redux'\nimport ContentHeader from '../../Components/ContentHeader'\nimport Helmet from 'react-helmet'\nimport AppConfig from '../../Config/AppConfig'\nimport { connect } from 'react-redux'\n\nclass PageMyAccount extends Component {\n  _clearAllInputs(){\n    document.querySelectorAll('[id=input]').forEach(element=>{\n          element.value = ''\n    })\n  }\n  render () {\n    const menu = [\n      { page: 'Ganti Kata Sandi', action: this.props.doResult({ page: 'changePassword' }), modalid: 'modal-change-password' }\n      // { page: 'Change Email', action: this.props.doResult({page:'changeEmail'}),modalid:'modal-change-email' }\n    ]\n    \n    return (\n      <>\n        <LoginCheck />\n        <Helmet>\n          <title>Akun Saya</title>\n          <body className='hold-transition sidebar-mini layout-fixed layout-navbar-fixed layout-footer-fixed' />\n        </Helmet>\n        <div className='xxcontent-wrapper'>\n          <ContentHeader\n            title='Akun Saya'\n            breadcrumb={[{ title: 'Beranda', link: AppConfig.appHomePage, active: true }, { title: 'Akun Saya', active: true }]}\n          />\n          <section className='content'>\n            {/* <ChangePassword /> */}\n            <div className='container-fluid'>\n              <div className='card card-primary'>\n                <div className='card-body'>\n                  <ul className='list-group list-group-unbordered mb-3'>\n                    <li className='list-group-item'>\n                      <b>Email</b> <span className='float-right'>{this.props.email}</span>\n                    </li>\n                    {menu.map((r, i) => {\n                      return (\n                        <li key={i} className='list-group-item'>\n                          <b>{r.page}</b> <span className='float-right btn btn-outline-secondary btn-sm' data-target={'#' + r.modalid} data-widget='control-sidebar' data-toggle='modal' onClick={()=>this._clearAllInputs()}>Ganti</span>\n                        </li>\n                      )\n                    })}\n\n                    {/* <li class=\"list-group-item\">\n                                              <b>Change Password</b> <a class=\"float-right btn btn-outline-secondary btn-sm\">Change</a>\n                                          </li>\n                                          {/* <li class=\"list-group-item\">\n                                              <b>Change Password</b> <a class=\"float-right btn btn-outline-secondary btn-sm\">Change</a>\n                                          </li>\n                                          <li class=\"list-group-item\">\n                                              <b>Change Email</b> <a class=\"float-right btn btn-outline-secondary btn-sm\">Change</a>\n                                          </li> */}\n\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n        <ModalChangePassword />\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log('mapStateToProps', state.dashboard)\n\n  return {\n    // error: state.rptransaction.errors,\n    // statusFetchUser: state.rptransaction.statu,\n    email: state.myprofile.email\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    doResult: data => dispatch(MyAccountAction.doEditAccount())\n  }\n}\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(PageMyAccount)\n"],"names":["ModalChangePassword","props","state","err","pass","pass_new","pass_new_conf","seePass","seePassConf","seePassClass","seePassConfClass","_handleSubmit","bind","this","reset","userId","doResult","console","log","callErrorToast","length","password","new_password","_clearAllInputs","document","querySelectorAll","forEach","element","value","error","className","id","type","onClick","_","role","placeholder","onChange","e","setState","target","required","Component","connect","ownProps","changepassword","errors","myprofile","user_id","email","dispatch","data","ChangePasswordActions","PageMyAccount","menu","page","action","modalid","LoginCheck","Helmet","ContentHeader","title","breadcrumb","link","AppConfig","active","map","r","i","dashboard","MyAccountAction"],"sourceRoot":""}